#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <semaphore.h>
#include <string.h>
#include <time.h>
#include <sys/time.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdarg.h>
#include <unistd.h>
#include <signal.h>
#include <limits.h>
#include <poll.h>
#include <sys/epoll.h>
#include <netdb.h>
#include <arpa/inet.h>
#include <error.h>
#include <errno.h>
#include <sys/ioctl.h>
#include <net/if.h> 

#include "sirik_core.h"
#include "libAsn.h"

#ifndef SIRIK_S1AP_18_3_ASN_H
#define SIRIK_S1AP_18_3_ASN_H

#pragma pack(push,4)


#define __si_s1ap__id_HandoverPreparation_ProcedureCode                                              0
#define __si_s1ap__id_HandoverResourceAllocation_ProcedureCode                                       1
#define __si_s1ap__id_HandoverNotification_ProcedureCode                                             2
#define __si_s1ap__id_PathSwitchRequest_ProcedureCode                                                3
#define __si_s1ap__id_HandoverCancel_ProcedureCode                                                   4
#define __si_s1ap__id_E_RABSetup_ProcedureCode                                                       5
#define __si_s1ap__id_E_RABModify_ProcedureCode                                                      6
#define __si_s1ap__id_E_RABRelease_ProcedureCode                                                     7
#define __si_s1ap__id_E_RABReleaseIndication_ProcedureCode                                           8
#define __si_s1ap__id_InitialContextSetup_ProcedureCode                                              9
#define __si_s1ap__id_Paging_ProcedureCode                                                           10
#define __si_s1ap__id_downlinkNASTransport_ProcedureCode                                             11
#define __si_s1ap__id_initialUEMessage_ProcedureCode                                                 12
#define __si_s1ap__id_uplinkNASTransport_ProcedureCode                                               13
#define __si_s1ap__id_Reset_ProcedureCode                                                            14
#define __si_s1ap__id_ErrorIndication_ProcedureCode                                                  15
#define __si_s1ap__id_NASNonDeliveryIndication_ProcedureCode                                         16
#define __si_s1ap__id_S1Setup_ProcedureCode                                                          17
#define __si_s1ap__id_UEContextReleaseRequest_ProcedureCode                                          18
#define __si_s1ap__id_DownlinkS1cdma2000tunnelling_ProcedureCode                                     19
#define __si_s1ap__id_UplinkS1cdma2000tunnelling_ProcedureCode                                       20
#define __si_s1ap__id_UEContextModification_ProcedureCode                                            21
#define __si_s1ap__id_UECapabilityInfoIndication_ProcedureCode                                       22
#define __si_s1ap__id_UEContextRelease_ProcedureCode                                                 23
#define __si_s1ap__id_eNBStatusTransfer_ProcedureCode                                                24
#define __si_s1ap__id_MMEStatusTransfer_ProcedureCode                                                25
#define __si_s1ap__id_DeactivateTrace_ProcedureCode                                                  26
#define __si_s1ap__id_TraceStart_ProcedureCode                                                       27
#define __si_s1ap__id_TraceFailureIndication_ProcedureCode                                           28
#define __si_s1ap__id_ENBConfigurationUpdate_ProcedureCode                                           29
#define __si_s1ap__id_MMEConfigurationUpdate_ProcedureCode                                           30
#define __si_s1ap__id_LocationReportingControl_ProcedureCode                                         31
#define __si_s1ap__id_LocationReportingFailureIndication_ProcedureCode                               32
#define __si_s1ap__id_LocationReport_ProcedureCode                                                   33
#define __si_s1ap__id_OverloadStart_ProcedureCode                                                    34
#define __si_s1ap__id_OverloadStop_ProcedureCode                                                     35
#define __si_s1ap__id_WriteReplaceWarning_ProcedureCode                                              36
#define __si_s1ap__id_eNBDirectInformationTransfer_ProcedureCode                                     37
#define __si_s1ap__id_MMEDirectInformationTransfer_ProcedureCode                                     38
#define __si_s1ap__id_PrivateMessage_ProcedureCode                                                   39
#define __si_s1ap__id_eNBConfigurationTransfer_ProcedureCode                                         40
#define __si_s1ap__id_MMEConfigurationTransfer_ProcedureCode                                         41
#define __si_s1ap__id_CellTrafficTrace_ProcedureCode                                                 42
#define __si_s1ap__id_Kill_ProcedureCode                                                             43
#define __si_s1ap__id_downlinkUEAssociatedLPPaTransport_ProcedureCode                                44
#define __si_s1ap__id_uplinkUEAssociatedLPPaTransport_ProcedureCode                                  45
#define __si_s1ap__id_downlinkNonUEAssociatedLPPaTransport_ProcedureCode                             46
#define __si_s1ap__id_uplinkNonUEAssociatedLPPaTransport_ProcedureCode                               47
#define __si_s1ap__id_UERadioCapabilityMatch_ProcedureCode                                           48
#define __si_s1ap__id_PWSRestartIndication_ProcedureCode                                             49
#define __si_s1ap__id_E_RABModificationIndication_ProcedureCode                                      50
#define __si_s1ap__id_PWSFailureIndication_ProcedureCode                                             51
#define __si_s1ap__id_RerouteNASRequest_ProcedureCode                                                52
#define __si_s1ap__id_UEContextModificationIndication_ProcedureCode                                  53
#define __si_s1ap__id_ConnectionEstablishmentIndication_ProcedureCode                                54
#define __si_s1ap__id_UEContextSuspend_ProcedureCode                                                 55
#define __si_s1ap__id_UEContextResume_ProcedureCode                                                  56
#define __si_s1ap__id_NASDeliveryIndication_ProcedureCode                                            57
#define __si_s1ap__id_RetrieveUEInformation_ProcedureCode                                            58
#define __si_s1ap__id_UEInformationTransfer_ProcedureCode                                            59
#define __si_s1ap__id_eNBCPRelocationIndication_ProcedureCode                                        60
#define __si_s1ap__id_MMECPRelocationIndication_ProcedureCode                                        61
#define __si_s1ap__id_SecondaryRATDataUsageReport_ProcedureCode                                      62
#define __si_s1ap__id_UERadioCapabilityIDMapping_ProcedureCode                                       63
#define __si_s1ap__id_HandoverSuccess_ProcedureCode                                                  64
#define __si_s1ap__id_eNBEarlyStatusTransfer_ProcedureCode                                           65
#define __si_s1ap__id_MMEEarlyStatusTransfer_ProcedureCode                                           66



#define id_HandoverPreparation_ProcedureCode                                                         0
#define id_HandoverResourceAllocation_ProcedureCode                                                  1
#define id_HandoverNotification_ProcedureCode                                                        2
#define id_PathSwitchRequest_ProcedureCode                                                           3
#define id_HandoverCancel_ProcedureCode                                                              4
#define id_E_RABSetup_ProcedureCode                                                                  5
#define id_E_RABModify_ProcedureCode                                                                 6
#define id_E_RABRelease_ProcedureCode                                                                7
#define id_E_RABReleaseIndication_ProcedureCode                                                      8
#define id_InitialContextSetup_ProcedureCode                                                         9
#define id_Paging_ProcedureCode                                                                      10
#define id_downlinkNASTransport_ProcedureCode                                                        11
#define id_initialUEMessage_ProcedureCode                                                            12
#define id_uplinkNASTransport_ProcedureCode                                                          13
#define id_Reset_ProcedureCode                                                                       14
#define id_ErrorIndication_ProcedureCode                                                             15
#define id_NASNonDeliveryIndication_ProcedureCode                                                    16
#define id_S1Setup_ProcedureCode                                                                     17
#define id_UEContextReleaseRequest_ProcedureCode                                                     18
#define id_DownlinkS1cdma2000tunnelling_ProcedureCode                                                19
#define id_UplinkS1cdma2000tunnelling_ProcedureCode                                                  20
#define id_UEContextModification_ProcedureCode                                                       21
#define id_UECapabilityInfoIndication_ProcedureCode                                                  22
#define id_UEContextRelease_ProcedureCode                                                            23
#define id_eNBStatusTransfer_ProcedureCode                                                           24
#define id_MMEStatusTransfer_ProcedureCode                                                           25
#define id_DeactivateTrace_ProcedureCode                                                             26
#define id_TraceStart_ProcedureCode                                                                  27
#define id_TraceFailureIndication_ProcedureCode                                                      28
#define id_ENBConfigurationUpdate_ProcedureCode                                                      29
#define id_MMEConfigurationUpdate_ProcedureCode                                                      30
#define id_LocationReportingControl_ProcedureCode                                                    31
#define id_LocationReportingFailureIndication_ProcedureCode                                          32
#define id_LocationReport_ProcedureCode                                                              33
#define id_OverloadStart_ProcedureCode                                                               34
#define id_OverloadStop_ProcedureCode                                                                35
#define id_WriteReplaceWarning_ProcedureCode                                                         36
#define id_eNBDirectInformationTransfer_ProcedureCode                                                37
#define id_MMEDirectInformationTransfer_ProcedureCode                                                38
#define id_PrivateMessage_ProcedureCode                                                              39
#define id_eNBConfigurationTransfer_ProcedureCode                                                    40
#define id_MMEConfigurationTransfer_ProcedureCode                                                    41
#define id_CellTrafficTrace_ProcedureCode                                                            42
#define id_Kill_ProcedureCode                                                                        43
#define id_downlinkUEAssociatedLPPaTransport_ProcedureCode                                           44
#define id_uplinkUEAssociatedLPPaTransport_ProcedureCode                                             45
#define id_downlinkNonUEAssociatedLPPaTransport_ProcedureCode                                        46
#define id_uplinkNonUEAssociatedLPPaTransport_ProcedureCode                                          47
#define id_UERadioCapabilityMatch_ProcedureCode                                                      48
#define id_PWSRestartIndication_ProcedureCode                                                        49
#define id_E_RABModificationIndication_ProcedureCode                                                 50
#define id_PWSFailureIndication_ProcedureCode                                                        51
#define id_RerouteNASRequest_ProcedureCode                                                           52
#define id_UEContextModificationIndication_ProcedureCode                                             53
#define id_ConnectionEstablishmentIndication_ProcedureCode                                           54
#define id_UEContextSuspend_ProcedureCode                                                            55
#define id_UEContextResume_ProcedureCode                                                             56
#define id_NASDeliveryIndication_ProcedureCode                                                       57
#define id_RetrieveUEInformation_ProcedureCode                                                       58
#define id_UEInformationTransfer_ProcedureCode                                                       59
#define id_eNBCPRelocationIndication_ProcedureCode                                                   60
#define id_MMECPRelocationIndication_ProcedureCode                                                   61
#define id_SecondaryRATDataUsageReport_ProcedureCode                                                 62
#define id_UERadioCapabilityIDMapping_ProcedureCode                                                  63
#define id_HandoverSuccess_ProcedureCode                                                             64
#define id_eNBEarlyStatusTransfer_ProcedureCode                                                      65
#define id_MMEEarlyStatusTransfer_ProcedureCode                                                      66



#define __si_s1ap__id_MME_UE_S1AP_ID_ProtocolIEs                                                     0
#define __si_s1ap__id_HandoverType_ProtocolIEs                                                       1
#define __si_s1ap__id_Cause_ProtocolIEs                                                              2
#define __si_s1ap__id_SourceID_ProtocolIEs                                                           3
#define __si_s1ap__id_TargetID_ProtocolIEs                                                           4
#define __si_s1ap__id_eNB_UE_S1AP_ID_ProtocolIEs                                                     8
#define __si_s1ap__id_E_RABSubjecttoDataForwardingList_ProtocolIEs                                   12
#define __si_s1ap__id_E_RABtoReleaseListHOCmd_ProtocolIEs                                            13
#define __si_s1ap__id_E_RABDataForwardingItem_ProtocolIEs                                            14
#define __si_s1ap__id_E_RABReleaseItemBearerRelComp_ProtocolIEs                                      15
#define __si_s1ap__id_E_RABToBeSetupListBearerSUReq_ProtocolIEs                                      16
#define __si_s1ap__id_E_RABToBeSetupItemBearerSUReq_ProtocolIEs                                      17
#define __si_s1ap__id_E_RABAdmittedList_ProtocolIEs                                                  18
#define __si_s1ap__id_E_RABFailedToSetupListHOReqAck_ProtocolIEs                                     19
#define __si_s1ap__id_E_RABAdmittedItem_ProtocolIEs                                                  20
#define __si_s1ap__id_E_RABFailedtoSetupItemHOReqAck_ProtocolIEs                                     21
#define __si_s1ap__id_E_RABToBeSwitchedDLList_ProtocolIEs                                            22
#define __si_s1ap__id_E_RABToBeSwitchedDLItem_ProtocolIEs                                            23
#define __si_s1ap__id_E_RABToBeSetupListCtxtSUReq_ProtocolIEs                                        24
#define __si_s1ap__id_TraceActivation_ProtocolIEs                                                    25
#define __si_s1ap__id_NAS_PDU_ProtocolIEs                                                            26
#define __si_s1ap__id_E_RABToBeSetupItemHOReq_ProtocolIEs                                            27
#define __si_s1ap__id_E_RABSetupListBearerSURes_ProtocolIEs                                          28
#define __si_s1ap__id_E_RABFailedToSetupListBearerSURes_ProtocolIEs                                  29
#define __si_s1ap__id_E_RABToBeModifiedListBearerModReq_ProtocolIEs                                  30
#define __si_s1ap__id_E_RABModifyListBearerModRes_ProtocolIEs                                        31
#define __si_s1ap__id_E_RABFailedToModifyList_ProtocolIEs                                            32
#define __si_s1ap__id_E_RABToBeReleasedList_ProtocolIEs                                              33
#define __si_s1ap__id_E_RABFailedToReleaseList_ProtocolIEs                                           34
#define __si_s1ap__id_E_RABItem_ProtocolIEs                                                          35
#define __si_s1ap__id_E_RABToBeModifiedItemBearerModReq_ProtocolIEs                                  36
#define __si_s1ap__id_E_RABModifyItemBearerModRes_ProtocolIEs                                        37
#define __si_s1ap__id_E_RABReleaseItem_ProtocolIEs                                                   38
#define __si_s1ap__id_E_RABSetupItemBearerSURes_ProtocolIEs                                          39
#define __si_s1ap__id_SecurityContext_ProtocolIEs                                                    40
#define __si_s1ap__id_HandoverRestrictionList_ProtocolIEs                                            41
#define __si_s1ap__id_UEPagingID_ProtocolIEs                                                         43
#define __si_s1ap__id_pagingDRX_ProtocolIEs                                                          44
#define __si_s1ap__id_TAIList_ProtocolIEs                                                            46
#define __si_s1ap__id_TAIItem_ProtocolIEs                                                            47
#define __si_s1ap__id_E_RABFailedToSetupListCtxtSURes_ProtocolIEs                                    48
#define __si_s1ap__id_E_RABReleaseItemHOCmd_ProtocolIEs                                              49
#define __si_s1ap__id_E_RABSetupItemCtxtSURes_ProtocolIEs                                            50
#define __si_s1ap__id_E_RABSetupListCtxtSURes_ProtocolIEs                                            51
#define __si_s1ap__id_E_RABToBeSetupItemCtxtSUReq_ProtocolIEs                                        52
#define __si_s1ap__id_E_RABToBeSetupListHOReq_ProtocolIEs                                            53
#define __si_s1ap__id_GERANtoLTEHOInformationRes_ProtocolIEs                                         55
#define __si_s1ap__id_UTRANtoLTEHOInformationRes_ProtocolIEs                                         57
#define __si_s1ap__id_CriticalityDiagnostics_ProtocolIEs                                             58
#define __si_s1ap__id_Global_ENB_ID_ProtocolIEs                                                      59
#define __si_s1ap__id_eNBname_ProtocolIEs                                                            60
#define __si_s1ap__id_MMEname_ProtocolIEs                                                            61
#define __si_s1ap__id_ServedPLMNs_ProtocolIEs                                                        63
#define __si_s1ap__id_SupportedTAs_ProtocolIEs                                                       64
#define __si_s1ap__id_TimeToWait_ProtocolIEs                                                         65
#define __si_s1ap__id_uEaggregateMaximumBitrate_ProtocolIEs                                          66
#define __si_s1ap__id_TAI_ProtocolIEs                                                                67
#define __si_s1ap__id_E_RABReleaseListBearerRelComp_ProtocolIEs                                      69
#define __si_s1ap__id_cdma2000PDU_ProtocolIEs                                                        70
#define __si_s1ap__id_cdma2000RATType_ProtocolIEs                                                    71
#define __si_s1ap__id_cdma2000SectorID_ProtocolIEs                                                   72
#define __si_s1ap__id_SecurityKey_ProtocolIEs                                                        73
#define __si_s1ap__id_UERadioCapability_ProtocolIEs                                                  74
#define __si_s1ap__id_GUMMEI_ID_ProtocolIEs                                                          75
#define __si_s1ap__id_E_RABInformationListItem_ProtocolIEs                                           78
#define __si_s1ap__id_Direct_Forwarding_Path_Availability_ProtocolIEs                                79
#define __si_s1ap__id_UEIdentityIndexValue_ProtocolIEs                                               80
#define __si_s1ap__id_cdma2000HOStatus_ProtocolIEs                                                   83
#define __si_s1ap__id_cdma2000HORequiredIndication_ProtocolIEs                                       84
#define __si_s1ap__id_E_UTRAN_Trace_ID_ProtocolIEs                                                   86
#define __si_s1ap__id_RelativeMMECapacity_ProtocolIEs                                                87
#define __si_s1ap__id_SourceMME_UE_S1AP_ID_ProtocolIEs                                               88
#define __si_s1ap__id_Bearers_SubjectToStatusTransfer_Item_ProtocolIEs                               89
#define __si_s1ap__id_eNB_StatusTransfer_TransparentContainer_ProtocolIEs                            90
#define __si_s1ap__id_UE_associatedLogicalS1_ConnectionItem_ProtocolIEs                              91
#define __si_s1ap__id_ResetType_ProtocolIEs                                                          92
#define __si_s1ap__id_UE_associatedLogicalS1_ConnectionListResAck_ProtocolIEs                        93
#define __si_s1ap__id_E_RABToBeSwitchedULItem_ProtocolIEs                                            94
#define __si_s1ap__id_E_RABToBeSwitchedULList_ProtocolIEs                                            95
#define __si_s1ap__id_S_TMSI_ProtocolIEs                                                             96
#define __si_s1ap__id_cdma2000OneXRAND_ProtocolIEs                                                   97
#define __si_s1ap__id_RequestType_ProtocolIEs                                                        98
#define __si_s1ap__id_UE_S1AP_IDs_ProtocolIEs                                                        99
#define __si_s1ap__id_EUTRAN_CGI_ProtocolIEs                                                         100
#define __si_s1ap__id_OverloadResponse_ProtocolIEs                                                   101
#define __si_s1ap__id_cdma2000OneXSRVCCInfo_ProtocolIEs                                              102
#define __si_s1ap__id_E_RABFailedToBeReleasedList_ProtocolIEs                                        103
#define __si_s1ap__id_Source_ToTarget_TransparentContainer_ProtocolIEs                               104
#define __si_s1ap__id_ServedGUMMEIs_ProtocolIEs                                                      105
#define __si_s1ap__id_SubscriberProfileIDforRFP_ProtocolIEs                                          106
#define __si_s1ap__id_UESecurityCapabilities_ProtocolIEs                                             107
#define __si_s1ap__id_CSFallbackIndicator_ProtocolIEs                                                108
#define __si_s1ap__id_CNDomain_ProtocolIEs                                                           109
#define __si_s1ap__id_E_RABReleasedList_ProtocolIEs                                                  110
#define __si_s1ap__id_MessageIdentifier_ProtocolIEs                                                  111
#define __si_s1ap__id_SerialNumber_ProtocolIEs                                                       112
#define __si_s1ap__id_WarningAreaList_ProtocolIEs                                                    113
#define __si_s1ap__id_RepetitionPeriod_ProtocolIEs                                                   114
#define __si_s1ap__id_NumberofBroadcastRequest_ProtocolIEs                                           115
#define __si_s1ap__id_WarningType_ProtocolIEs                                                        116
#define __si_s1ap__id_WarningSecurityInfo_ProtocolIEs                                                117
#define __si_s1ap__id_DataCodingScheme_ProtocolIEs                                                   118
#define __si_s1ap__id_WarningMessageContents_ProtocolIEs                                             119
#define __si_s1ap__id_BroadcastCompletedAreaList_ProtocolIEs                                         120
#define __si_s1ap__id_Inter_SystemInformationTransferTypeEDT_ProtocolIEs                             121
#define __si_s1ap__id_Inter_SystemInformationTransferTypeMDT_ProtocolIEs                             122
#define __si_s1ap__id_Target_ToSource_TransparentContainer_ProtocolIEs                               123
#define __si_s1ap__id_SRVCCOperationPossible_ProtocolIEs                                             124
#define __si_s1ap__id_SRVCCHOIndication_ProtocolIEs                                                  125
#define __si_s1ap__id_NAS_DownlinkCount_ProtocolIEs                                                  126
#define __si_s1ap__id_CSG_Id_ProtocolIEs                                                             127
#define __si_s1ap__id_CSG_IdList_ProtocolIEs                                                         128
#define __si_s1ap__id_SONConfigurationTransferECT_ProtocolIEs                                        129
#define __si_s1ap__id_SONConfigurationTransferMCT_ProtocolIEs                                        130
#define __si_s1ap__id_TraceCollectionEntityIPAddress_ProtocolIEs                                     131
#define __si_s1ap__id_MSClassmark2_ProtocolIEs                                                       132
#define __si_s1ap__id_MSClassmark3_ProtocolIEs                                                       133
#define __si_s1ap__id_RRC_Establishment_Cause_ProtocolIEs                                            134
#define __si_s1ap__id_NASSecurityParametersfromE_UTRAN_ProtocolIEs                                   135
#define __si_s1ap__id_NASSecurityParameterstoE_UTRAN_ProtocolIEs                                     136
#define __si_s1ap__id_DefaultPagingDRX_ProtocolIEs                                                   137
#define __si_s1ap__id_Source_ToTarget_TransparentContainer_Secondary_ProtocolIEs                     138
#define __si_s1ap__id_Target_ToSource_TransparentContainer_Secondary_ProtocolIEs                     139
#define __si_s1ap__id_EUTRANRoundTripDelayEstimationInfo_ProtocolIEs                                 140
#define __si_s1ap__id_BroadcastCancelledAreaList_ProtocolIEs                                         141
#define __si_s1ap__id_ConcurrentWarningMessageIndicator_ProtocolIEs                                  142
#define __si_s1ap__id_Data_Forwarding_Not_Possible_ProtocolIEs                                       143
#define __si_s1ap__id_ExtendedRepetitionPeriod_ProtocolIEs                                           144
#define __si_s1ap__id_CellAccessMode_ProtocolIEs                                                     145
#define __si_s1ap__id_CSGMembershipStatus_ProtocolIEs                                                146
#define __si_s1ap__id_LPPa_PDU_ProtocolIEs                                                           147
#define __si_s1ap__id_Routing_ID_ProtocolIEs                                                         148
#define __si_s1ap__id_Time_Synchronisation_Info_ProtocolIEs                                          149
#define __si_s1ap__id_PS_ServiceNotAvailable_ProtocolIEs                                             150
#define __si_s1ap__id_PagingPriority_ProtocolIEs                                                     151
#define __si_s1ap__id_x2TNLConfigurationInfo_ProtocolIEs                                             152
#define __si_s1ap__id_eNBX2ExtendedTransportLayerAddresses_ProtocolIEs                               153
#define __si_s1ap__id_GUMMEIList_ProtocolIEs                                                         154
#define __si_s1ap__id_GW_TransportLayerAddress_ProtocolIEs                                           155
#define __si_s1ap__id_Correlation_ID_ProtocolIEs                                                     156
#define __si_s1ap__id_SourceMME_GUMMEI_ProtocolIEs                                                   157
#define __si_s1ap__id_MME_UE_S1AP_ID_2_ProtocolIEs                                                   158
#define __si_s1ap__id_RegisteredLAI_ProtocolIEs                                                      159
#define __si_s1ap__id_RelayNode_Indicator_ProtocolIEs                                                160
#define __si_s1ap__id_TrafficLoadReductionIndication_ProtocolIEs                                     161
#define __si_s1ap__id_MDTConfiguration_ProtocolIEs                                                   162
#define __si_s1ap__id_MMERelaySupportIndicator_ProtocolIEs                                           163
#define __si_s1ap__id_GWContextReleaseIndication_ProtocolIEs                                         164
#define __si_s1ap__id_ManagementBasedMDTAllowed_ProtocolIEs                                          165
#define __si_s1ap__id_PrivacyIndicator_ProtocolIEs                                                   166
#define __si_s1ap__id_Time_UE_StayedInCell_EnhancedGranularity_ProtocolIEs                           167
#define __si_s1ap__id_HO_Cause_ProtocolIEs                                                           168
#define __si_s1ap__id_VoiceSupportMatchIndicator_ProtocolIEs                                         169
#define __si_s1ap__id_GUMMEIType_ProtocolIEs                                                         170
#define __si_s1ap__id_M3Configuration_ProtocolIEs                                                    171
#define __si_s1ap__id_M4Configuration_ProtocolIEs                                                    172
#define __si_s1ap__id_M5Configuration_ProtocolIEs                                                    173
#define __si_s1ap__id_MDT_Location_Info_ProtocolIEs                                                  174
#define __si_s1ap__id_MobilityInformation_ProtocolIEs                                                175
#define __si_s1ap__id_Tunnel_Information_for_BBF_ProtocolIEs                                         176
#define __si_s1ap__id_ManagementBasedMDTPLMNList_ProtocolIEs                                         177
#define __si_s1ap__id_SignallingBasedMDTPLMNList_ProtocolIEs                                         178
#define __si_s1ap__id_ULCOUNTValueExtended_ProtocolIEs                                               179
#define __si_s1ap__id_DLCOUNTValueExtended_ProtocolIEs                                               180
#define __si_s1ap__id_ReceiveStatusOfULPDCPSDUsExtended_ProtocolIEs                                  181
#define __si_s1ap__id_ECGIListForRestart_ProtocolIEs                                                 182
#define __si_s1ap__id_SIPTO_Correlation_ID_ProtocolIEs                                               183
#define __si_s1ap__id_SIPTO_L_GW_TransportLayerAddress_ProtocolIEs                                   184
#define __si_s1ap__id_TransportInformation_ProtocolIEs                                               185
#define __si_s1ap__id_LHN_ID_ProtocolIEs                                                             186
#define __si_s1ap__id_AdditionalCSFallbackIndicator_ProtocolIEs                                      187
#define __si_s1ap__id_TAIListForRestart_ProtocolIEs                                                  188
#define __si_s1ap__id_UserLocationInformation_ProtocolIEs                                            189
#define __si_s1ap__id_EmergencyAreaIDListForRestart_ProtocolIEs                                      190
#define __si_s1ap__id_KillAllWarningMessages_ProtocolIEs                                             191
#define __si_s1ap__id_Masked_IMEISV_ProtocolIEs                                                      192
#define __si_s1ap__id_eNBIndirectX2TransportLayerAddresses_ProtocolIEs                               193
#define __si_s1ap__id_uE_HistoryInformationFromTheUE_ProtocolIEs                                     194
#define __si_s1ap__id_ProSeAuthorized_ProtocolIEs                                                    195
#define __si_s1ap__id_ExpectedUEBehaviour_ProtocolIEs                                                196
#define __si_s1ap__id_LoggedMBSFNMDT_ProtocolIEs                                                     197
#define __si_s1ap__id_UERadioCapabilityForPaging_ProtocolIEs                                         198
#define __si_s1ap__id_E_RABToBeModifiedListBearerModInd_ProtocolIEs                                  199
#define __si_s1ap__id_E_RABToBeModifiedItemBearerModInd_ProtocolIEs                                  200
#define __si_s1ap__id_E_RABNotToBeModifiedListBearerModInd_ProtocolIEs                               201
#define __si_s1ap__id_E_RABNotToBeModifiedItemBearerModInd_ProtocolIEs                               202
#define __si_s1ap__id_E_RABModifyListBearerModConf_ProtocolIEs                                       203
#define __si_s1ap__id_E_RABModifyItemBearerModConf_ProtocolIEs                                       204
#define __si_s1ap__id_E_RABFailedToModifyListBearerModConf_ProtocolIEs                               205
#define __si_s1ap__id_SON_Information_Report_ProtocolIEs                                             206
#define __si_s1ap__id_Muting_Availability_Indication_ProtocolIEs                                     207
#define __si_s1ap__id_Muting_Pattern_Information_ProtocolIEs                                         208
#define __si_s1ap__id_Synchronisation_Information_ProtocolIEs                                        209
#define __si_s1ap__id_E_RABToBeReleasedListBearerModConf_ProtocolIEs                                 210
#define __si_s1ap__id_AssistanceDataForPaging_ProtocolIEs                                            211
#define __si_s1ap__id_CellIdentifierAndCELevelForCECapableUEs_ProtocolIEs                            212
#define __si_s1ap__id_InformationOnRecommendedCellsAndENBsForPaging_ProtocolIEs                      213
#define __si_s1ap__id_RecommendedCellItem_ProtocolIEs                                                214
#define __si_s1ap__id_RecommendedENBItem_ProtocolIEs                                                 215
#define __si_s1ap__id_ProSeUEtoNetworkRelaying_ProtocolIEs                                           216
#define __si_s1ap__id_ULCOUNTValuePDCP_SNlength18_ProtocolIEs                                        217
#define __si_s1ap__id_DLCOUNTValuePDCP_SNlength18_ProtocolIEs                                        218
#define __si_s1ap__id_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18_ProtocolIEs                           219
#define __si_s1ap__id_M6Configuration_ProtocolIEs                                                    220
#define __si_s1ap__id_M7Configuration_ProtocolIEs                                                    221
#define __si_s1ap__id_PWSfailedECGIList_ProtocolIEs                                                  222
#define __si_s1ap__id_MME_Group_ID_ProtocolIEs                                                       223
#define __si_s1ap__id_Additional_GUTI_ProtocolIEs                                                    224
#define __si_s1ap__id_S1_Message_ProtocolIEs                                                         225
#define __si_s1ap__id_CSGMembershipInfo_ProtocolIEs                                                  226
#define __si_s1ap__id_Paging_eDRXInformation_ProtocolIEs                                             227
#define __si_s1ap__id_UE_RetentionInformation_ProtocolIEs                                            228
#define __si_s1ap__id_UE_Usage_Type_ProtocolIEs                                                      230
#define __si_s1ap__id_extended_UEIdentityIndexValue_ProtocolIEs                                      231
#define __si_s1ap__id_RAT_Type_ProtocolIEs                                                           232
#define __si_s1ap__id_BearerType_ProtocolIEs                                                         233
#define __si_s1ap__id_NB_IoT_DefaultPagingDRX_ProtocolIEs                                            234
#define __si_s1ap__id_E_RABFailedToResumeListResumeReq_ProtocolIEs                                   235
#define __si_s1ap__id_E_RABFailedToResumeItemResumeReq_ProtocolIEs                                   236
#define __si_s1ap__id_E_RABFailedToResumeListResumeRes_ProtocolIEs                                   237
#define __si_s1ap__id_E_RABFailedToResumeItemResumeRes_ProtocolIEs                                   238
#define __si_s1ap__id_NB_IoT_Paging_eDRXInformation_ProtocolIEs                                      239
#define __si_s1ap__id_V2XServicesAuthorized_ProtocolIEs                                              240
#define __si_s1ap__id_UEUserPlaneCIoTSupportIndicator_ProtocolIEs                                    241
#define __si_s1ap__id_CE_mode_B_SupportIndicator_ProtocolIEs                                         242
#define __si_s1ap__id_SRVCCOperationNotPossible_ProtocolIEs                                          243
#define __si_s1ap__id_NB_IoT_UEIdentityIndexValue_ProtocolIEs                                        244
#define __si_s1ap__id_RRC_Resume_Cause_ProtocolIEs                                                   245
#define __si_s1ap__id_DCN_ID_ProtocolIEs                                                             246
#define __si_s1ap__id_ServedDCNs_ProtocolIEs                                                         247
#define __si_s1ap__id_UESidelinkAggregateMaximumBitrate_ProtocolIEs                                  248
#define __si_s1ap__id_DLNASPDUDeliveryAckRequest_ProtocolIEs                                         249
#define __si_s1ap__id_Coverage_Level_ProtocolIEs                                                     250
#define __si_s1ap__id_EnhancedCoverageRestricted_ProtocolIEs                                         251
#define __si_s1ap__id_UE_Level_QoS_Parameters_ProtocolIEs                                            252
#define __si_s1ap__id_DL_CP_SecurityInformation_ProtocolIEs                                          253
#define __si_s1ap__id_UL_CP_SecurityInformation_ProtocolIEs                                          254
#define __si_s1ap__id_extended_e_RAB_MaximumBitrateDL_ProtocolIEs                                    255
#define __si_s1ap__id_extended_e_RAB_MaximumBitrateUL_ProtocolIEs                                    256
#define __si_s1ap__id_extended_e_RAB_GuaranteedBitrateDL_ProtocolIEs                                 257
#define __si_s1ap__id_extended_e_RAB_GuaranteedBitrateUL_ProtocolIEs                                 258
#define __si_s1ap__id_extended_uEaggregateMaximumBitRateDL_ProtocolIEs                               259
#define __si_s1ap__id_extended_uEaggregateMaximumBitRateUL_ProtocolIEs                               260
#define __si_s1ap__id_NRrestrictioninEPSasSecondaryRAT_ProtocolIEs                                   261
#define __si_s1ap__id_UEAppLayerMeasConfig_ProtocolIEs                                               262
#define __si_s1ap__id_UE_Application_Layer_Measurement_Capability_ProtocolIEs                        263
#define __si_s1ap__id_SecondaryRATDataUsageReportList_ProtocolIEs                                    264
#define __si_s1ap__id_SecondaryRATDataUsageReportItem_ProtocolIEs                                    265
#define __si_s1ap__id_HandoverFlag_ProtocolIEs                                                       266
#define __si_s1ap__id_E_RABUsageReportItem_ProtocolIEs                                               267
#define __si_s1ap__id_SecondaryRATDataUsageRequest_ProtocolIEs                                       268
#define __si_s1ap__id_NRUESecurityCapabilities_ProtocolIEs                                           269
#define __si_s1ap__id_UnlicensedSpectrumRestriction_ProtocolIEs                                      270
#define __si_s1ap__id_CE_ModeBRestricted_ProtocolIEs                                                 271
#define __si_s1ap__id_LTE_M_Indication_ProtocolIEs                                                   272
#define __si_s1ap__id_DownlinkPacketLossRate_ProtocolIEs                                             273
#define __si_s1ap__id_UplinkPacketLossRate_ProtocolIEs                                               274
#define __si_s1ap__id_UECapabilityInfoRequest_ProtocolIEs                                            275
#define __si_s1ap__id_serviceType_ProtocolIEs                                                        276
#define __si_s1ap__id_AerialUEsubscriptionInformation_ProtocolIEs                                    277
#define __si_s1ap__id_Subscription_Based_UE_DifferentiationInfo_ProtocolIEs                          278
#define __si_s1ap__id_EndIndication_ProtocolIEs                                                      280
#define __si_s1ap__id_EDT_Session_ProtocolIEs                                                        281
#define __si_s1ap__id_CNTypeRestrictions_ProtocolIEs                                                 282
#define __si_s1ap__id_PendingDataIndication_ProtocolIEs                                              283
#define __si_s1ap__id_BluetoothMeasurementConfiguration_ProtocolIEs                                  284
#define __si_s1ap__id_WLANMeasurementConfiguration_ProtocolIEs                                       285
#define __si_s1ap__id_WarningAreaCoordinates_ProtocolIEs                                             286
#define __si_s1ap__id_NRrestrictionin5GS_ProtocolIEs                                                 287
#define __si_s1ap__id_PSCellInformation_ProtocolIEs                                                  288
#define __si_s1ap__id_LastNG_RANPLMNIdentity_ProtocolIEs                                             290
#define __si_s1ap__id_ConnectedengNBList_ProtocolIEs                                                 291
#define __si_s1ap__id_ConnectedengNBToAddList_ProtocolIEs                                            292
#define __si_s1ap__id_ConnectedengNBToRemoveList_ProtocolIEs                                         293
#define __si_s1ap__id_EN_DCSONConfigurationTransfer_ECT_ProtocolIEs                                  294
#define __si_s1ap__id_EN_DCSONConfigurationTransfer_MCT_ProtocolIEs                                  295
#define __si_s1ap__id_IMSvoiceEPSfallbackfrom5G_ProtocolIEs                                          296
#define __si_s1ap__id_TimeSinceSecondaryNodeRelease_ProtocolIEs                                      297
#define __si_s1ap__id_RequestTypeAdditionalInfo_ProtocolIEs                                          298
#define __si_s1ap__id_AdditionalRRMPriorityIndex_ProtocolIEs                                         299
#define __si_s1ap__id_ContextatSource_ProtocolIEs                                                    300
#define __si_s1ap__id_IAB_Authorized_ProtocolIEs                                                     301
#define __si_s1ap__id_IAB_Node_Indication_ProtocolIEs                                                302
#define __si_s1ap__id_IAB_Supported_ProtocolIEs                                                      303
#define __si_s1ap__id_DataSize_ProtocolIEs                                                           304
#define __si_s1ap__id_Ethernet_Type_ProtocolIEs                                                      305
#define __si_s1ap__id_NRV2XServicesAuthorized_ProtocolIEs                                            306
#define __si_s1ap__id_NRUESidelinkAggregateMaximumBitrate_ProtocolIEs                                307
#define __si_s1ap__id_PC5QoSParameters_ProtocolIEs                                                   308
#define __si_s1ap__id_IntersystemSONConfigurationTransferMCT_ProtocolIEs                             309
#define __si_s1ap__id_IntersystemSONConfigurationTransferECT_ProtocolIEs                             310
#define __si_s1ap__id_IntersystemMeasurementConfiguration_ProtocolIEs                                311
#define __si_s1ap__id_SourceNodeID_ProtocolIEs                                                       312
#define __si_s1ap__id_NB_IoT_RLF_Report_Container_ProtocolIEs                                        313
#define __si_s1ap__id_UERadioCapabilityID_ProtocolIEs                                                314
#define __si_s1ap__id_UERadioCapability_NR_Format_ProtocolIEs                                        315
#define __si_s1ap__id_MDTConfigurationNR_ProtocolIEs                                                 316
#define __si_s1ap__id_DAPSRequestInfo_ProtocolIEs                                                    317
#define __si_s1ap__id_DAPSResponseInfoList_ProtocolIEs                                               318
#define __si_s1ap__id_DAPSResponseInfoItem_ProtocolIEs                                               319
#define __si_s1ap__id_NotifySourceeNB_ProtocolIEs                                                    320
#define __si_s1ap__id_eNB_EarlyStatusTransfer_TransparentContainer_ProtocolIEs                       321
#define __si_s1ap__id_Bearers_SubjectToEarlyStatusTransfer_Item_ProtocolIEs                          322
#define __si_s1ap__id_WUS_Assistance_Information_ProtocolIEs                                         323
#define __si_s1ap__id_NB_IoT_PagingDRX_ProtocolIEs                                                   324
#define __si_s1ap__id_TraceCollectionEntityURI_ProtocolIEs                                           325
#define __si_s1ap__id_EmergencyIndicator_ProtocolIEs                                                 326
#define __si_s1ap__id_UERadioCapabilityForPaging_NR_Format_ProtocolIEs                               327
#define __si_s1ap__id_SourceTransportLayerAddress_ProtocolIEs                                        328
#define __si_s1ap__id_lastVisitedPSCellList_ProtocolIEs                                              329
#define __si_s1ap__id_RACSIndication_ProtocolIEs                                                     330
#define __si_s1ap__id_PagingCause_ProtocolIEs                                                        331
#define __si_s1ap__id_SecurityIndication_ProtocolIEs                                                 332
#define __si_s1ap__id_SecurityResult_ProtocolIEs                                                     333
#define __si_s1ap__id_E_RABSecurityResultItem_ProtocolIEs                                            334
#define __si_s1ap__id_E_RABSecurityResultList_ProtocolIEs                                            335
#define __si_s1ap__id_RAT_Restrictions_ProtocolIEs                                                   336
#define __si_s1ap__id_UEContextReferenceatSourceeNB_ProtocolIEs                                      337
#define __si_s1ap__id_LTE_NTN_TAI_Information_ProtocolIEs                                            339
#define __si_s1ap__id_SourceNodeTransportLayerAddress_ProtocolIEs                                    340
#define __si_s1ap__id_E_RABToBeUpdatedList_ProtocolIEs                                               341
#define __si_s1ap__id_E_RABToBeUpdatedItem_ProtocolIEs                                               342
#define __si_s1ap__id_SourceSNID_ProtocolIEs                                                         343
#define __si_s1ap__id_LoggedMDTTrigger_ProtocolIEs                                                   344
#define __si_s1ap__id_SensorMeasurementConfiguration_ProtocolIEs                                     345
#define __si_s1ap__id_M4ReportAmount_ProtocolIEs                                                     346
#define __si_s1ap__id_M5ReportAmount_ProtocolIEs                                                     347
#define __si_s1ap__id_M6ReportAmount_ProtocolIEs                                                     348
#define __si_s1ap__id_M7ReportAmount_ProtocolIEs                                                     349
#define __si_s1ap__id_TimeBasedHandoverInformation_ProtocolIEs                                       350
#define __si_s1ap__id_Bearers_SubjectToDLDiscarding_Item_ProtocolIEs                                 351
#define __si_s1ap__id_Bearers_SubjectToDLDiscardingList_ProtocolIEs                                  352
#define __si_s1ap__id_CoarseUELocationRequested_ProtocolIEs                                          353
#define __si_s1ap__id_CoarseUELocation_ProtocolIEs                                                   354



#define id_MME_UE_S1AP_ID_ProtocolIEs                                                                0
#define id_HandoverType_ProtocolIEs                                                                  1
#define id_Cause_ProtocolIEs                                                                         2
#define id_SourceID_ProtocolIEs                                                                      3
#define id_TargetID_ProtocolIEs                                                                      4
#define id_eNB_UE_S1AP_ID_ProtocolIEs                                                                8
#define id_E_RABSubjecttoDataForwardingList_ProtocolIEs                                              12
#define id_E_RABtoReleaseListHOCmd_ProtocolIEs                                                       13
#define id_E_RABDataForwardingItem_ProtocolIEs                                                       14
#define id_E_RABReleaseItemBearerRelComp_ProtocolIEs                                                 15
#define id_E_RABToBeSetupListBearerSUReq_ProtocolIEs                                                 16
#define id_E_RABToBeSetupItemBearerSUReq_ProtocolIEs                                                 17
#define id_E_RABAdmittedList_ProtocolIEs                                                             18
#define id_E_RABFailedToSetupListHOReqAck_ProtocolIEs                                                19
#define id_E_RABAdmittedItem_ProtocolIEs                                                             20
#define id_E_RABFailedtoSetupItemHOReqAck_ProtocolIEs                                                21
#define id_E_RABToBeSwitchedDLList_ProtocolIEs                                                       22
#define id_E_RABToBeSwitchedDLItem_ProtocolIEs                                                       23
#define id_E_RABToBeSetupListCtxtSUReq_ProtocolIEs                                                   24
#define id_TraceActivation_ProtocolIEs                                                               25
#define id_NAS_PDU_ProtocolIEs                                                                       26
#define id_E_RABToBeSetupItemHOReq_ProtocolIEs                                                       27
#define id_E_RABSetupListBearerSURes_ProtocolIEs                                                     28
#define id_E_RABFailedToSetupListBearerSURes_ProtocolIEs                                             29
#define id_E_RABToBeModifiedListBearerModReq_ProtocolIEs                                             30
#define id_E_RABModifyListBearerModRes_ProtocolIEs                                                   31
#define id_E_RABFailedToModifyList_ProtocolIEs                                                       32
#define id_E_RABToBeReleasedList_ProtocolIEs                                                         33
#define id_E_RABFailedToReleaseList_ProtocolIEs                                                      34
#define id_E_RABItem_ProtocolIEs                                                                     35
#define id_E_RABToBeModifiedItemBearerModReq_ProtocolIEs                                             36
#define id_E_RABModifyItemBearerModRes_ProtocolIEs                                                   37
#define id_E_RABReleaseItem_ProtocolIEs                                                              38
#define id_E_RABSetupItemBearerSURes_ProtocolIEs                                                     39
#define id_SecurityContext_ProtocolIEs                                                               40
#define id_HandoverRestrictionList_ProtocolIEs                                                       41
#define id_UEPagingID_ProtocolIEs                                                                    43
#define id_pagingDRX_ProtocolIEs                                                                     44
#define id_TAIList_ProtocolIEs                                                                       46
#define id_TAIItem_ProtocolIEs                                                                       47
#define id_E_RABFailedToSetupListCtxtSURes_ProtocolIEs                                               48
#define id_E_RABReleaseItemHOCmd_ProtocolIEs                                                         49
#define id_E_RABSetupItemCtxtSURes_ProtocolIEs                                                       50
#define id_E_RABSetupListCtxtSURes_ProtocolIEs                                                       51
#define id_E_RABToBeSetupItemCtxtSUReq_ProtocolIEs                                                   52
#define id_E_RABToBeSetupListHOReq_ProtocolIEs                                                       53
#define id_GERANtoLTEHOInformationRes_ProtocolIEs                                                    55
#define id_UTRANtoLTEHOInformationRes_ProtocolIEs                                                    57
#define id_CriticalityDiagnostics_ProtocolIEs                                                        58
#define id_Global_ENB_ID_ProtocolIEs                                                                 59
#define id_eNBname_ProtocolIEs                                                                       60
#define id_MMEname_ProtocolIEs                                                                       61
#define id_ServedPLMNs_ProtocolIEs                                                                   63
#define id_SupportedTAs_ProtocolIEs                                                                  64
#define id_TimeToWait_ProtocolIEs                                                                    65
#define id_uEaggregateMaximumBitrate_ProtocolIEs                                                     66
#define id_TAI_ProtocolIEs                                                                           67
#define id_E_RABReleaseListBearerRelComp_ProtocolIEs                                                 69
#define id_cdma2000PDU_ProtocolIEs                                                                   70
#define id_cdma2000RATType_ProtocolIEs                                                               71
#define id_cdma2000SectorID_ProtocolIEs                                                              72
#define id_SecurityKey_ProtocolIEs                                                                   73
#define id_UERadioCapability_ProtocolIEs                                                             74
#define id_GUMMEI_ID_ProtocolIEs                                                                     75
#define id_E_RABInformationListItem_ProtocolIEs                                                      78
#define id_Direct_Forwarding_Path_Availability_ProtocolIEs                                           79
#define id_UEIdentityIndexValue_ProtocolIEs                                                          80
#define id_cdma2000HOStatus_ProtocolIEs                                                              83
#define id_cdma2000HORequiredIndication_ProtocolIEs                                                  84
#define id_E_UTRAN_Trace_ID_ProtocolIEs                                                              86
#define id_RelativeMMECapacity_ProtocolIEs                                                           87
#define id_SourceMME_UE_S1AP_ID_ProtocolIEs                                                          88
#define id_Bearers_SubjectToStatusTransfer_Item_ProtocolIEs                                          89
#define id_eNB_StatusTransfer_TransparentContainer_ProtocolIEs                                       90
#define id_UE_associatedLogicalS1_ConnectionItem_ProtocolIEs                                         91
#define id_ResetType_ProtocolIEs                                                                     92
#define id_UE_associatedLogicalS1_ConnectionListResAck_ProtocolIEs                                   93
#define id_E_RABToBeSwitchedULItem_ProtocolIEs                                                       94
#define id_E_RABToBeSwitchedULList_ProtocolIEs                                                       95
#define id_S_TMSI_ProtocolIEs                                                                        96
#define id_cdma2000OneXRAND_ProtocolIEs                                                              97
#define id_RequestType_ProtocolIEs                                                                   98
#define id_UE_S1AP_IDs_ProtocolIEs                                                                   99
#define id_EUTRAN_CGI_ProtocolIEs                                                                    100
#define id_OverloadResponse_ProtocolIEs                                                              101
#define id_cdma2000OneXSRVCCInfo_ProtocolIEs                                                         102
#define id_E_RABFailedToBeReleasedList_ProtocolIEs                                                   103
#define id_Source_ToTarget_TransparentContainer_ProtocolIEs                                          104
#define id_ServedGUMMEIs_ProtocolIEs                                                                 105
#define id_SubscriberProfileIDforRFP_ProtocolIEs                                                     106
#define id_UESecurityCapabilities_ProtocolIEs                                                        107
#define id_CSFallbackIndicator_ProtocolIEs                                                           108
#define id_CNDomain_ProtocolIEs                                                                      109
#define id_E_RABReleasedList_ProtocolIEs                                                             110
#define id_MessageIdentifier_ProtocolIEs                                                             111
#define id_SerialNumber_ProtocolIEs                                                                  112
#define id_WarningAreaList_ProtocolIEs                                                               113
#define id_RepetitionPeriod_ProtocolIEs                                                              114
#define id_NumberofBroadcastRequest_ProtocolIEs                                                      115
#define id_WarningType_ProtocolIEs                                                                   116
#define id_WarningSecurityInfo_ProtocolIEs                                                           117
#define id_DataCodingScheme_ProtocolIEs                                                              118
#define id_WarningMessageContents_ProtocolIEs                                                        119
#define id_BroadcastCompletedAreaList_ProtocolIEs                                                    120
#define id_Inter_SystemInformationTransferTypeEDT_ProtocolIEs                                        121
#define id_Inter_SystemInformationTransferTypeMDT_ProtocolIEs                                        122
#define id_Target_ToSource_TransparentContainer_ProtocolIEs                                          123
#define id_SRVCCOperationPossible_ProtocolIEs                                                        124
#define id_SRVCCHOIndication_ProtocolIEs                                                             125
#define id_NAS_DownlinkCount_ProtocolIEs                                                             126
#define id_CSG_Id_ProtocolIEs                                                                        127
#define id_CSG_IdList_ProtocolIEs                                                                    128
#define id_SONConfigurationTransferECT_ProtocolIEs                                                   129
#define id_SONConfigurationTransferMCT_ProtocolIEs                                                   130
#define id_TraceCollectionEntityIPAddress_ProtocolIEs                                                131
#define id_MSClassmark2_ProtocolIEs                                                                  132
#define id_MSClassmark3_ProtocolIEs                                                                  133
#define id_RRC_Establishment_Cause_ProtocolIEs                                                       134
#define id_NASSecurityParametersfromE_UTRAN_ProtocolIEs                                              135
#define id_NASSecurityParameterstoE_UTRAN_ProtocolIEs                                                136
#define id_DefaultPagingDRX_ProtocolIEs                                                              137
#define id_Source_ToTarget_TransparentContainer_Secondary_ProtocolIEs                                138
#define id_Target_ToSource_TransparentContainer_Secondary_ProtocolIEs                                139
#define id_EUTRANRoundTripDelayEstimationInfo_ProtocolIEs                                            140
#define id_BroadcastCancelledAreaList_ProtocolIEs                                                    141
#define id_ConcurrentWarningMessageIndicator_ProtocolIEs                                             142
#define id_Data_Forwarding_Not_Possible_ProtocolIEs                                                  143
#define id_ExtendedRepetitionPeriod_ProtocolIEs                                                      144
#define id_CellAccessMode_ProtocolIEs                                                                145
#define id_CSGMembershipStatus_ProtocolIEs                                                           146
#define id_LPPa_PDU_ProtocolIEs                                                                      147
#define id_Routing_ID_ProtocolIEs                                                                    148
#define id_Time_Synchronisation_Info_ProtocolIEs                                                     149
#define id_PS_ServiceNotAvailable_ProtocolIEs                                                        150
#define id_PagingPriority_ProtocolIEs                                                                151
#define id_x2TNLConfigurationInfo_ProtocolIEs                                                        152
#define id_eNBX2ExtendedTransportLayerAddresses_ProtocolIEs                                          153
#define id_GUMMEIList_ProtocolIEs                                                                    154
#define id_GW_TransportLayerAddress_ProtocolIEs                                                      155
#define id_Correlation_ID_ProtocolIEs                                                                156
#define id_SourceMME_GUMMEI_ProtocolIEs                                                              157
#define id_MME_UE_S1AP_ID_2_ProtocolIEs                                                              158
#define id_RegisteredLAI_ProtocolIEs                                                                 159
#define id_RelayNode_Indicator_ProtocolIEs                                                           160
#define id_TrafficLoadReductionIndication_ProtocolIEs                                                161
#define id_MDTConfiguration_ProtocolIEs                                                              162
#define id_MMERelaySupportIndicator_ProtocolIEs                                                      163
#define id_GWContextReleaseIndication_ProtocolIEs                                                    164
#define id_ManagementBasedMDTAllowed_ProtocolIEs                                                     165
#define id_PrivacyIndicator_ProtocolIEs                                                              166
#define id_Time_UE_StayedInCell_EnhancedGranularity_ProtocolIEs                                      167
#define id_HO_Cause_ProtocolIEs                                                                      168
#define id_VoiceSupportMatchIndicator_ProtocolIEs                                                    169
#define id_GUMMEIType_ProtocolIEs                                                                    170
#define id_M3Configuration_ProtocolIEs                                                               171
#define id_M4Configuration_ProtocolIEs                                                               172
#define id_M5Configuration_ProtocolIEs                                                               173
#define id_MDT_Location_Info_ProtocolIEs                                                             174
#define id_MobilityInformation_ProtocolIEs                                                           175
#define id_Tunnel_Information_for_BBF_ProtocolIEs                                                    176
#define id_ManagementBasedMDTPLMNList_ProtocolIEs                                                    177
#define id_SignallingBasedMDTPLMNList_ProtocolIEs                                                    178
#define id_ULCOUNTValueExtended_ProtocolIEs                                                          179
#define id_DLCOUNTValueExtended_ProtocolIEs                                                          180
#define id_ReceiveStatusOfULPDCPSDUsExtended_ProtocolIEs                                             181
#define id_ECGIListForRestart_ProtocolIEs                                                            182
#define id_SIPTO_Correlation_ID_ProtocolIEs                                                          183
#define id_SIPTO_L_GW_TransportLayerAddress_ProtocolIEs                                              184
#define id_TransportInformation_ProtocolIEs                                                          185
#define id_LHN_ID_ProtocolIEs                                                                        186
#define id_AdditionalCSFallbackIndicator_ProtocolIEs                                                 187
#define id_TAIListForRestart_ProtocolIEs                                                             188
#define id_UserLocationInformation_ProtocolIEs                                                       189
#define id_EmergencyAreaIDListForRestart_ProtocolIEs                                                 190
#define id_KillAllWarningMessages_ProtocolIEs                                                        191
#define id_Masked_IMEISV_ProtocolIEs                                                                 192
#define id_eNBIndirectX2TransportLayerAddresses_ProtocolIEs                                          193
#define id_uE_HistoryInformationFromTheUE_ProtocolIEs                                                194
#define id_ProSeAuthorized_ProtocolIEs                                                               195
#define id_ExpectedUEBehaviour_ProtocolIEs                                                           196
#define id_LoggedMBSFNMDT_ProtocolIEs                                                                197
#define id_UERadioCapabilityForPaging_ProtocolIEs                                                    198
#define id_E_RABToBeModifiedListBearerModInd_ProtocolIEs                                             199
#define id_E_RABToBeModifiedItemBearerModInd_ProtocolIEs                                             200
#define id_E_RABNotToBeModifiedListBearerModInd_ProtocolIEs                                          201
#define id_E_RABNotToBeModifiedItemBearerModInd_ProtocolIEs                                          202
#define id_E_RABModifyListBearerModConf_ProtocolIEs                                                  203
#define id_E_RABModifyItemBearerModConf_ProtocolIEs                                                  204
#define id_E_RABFailedToModifyListBearerModConf_ProtocolIEs                                          205
#define id_SON_Information_Report_ProtocolIEs                                                        206
#define id_Muting_Availability_Indication_ProtocolIEs                                                207
#define id_Muting_Pattern_Information_ProtocolIEs                                                    208
#define id_Synchronisation_Information_ProtocolIEs                                                   209
#define id_E_RABToBeReleasedListBearerModConf_ProtocolIEs                                            210
#define id_AssistanceDataForPaging_ProtocolIEs                                                       211
#define id_CellIdentifierAndCELevelForCECapableUEs_ProtocolIEs                                       212
#define id_InformationOnRecommendedCellsAndENBsForPaging_ProtocolIEs                                 213
#define id_RecommendedCellItem_ProtocolIEs                                                           214
#define id_RecommendedENBItem_ProtocolIEs                                                            215
#define id_ProSeUEtoNetworkRelaying_ProtocolIEs                                                      216
#define id_ULCOUNTValuePDCP_SNlength18_ProtocolIEs                                                   217
#define id_DLCOUNTValuePDCP_SNlength18_ProtocolIEs                                                   218
#define id_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18_ProtocolIEs                                      219
#define id_M6Configuration_ProtocolIEs                                                               220
#define id_M7Configuration_ProtocolIEs                                                               221
#define id_PWSfailedECGIList_ProtocolIEs                                                             222
#define id_MME_Group_ID_ProtocolIEs                                                                  223
#define id_Additional_GUTI_ProtocolIEs                                                               224
#define id_S1_Message_ProtocolIEs                                                                    225
#define id_CSGMembershipInfo_ProtocolIEs                                                             226
#define id_Paging_eDRXInformation_ProtocolIEs                                                        227
#define id_UE_RetentionInformation_ProtocolIEs                                                       228
#define id_UE_Usage_Type_ProtocolIEs                                                                 230
#define id_extended_UEIdentityIndexValue_ProtocolIEs                                                 231
#define id_RAT_Type_ProtocolIEs                                                                      232
#define id_BearerType_ProtocolIEs                                                                    233
#define id_NB_IoT_DefaultPagingDRX_ProtocolIEs                                                       234
#define id_E_RABFailedToResumeListResumeReq_ProtocolIEs                                              235
#define id_E_RABFailedToResumeItemResumeReq_ProtocolIEs                                              236
#define id_E_RABFailedToResumeListResumeRes_ProtocolIEs                                              237
#define id_E_RABFailedToResumeItemResumeRes_ProtocolIEs                                              238
#define id_NB_IoT_Paging_eDRXInformation_ProtocolIEs                                                 239
#define id_V2XServicesAuthorized_ProtocolIEs                                                         240
#define id_UEUserPlaneCIoTSupportIndicator_ProtocolIEs                                               241
#define id_CE_mode_B_SupportIndicator_ProtocolIEs                                                    242
#define id_SRVCCOperationNotPossible_ProtocolIEs                                                     243
#define id_NB_IoT_UEIdentityIndexValue_ProtocolIEs                                                   244
#define id_RRC_Resume_Cause_ProtocolIEs                                                              245
#define id_DCN_ID_ProtocolIEs                                                                        246
#define id_ServedDCNs_ProtocolIEs                                                                    247
#define id_UESidelinkAggregateMaximumBitrate_ProtocolIEs                                             248
#define id_DLNASPDUDeliveryAckRequest_ProtocolIEs                                                    249
#define id_Coverage_Level_ProtocolIEs                                                                250
#define id_EnhancedCoverageRestricted_ProtocolIEs                                                    251
#define id_UE_Level_QoS_Parameters_ProtocolIEs                                                       252
#define id_DL_CP_SecurityInformation_ProtocolIEs                                                     253
#define id_UL_CP_SecurityInformation_ProtocolIEs                                                     254
#define id_extended_e_RAB_MaximumBitrateDL_ProtocolIEs                                               255
#define id_extended_e_RAB_MaximumBitrateUL_ProtocolIEs                                               256
#define id_extended_e_RAB_GuaranteedBitrateDL_ProtocolIEs                                            257
#define id_extended_e_RAB_GuaranteedBitrateUL_ProtocolIEs                                            258
#define id_extended_uEaggregateMaximumBitRateDL_ProtocolIEs                                          259
#define id_extended_uEaggregateMaximumBitRateUL_ProtocolIEs                                          260
#define id_NRrestrictioninEPSasSecondaryRAT_ProtocolIEs                                              261
#define id_UEAppLayerMeasConfig_ProtocolIEs                                                          262
#define id_UE_Application_Layer_Measurement_Capability_ProtocolIEs                                   263
#define id_SecondaryRATDataUsageReportList_ProtocolIEs                                               264
#define id_SecondaryRATDataUsageReportItem_ProtocolIEs                                               265
#define id_HandoverFlag_ProtocolIEs                                                                  266
#define id_E_RABUsageReportItem_ProtocolIEs                                                          267
#define id_SecondaryRATDataUsageRequest_ProtocolIEs                                                  268
#define id_NRUESecurityCapabilities_ProtocolIEs                                                      269
#define id_UnlicensedSpectrumRestriction_ProtocolIEs                                                 270
#define id_CE_ModeBRestricted_ProtocolIEs                                                            271
#define id_LTE_M_Indication_ProtocolIEs                                                              272
#define id_DownlinkPacketLossRate_ProtocolIEs                                                        273
#define id_UplinkPacketLossRate_ProtocolIEs                                                          274
#define id_UECapabilityInfoRequest_ProtocolIEs                                                       275
#define id_serviceType_ProtocolIEs                                                                   276
#define id_AerialUEsubscriptionInformation_ProtocolIEs                                               277
#define id_Subscription_Based_UE_DifferentiationInfo_ProtocolIEs                                     278
#define id_EndIndication_ProtocolIEs                                                                 280
#define id_EDT_Session_ProtocolIEs                                                                   281
#define id_CNTypeRestrictions_ProtocolIEs                                                            282
#define id_PendingDataIndication_ProtocolIEs                                                         283
#define id_BluetoothMeasurementConfiguration_ProtocolIEs                                             284
#define id_WLANMeasurementConfiguration_ProtocolIEs                                                  285
#define id_WarningAreaCoordinates_ProtocolIEs                                                        286
#define id_NRrestrictionin5GS_ProtocolIEs                                                            287
#define id_PSCellInformation_ProtocolIEs                                                             288
#define id_LastNG_RANPLMNIdentity_ProtocolIEs                                                        290
#define id_ConnectedengNBList_ProtocolIEs                                                            291
#define id_ConnectedengNBToAddList_ProtocolIEs                                                       292
#define id_ConnectedengNBToRemoveList_ProtocolIEs                                                    293
#define id_EN_DCSONConfigurationTransfer_ECT_ProtocolIEs                                             294
#define id_EN_DCSONConfigurationTransfer_MCT_ProtocolIEs                                             295
#define id_IMSvoiceEPSfallbackfrom5G_ProtocolIEs                                                     296
#define id_TimeSinceSecondaryNodeRelease_ProtocolIEs                                                 297
#define id_RequestTypeAdditionalInfo_ProtocolIEs                                                     298
#define id_AdditionalRRMPriorityIndex_ProtocolIEs                                                    299
#define id_ContextatSource_ProtocolIEs                                                               300
#define id_IAB_Authorized_ProtocolIEs                                                                301
#define id_IAB_Node_Indication_ProtocolIEs                                                           302
#define id_IAB_Supported_ProtocolIEs                                                                 303
#define id_DataSize_ProtocolIEs                                                                      304
#define id_Ethernet_Type_ProtocolIEs                                                                 305
#define id_NRV2XServicesAuthorized_ProtocolIEs                                                       306
#define id_NRUESidelinkAggregateMaximumBitrate_ProtocolIEs                                           307
#define id_PC5QoSParameters_ProtocolIEs                                                              308
#define id_IntersystemSONConfigurationTransferMCT_ProtocolIEs                                        309
#define id_IntersystemSONConfigurationTransferECT_ProtocolIEs                                        310
#define id_IntersystemMeasurementConfiguration_ProtocolIEs                                           311
#define id_SourceNodeID_ProtocolIEs                                                                  312
#define id_NB_IoT_RLF_Report_Container_ProtocolIEs                                                   313
#define id_UERadioCapabilityID_ProtocolIEs                                                           314
#define id_UERadioCapability_NR_Format_ProtocolIEs                                                   315
#define id_MDTConfigurationNR_ProtocolIEs                                                            316
#define id_DAPSRequestInfo_ProtocolIEs                                                               317
#define id_DAPSResponseInfoList_ProtocolIEs                                                          318
#define id_DAPSResponseInfoItem_ProtocolIEs                                                          319
#define id_NotifySourceeNB_ProtocolIEs                                                               320
#define id_eNB_EarlyStatusTransfer_TransparentContainer_ProtocolIEs                                  321
#define id_Bearers_SubjectToEarlyStatusTransfer_Item_ProtocolIEs                                     322
#define id_WUS_Assistance_Information_ProtocolIEs                                                    323
#define id_NB_IoT_PagingDRX_ProtocolIEs                                                              324
#define id_TraceCollectionEntityURI_ProtocolIEs                                                      325
#define id_EmergencyIndicator_ProtocolIEs                                                            326
#define id_UERadioCapabilityForPaging_NR_Format_ProtocolIEs                                          327
#define id_SourceTransportLayerAddress_ProtocolIEs                                                   328
#define id_lastVisitedPSCellList_ProtocolIEs                                                         329
#define id_RACSIndication_ProtocolIEs                                                                330
#define id_PagingCause_ProtocolIEs                                                                   331
#define id_SecurityIndication_ProtocolIEs                                                            332
#define id_SecurityResult_ProtocolIEs                                                                333
#define id_E_RABSecurityResultItem_ProtocolIEs                                                       334
#define id_E_RABSecurityResultList_ProtocolIEs                                                       335
#define id_RAT_Restrictions_ProtocolIEs                                                              336
#define id_UEContextReferenceatSourceeNB_ProtocolIEs                                                 337
#define id_LTE_NTN_TAI_Information_ProtocolIEs                                                       339
#define id_SourceNodeTransportLayerAddress_ProtocolIEs                                               340
#define id_E_RABToBeUpdatedList_ProtocolIEs                                                          341
#define id_E_RABToBeUpdatedItem_ProtocolIEs                                                          342
#define id_SourceSNID_ProtocolIEs                                                                    343
#define id_LoggedMDTTrigger_ProtocolIEs                                                              344
#define id_SensorMeasurementConfiguration_ProtocolIEs                                                345
#define id_M4ReportAmount_ProtocolIEs                                                                346
#define id_M5ReportAmount_ProtocolIEs                                                                347
#define id_M6ReportAmount_ProtocolIEs                                                                348
#define id_M7ReportAmount_ProtocolIEs                                                                349
#define id_TimeBasedHandoverInformation_ProtocolIEs                                                  350
#define id_Bearers_SubjectToDLDiscarding_Item_ProtocolIEs                                            351
#define id_Bearers_SubjectToDLDiscardingList_ProtocolIEs                                             352
#define id_CoarseUELocationRequested_ProtocolIEs                                                     353
#define id_CoarseUELocation_ProtocolIEs                                                              354



#define __si_s1ap__maxPrivateIEs_const                                                               65535
#define __si_s1ap__maxProtocolExtensions_const                                                       65535
#define __si_s1ap__maxProtocolIEs_const                                                              65535
#define __si_s1ap__maxnoofCSGs_const                                                                 256
#define __si_s1ap__maxnoofE_RABs_const                                                               256
#define __si_s1ap__maxnoofTAIs_const                                                                 256
#define __si_s1ap__maxnoofTACs_const                                                                 256
#define __si_s1ap__maxnoofErrors_const                                                               256
#define __si_s1ap__maxnoofBPLMNs_const                                                               6
#define __si_s1ap__maxnoofPLMNsPerMME_const                                                          32
#define __si_s1ap__maxnoofEPLMNs_const                                                               15
#define __si_s1ap__maxnoofEPLMNsPlusOne_const                                                        16
#define __si_s1ap__maxnoofForbLACs_const                                                             4096
#define __si_s1ap__maxnoofForbTACs_const                                                             4096
#define __si_s1ap__maxnoofIndividualS1ConnectionsToReset_const                                       256
#define __si_s1ap__maxnoofCellsinUEHistoryInfo_const                                                 16
#define __si_s1ap__maxnoofCellsineNB_const                                                           256
#define __si_s1ap__maxnoofTAIforWarning_const                                                        65535
#define __si_s1ap__maxnoofCellID_const                                                               65535
#define __si_s1ap__maxnoofDCNs_const                                                                 32
#define __si_s1ap__maxnoofEmergencyAreaID_const                                                      65535
#define __si_s1ap__maxnoofCellinTAI_const                                                            65535
#define __si_s1ap__maxnoofCellinEAI_const                                                            65535
#define __si_s1ap__maxnoofeNBX2TLAs_const                                                            2
#define __si_s1ap__maxnoofeNBX2ExtTLAs_const                                                         16
#define __si_s1ap__maxnoofeNBX2GTPTLAs_const                                                         16
#define __si_s1ap__maxnoofRATs_const                                                                 8
#define __si_s1ap__maxnoofGroupIDs_const                                                             65535
#define __si_s1ap__maxnoofMMECs_const                                                                256
#define __si_s1ap__maxnoofCellIDforMDT_const                                                         32
#define __si_s1ap__maxnoofTAforMDT_const                                                             8
#define __si_s1ap__maxnoofMDTPLMNs_const                                                             16
#define __si_s1ap__maxnoofCellsforRestart_const                                                      256
#define __si_s1ap__maxnoofRestartTAIs_const                                                          2048
#define __si_s1ap__maxnoofRestartEmergencyAreaIDs_const                                              256
#define __si_s1ap__maxEARFCN_const                                                                   262143
#define __si_s1ap__maxnoofMBSFNAreaMDT_const                                                         8
#define __si_s1ap__maxnoofRecommendedCells_const                                                     16
#define __si_s1ap__maxnoofRecommendedENBs_const                                                      16
#define __si_s1ap__maxnooftimeperiods_const                                                          2
#define __si_s1ap__maxnoofCellIDforQMC_const                                                         32
#define __si_s1ap__maxnoofTAforQMC_const                                                             8
#define __si_s1ap__maxnoofPLMNforQMC_const                                                           16
#define __si_s1ap__maxnoofBluetoothName_const                                                        4
#define __si_s1ap__maxnoofWLANName_const                                                             4
#define __si_s1ap__maxnoofConnectedengNBs_const                                                      256
#define __si_s1ap__maxnoofPC5QoSFlows_const                                                          2048
#define __si_s1ap__maxnooffrequencies_const                                                          64
#define __si_s1ap__maxNARFCN_const                                                                   3279165
#define __si_s1ap__maxRS_IndexCellQual_const                                                         16
#define __si_s1ap__maxnoofPSCellsPerPrimaryCellinUEHistoryInfo_const                                 8
#define __si_s1ap__maxnoofTACsInNTN_const                                                            12
#define __si_s1ap__maxnoofSensorName_const                                                           3
#define __si_s1ap__maxnoofIRATReportingCells_const                                                   128
#define __si_s1ap__maxnoofcandidateCells_const                                                       16
#define __si_s1ap__maxnoofCellineNB_const                                                            256



#define maxPrivateIEs_const                                                                          65535
#define maxProtocolExtensions_const                                                                  65535
#define maxProtocolIEs_const                                                                         65535
#define maxnoofCSGs_const                                                                            256
#define maxnoofE_RABs_const                                                                          256
#define maxnoofTAIs_const                                                                            256
#define maxnoofTACs_const                                                                            256
#define maxnoofErrors_const                                                                          256
#define maxnoofBPLMNs_const                                                                          6
#define maxnoofPLMNsPerMME_const                                                                     32
#define maxnoofEPLMNs_const                                                                          15
#define maxnoofEPLMNsPlusOne_const                                                                   16
#define maxnoofForbLACs_const                                                                        4096
#define maxnoofForbTACs_const                                                                        4096
#define maxnoofIndividualS1ConnectionsToReset_const                                                  256
#define maxnoofCellsinUEHistoryInfo_const                                                            16
#define maxnoofCellsineNB_const                                                                      256
#define maxnoofTAIforWarning_const                                                                   65535
#define maxnoofCellID_const                                                                          65535
#define maxnoofDCNs_const                                                                            32
#define maxnoofEmergencyAreaID_const                                                                 65535
#define maxnoofCellinTAI_const                                                                       65535
#define maxnoofCellinEAI_const                                                                       65535
#define maxnoofeNBX2TLAs_const                                                                       2
#define maxnoofeNBX2ExtTLAs_const                                                                    16
#define maxnoofeNBX2GTPTLAs_const                                                                    16
#define maxnoofRATs_const                                                                            8
#define maxnoofGroupIDs_const                                                                        65535
#define maxnoofMMECs_const                                                                           256
#define maxnoofCellIDforMDT_const                                                                    32
#define maxnoofTAforMDT_const                                                                        8
#define maxnoofMDTPLMNs_const                                                                        16
#define maxnoofCellsforRestart_const                                                                 256
#define maxnoofRestartTAIs_const                                                                     2048
#define maxnoofRestartEmergencyAreaIDs_const                                                         256
#define maxEARFCN_const                                                                              262143
#define maxnoofMBSFNAreaMDT_const                                                                    8
#define maxnoofRecommendedCells_const                                                                16
#define maxnoofRecommendedENBs_const                                                                 16
#define maxnooftimeperiods_const                                                                     2
#define maxnoofCellIDforQMC_const                                                                    32
#define maxnoofTAforQMC_const                                                                        8
#define maxnoofPLMNforQMC_const                                                                      16
#define maxnoofBluetoothName_const                                                                   4
#define maxnoofWLANName_const                                                                        4
#define maxnoofConnectedengNBs_const                                                                 256
#define maxnoofPC5QoSFlows_const                                                                     2048
#define maxnooffrequencies_const                                                                     64
#define maxNARFCN_const                                                                              3279165
#define maxRS_IndexCellQual_const                                                                    16
#define maxnoofPSCellsPerPrimaryCellinUEHistoryInfo_const                                            8
#define maxnoofTACsInNTN_const                                                                       12
#define maxnoofSensorName_const                                                                      3
#define maxnoofIRATReportingCells_const                                                              128
#define maxnoofcandidateCells_const                                                                  16
#define maxnoofCellineNB_const                                                                       256



#define __si_s1ap__DLCOUNT_PDCP_SNlength_dLCOUNTValuePDCP_SNlength12_val         0
#define __si_s1ap__DLCOUNT_PDCP_SNlength_dLCOUNTValuePDCP_SNlength15_val         1
#define __si_s1ap__DLCOUNT_PDCP_SNlength_dLCOUNTValuePDCP_SNlength18_val         2

#define DLCOUNT_PDCP_SNlength_dLCOUNTValuePDCP_SNlength12_val                    0
#define DLCOUNT_PDCP_SNlength_dLCOUNTValuePDCP_SNlength15_val                    1
#define DLCOUNT_PDCP_SNlength_dLCOUNTValuePDCP_SNlength18_val                    2

#define __si_s1ap__DLDiscarding_discardDLCOUNTValuePDCP_SNlength12_val           0
#define __si_s1ap__DLDiscarding_discardDLCOUNTValuePDCP_SNlength15_val           1
#define __si_s1ap__DLDiscarding_discardDLCOUNTValuePDCP_SNlength18_val           2

#define DLDiscarding_discardDLCOUNTValuePDCP_SNlength12_val                      0
#define DLDiscarding_discardDLCOUNTValuePDCP_SNlength15_val                      1
#define DLDiscarding_discardDLCOUNTValuePDCP_SNlength18_val                      2

#define __si_s1ap__Cause_radioNetwork_val                                        0
#define __si_s1ap__Cause_transport_val                                           1
#define __si_s1ap__Cause_nas_val                                                 2
#define __si_s1ap__Cause_protocol_val                                            3
#define __si_s1ap__Cause_misc_val                                                4

#define Cause_radioNetwork_val                                                   0
#define Cause_transport_val                                                      1
#define Cause_nas_val                                                            2
#define Cause_protocol_val                                                       3
#define Cause_misc_val                                                           4

#define __si_s1ap__MeasurementThresholdL1LoggedMDT_threshold_RSRP_val            0
#define __si_s1ap__MeasurementThresholdL1LoggedMDT_threshold_RSRQ_val            1
#define __si_s1ap__MeasurementThresholdL1LoggedMDT_choice_Extensions_val         2

#define MeasurementThresholdL1LoggedMDT_threshold_RSRP_val                       0
#define MeasurementThresholdL1LoggedMDT_threshold_RSRQ_val                       1
#define MeasurementThresholdL1LoggedMDT_choice_Extensions_val                    2

#define __si_s1ap__EventTrigger_outOfCoverage_val                                0
#define __si_s1ap__EventTrigger_eventL1LoggedMDTConfig_val                       1
#define __si_s1ap__EventTrigger_choice_Extensions_val                            2

#define EventTrigger_outOfCoverage_val                                           0
#define EventTrigger_eventL1LoggedMDTConfig_val                                  1
#define EventTrigger_choice_Extensions_val                                       2

#define __si_s1ap__LoggedMDTTrigger_periodical_val                               0
#define __si_s1ap__LoggedMDTTrigger_eventTrigger_val                             1

#define LoggedMDTTrigger_periodical_val                                          0
#define LoggedMDTTrigger_eventTrigger_val                                        1

#define __si_s1ap__ENB_ID_macroENB_ID_val                                        0
#define __si_s1ap__ENB_ID_homeENB_ID_val                                         1
#define __si_s1ap__ENB_ID_short_macroENB_ID_val                                  2
#define __si_s1ap__ENB_ID_long_macroENB_ID_val                                   3

#define ENB_ID_macroENB_ID_val                                                   0
#define ENB_ID_homeENB_ID_val                                                    1
#define ENB_ID_short_macroENB_ID_val                                             2
#define ENB_ID_long_macroENB_ID_val                                              3

#define __si_s1ap__MMEPagingTarget_global_ENB_ID_val                             0
#define __si_s1ap__MMEPagingTarget_tAI_val                                       1

#define MMEPagingTarget_global_ENB_ID_val                                        0
#define MMEPagingTarget_tAI_val                                                  1

#define __si_s1ap__SONInformationReport_rLFReportInformation_val                 0

#define SONInformationReport_rLFReportInformation_val                            0

#define __si_s1ap__GNB_Identity_gNB_ID_val                                       0

#define GNB_Identity_gNB_ID_val                                                  0

#define __si_s1ap__Global_RAN_NODE_ID_gNB_val                                    0
#define __si_s1ap__Global_RAN_NODE_ID_ng_eNB_val                                 1

#define Global_RAN_NODE_ID_gNB_val                                               0
#define Global_RAN_NODE_ID_ng_eNB_val                                            1

#define __si_s1ap__SourceNodeID_sourceNgRanNode_ID_val                           0
#define __si_s1ap__SourceNodeID_sourceNodeID_Extension_val                       1

#define SourceNodeID_sourceNgRanNode_ID_val                                      0
#define SourceNodeID_sourceNodeID_Extension_val                                  1

#define __si_s1ap__AreaScopeOfMDT_cellBased_val                                  0
#define __si_s1ap__AreaScopeOfMDT_tABased_val                                    1
#define __si_s1ap__AreaScopeOfMDT_pLMNWide_val                                   2
#define __si_s1ap__AreaScopeOfMDT_tAIBased_val                                   3

#define AreaScopeOfMDT_cellBased_val                                             0
#define AreaScopeOfMDT_tABased_val                                               1
#define AreaScopeOfMDT_pLMNWide_val                                              2
#define AreaScopeOfMDT_tAIBased_val                                              3

#define __si_s1ap__MeasurementThresholdA2_threshold_RSRP_val                     0
#define __si_s1ap__MeasurementThresholdA2_threshold_RSRQ_val                     1

#define MeasurementThresholdA2_threshold_RSRP_val                                0
#define MeasurementThresholdA2_threshold_RSRQ_val                                1

#define __si_s1ap__MDTMode_immediateMDT_val                                      0
#define __si_s1ap__MDTMode_loggedMDT_val                                         1
#define __si_s1ap__MDTMode_mDTMode_Extension_val                                 2

#define MDTMode_immediateMDT_val                                                 0
#define MDTMode_loggedMDT_val                                                    1
#define MDTMode_mDTMode_Extension_val                                            2

#define __si_s1ap__AreaScopeOfQMC_cellBased_val                                  0
#define __si_s1ap__AreaScopeOfQMC_tABased_val                                    1
#define __si_s1ap__AreaScopeOfQMC_tAIBased_val                                   2
#define __si_s1ap__AreaScopeOfQMC_pLMNAreaBased_val                              3

#define AreaScopeOfQMC_cellBased_val                                             0
#define AreaScopeOfQMC_tABased_val                                               1
#define AreaScopeOfQMC_tAIBased_val                                              2
#define AreaScopeOfQMC_pLMNAreaBased_val                                         3

#define __si_s1ap__TargetID_targeteNB_ID_val                                     0
#define __si_s1ap__TargetID_targetRNC_ID_val                                     1
#define __si_s1ap__TargetID_cGI_val                                              2
#define __si_s1ap__TargetID_targetgNgRanNode_ID_val                              3

#define TargetID_targeteNB_ID_val                                                0
#define TargetID_targetRNC_ID_val                                                1
#define TargetID_cGI_val                                                         2
#define TargetID_targetgNgRanNode_ID_val                                         3

#define __si_s1ap__UEPagingID_s_TMSI_val                                         0
#define __si_s1ap__UEPagingID_iMSI_val                                           1

#define UEPagingID_s_TMSI_val                                                    0
#define UEPagingID_iMSI_val                                                      1

#define __si_s1ap__UE_S1AP_IDs_uE_S1AP_ID_pair_val                               0
#define __si_s1ap__UE_S1AP_IDs_mME_UE_S1AP_ID_val                                1

#define UE_S1AP_IDs_uE_S1AP_ID_pair_val                                          0
#define UE_S1AP_IDs_mME_UE_S1AP_ID_val                                           1

#define __si_s1ap__ResetType_s1_Interface_val                                    0
#define __si_s1ap__ResetType_partOfS1_Interface_val                              1

#define ResetType_s1_Interface_val                                               0
#define ResetType_partOfS1_Interface_val                                         1

#define __si_s1ap__OverloadResponse_overloadAction_val                           0

#define OverloadResponse_overloadAction_val                                      0

#define __si_s1ap__WarningAreaList_cellIDList_val                                0
#define __si_s1ap__WarningAreaList_trackingAreaListforWarning_val                1
#define __si_s1ap__WarningAreaList_emergencyAreaIDList_val                       2

#define WarningAreaList_cellIDList_val                                           0
#define WarningAreaList_trackingAreaListforWarning_val                           1
#define WarningAreaList_emergencyAreaIDList_val                                  2

#define __si_s1ap__BroadcastCompletedAreaList_cellID_Broadcast_val               0
#define __si_s1ap__BroadcastCompletedAreaList_tAI_Broadcast_val                  1
#define __si_s1ap__BroadcastCompletedAreaList_emergencyAreaID_Broadcast_val      2

#define BroadcastCompletedAreaList_cellID_Broadcast_val                          0
#define BroadcastCompletedAreaList_tAI_Broadcast_val                             1
#define BroadcastCompletedAreaList_emergencyAreaID_Broadcast_val                 2

#define __si_s1ap__RIMRoutingAddress_gERAN_Cell_ID_val                           0
#define __si_s1ap__RIMRoutingAddress_targetRNC_ID_val                            1
#define __si_s1ap__RIMRoutingAddress_eHRPD_Sector_ID_val                         2

#define RIMRoutingAddress_gERAN_Cell_ID_val                                      0
#define RIMRoutingAddress_targetRNC_ID_val                                       1
#define RIMRoutingAddress_eHRPD_Sector_ID_val                                    2

#define __si_s1ap__Inter_SystemInformationTransferType_rIMTransfer_val           0

#define Inter_SystemInformationTransferType_rIMTransfer_val                      0

#define __si_s1ap__SONInformation_sONInformationRequest_val                      0
#define __si_s1ap__SONInformation_sONInformationReply_val                        1
#define __si_s1ap__SONInformation_sONInformation_Extension_val                   2

#define SONInformation_sONInformationRequest_val                                 0
#define SONInformation_sONInformationReply_val                                   1
#define SONInformation_sONInformation_Extension_val                              2

#define __si_s1ap__EN_DCSONTransferType_request_val                              0
#define __si_s1ap__EN_DCSONTransferType_reply_val                                1

#define EN_DCSONTransferType_request_val                                         0
#define EN_DCSONTransferType_reply_val                                           1

#define __si_s1ap__BroadcastCancelledAreaList_cellID_Cancelled_val               0
#define __si_s1ap__BroadcastCancelledAreaList_tAI_Cancelled_val                  1
#define __si_s1ap__BroadcastCancelledAreaList_emergencyAreaID_Cancelled_val      2

#define BroadcastCancelledAreaList_cellID_Cancelled_val                          0
#define BroadcastCancelledAreaList_tAI_Cancelled_val                             1
#define BroadcastCancelledAreaList_emergencyAreaID_Cancelled_val                 2



// L:5426
typedef struct __si_s1ap_dt_PrivateIEID_local SI_S1AP_DT_PrivateIEID_local;

// L:5426
typedef struct __si_s1ap_dt_ProcedureCode SI_S1AP_DT_ProcedureCode;
// L:5426
typedef struct __si_s1ap_dt_ProtocolExtensionID SI_S1AP_DT_ProtocolExtensionID;
// L:5426
typedef struct __si_s1ap_dt_ProtocolIE_ID SI_S1AP_DT_ProtocolIE_ID;

// L:5426
typedef struct __si_s1ap_dt_NULL SI_S1AP_DT_NULL;
// L:387
typedef struct __si_s1ap_dt_Additional_GUTI SI_S1AP_DT_Additional_GUTI;
// L:4970
typedef struct __si_s1ap_dt_AdditionalRRMPriorityIndex SI_S1AP_DT_AdditionalRRMPriorityIndex;



// L:387
typedef struct __si_s1ap_dt_AllocationAndRetentionPriority SI_S1AP_DT_AllocationAndRetentionPriority;
// L:387
typedef struct __si_s1ap_dt_AssistanceDataForCECapableUEs SI_S1AP_DT_AssistanceDataForCECapableUEs;
// L:387
typedef struct __si_s1ap_dt_AssistanceDataForPaging SI_S1AP_DT_AssistanceDataForPaging;
// L:387
typedef struct __si_s1ap_dt_AssistanceDataForRecommendedCells SI_S1AP_DT_AssistanceDataForRecommendedCells;
// L:1224
typedef struct __si_s1ap_dt_Bearers_SubjectToStatusTransferList SI_S1AP_DT_Bearers_SubjectToStatusTransferList;
// L:387
typedef struct __si_s1ap_dt_Bearers_SubjectToStatusTransfer_Item SI_S1AP_DT_Bearers_SubjectToStatusTransfer_Item;
// L:1224
typedef struct __si_s1ap_dt_Bearers_SubjectToEarlyStatusTransferList SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransferList;
// L:387
typedef struct __si_s1ap_dt_Bearers_SubjectToEarlyStatusTransfer_Item SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransfer_Item;
// L:1224
typedef struct __si_s1ap_dt_Bearers_SubjectToDLDiscardingList SI_S1AP_DT_Bearers_SubjectToDLDiscardingList;
// L:387
typedef struct __si_s1ap_dt_Bearers_SubjectToDLDiscarding_Item SI_S1AP_DT_Bearers_SubjectToDLDiscarding_Item;

// L:5426
typedef struct __si_s1ap_dt_BitRate SI_S1AP_DT_BitRate;

// L:387
typedef struct __si_s1ap_dt_BluetoothMeasurementConfiguration SI_S1AP_DT_BluetoothMeasurementConfiguration;
// L:1224
typedef struct __si_s1ap_dt_BluetoothMeasConfigNameList SI_S1AP_DT_BluetoothMeasConfigNameList;

// L:4495
typedef struct __si_s1ap_dt_BluetoothName SI_S1AP_DT_BluetoothName;
// L:1224
typedef struct __si_s1ap_dt_BPLMNs SI_S1AP_DT_BPLMNs;


// L:1224
typedef struct __si_s1ap_dt_CancelledCellinEAI SI_S1AP_DT_CancelledCellinEAI;
// L:387
typedef struct __si_s1ap_dt_CancelledCellinEAI_Item SI_S1AP_DT_CancelledCellinEAI_Item;
// L:1224
typedef struct __si_s1ap_dt_CancelledCellinTAI SI_S1AP_DT_CancelledCellinTAI;
// L:387
typedef struct __si_s1ap_dt_CancelledCellinTAI_Item SI_S1AP_DT_CancelledCellinTAI_Item;







// L:387
typedef struct __si_s1ap_dt_CellIdentifierAndCELevelForCECapableUEs SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs;
// L:4495
typedef struct __si_s1ap_dt_CELevel SI_S1AP_DT_CELevel;

// L:4970
typedef struct __si_s1ap_dt_CellIdentity SI_S1AP_DT_CellIdentity;
// L:1224
typedef struct __si_s1ap_dt_CellID_Broadcast SI_S1AP_DT_CellID_Broadcast;
// L:387
typedef struct __si_s1ap_dt_CellID_Broadcast_Item SI_S1AP_DT_CellID_Broadcast_Item;
// L:1224
typedef struct __si_s1ap_dt_CellID_Cancelled SI_S1AP_DT_CellID_Cancelled;
// L:387
typedef struct __si_s1ap_dt_CellID_Cancelled_Item SI_S1AP_DT_CellID_Cancelled_Item;
// L:387
typedef struct __si_s1ap_dt_CellBasedMDT SI_S1AP_DT_CellBasedMDT;
// L:1224
typedef struct __si_s1ap_dt_CellIdListforMDT SI_S1AP_DT_CellIdListforMDT;
// L:387
typedef struct __si_s1ap_dt_CellBasedQMC SI_S1AP_DT_CellBasedQMC;
// L:1224
typedef struct __si_s1ap_dt_CellIdListforQMC SI_S1AP_DT_CellIdListforQMC;
// L:4495
typedef struct __si_s1ap_dt_Cdma2000PDU SI_S1AP_DT_Cdma2000PDU;

// L:4495
typedef struct __si_s1ap_dt_Cdma2000SectorID SI_S1AP_DT_Cdma2000SectorID;


// L:387
typedef struct __si_s1ap_dt_Cdma2000OneXSRVCCInfo SI_S1AP_DT_Cdma2000OneXSRVCCInfo;
// L:4495
typedef struct __si_s1ap_dt_Cdma2000OneXMEID SI_S1AP_DT_Cdma2000OneXMEID;
// L:4495
typedef struct __si_s1ap_dt_Cdma2000OneXMSI SI_S1AP_DT_Cdma2000OneXMSI;
// L:4495
typedef struct __si_s1ap_dt_Cdma2000OneXPilot SI_S1AP_DT_Cdma2000OneXPilot;
// L:4495
typedef struct __si_s1ap_dt_Cdma2000OneXRAND SI_S1AP_DT_Cdma2000OneXRAND;

// L:387
typedef struct __si_s1ap_dt_CellType SI_S1AP_DT_CellType;
// L:387
typedef struct __si_s1ap_dt_CGI SI_S1AP_DT_CGI;
// L:4495
typedef struct __si_s1ap_dt_CI SI_S1AP_DT_CI;

// L:1224
typedef struct __si_s1ap_dt_CNTypeRestrictions SI_S1AP_DT_CNTypeRestrictions;
// L:387
typedef struct __si_s1ap_dt_CNTypeRestrictions_Item SI_S1AP_DT_CNTypeRestrictions_Item;


// L:4495
typedef struct __si_s1ap_dt_CoarseUELocation SI_S1AP_DT_CoarseUELocation;

// L:1224
typedef struct __si_s1ap_dt_ConnectedengNBList SI_S1AP_DT_ConnectedengNBList;
// L:387
typedef struct __si_s1ap_dt_ConnectedengNBItem SI_S1AP_DT_ConnectedengNBItem;
// L:387
typedef struct __si_s1ap_dt_ContextatSource SI_S1AP_DT_ContextatSource;
// L:4495
typedef struct __si_s1ap_dt_Correlation_ID SI_S1AP_DT_Correlation_ID;


// L:4970
typedef struct __si_s1ap_dt_CSG_Id SI_S1AP_DT_CSG_Id;
// L:1224
typedef struct __si_s1ap_dt_CSG_IdList SI_S1AP_DT_CSG_IdList;
// L:387
typedef struct __si_s1ap_dt_CSG_IdList_Item SI_S1AP_DT_CSG_IdList_Item;

// L:387
typedef struct __si_s1ap_dt_COUNTvalue SI_S1AP_DT_COUNTvalue;
// L:387
typedef struct __si_s1ap_dt_COUNTValueExtended SI_S1AP_DT_COUNTValueExtended;
// L:387
typedef struct __si_s1ap_dt_COUNTvaluePDCP_SNlength18 SI_S1AP_DT_COUNTvaluePDCP_SNlength18;

// L:387
typedef struct __si_s1ap_dt_CriticalityDiagnostics SI_S1AP_DT_CriticalityDiagnostics;
// L:1224
typedef struct __si_s1ap_dt_CriticalityDiagnostics_IE_List SI_S1AP_DT_CriticalityDiagnostics_IE_List;
// L:387
typedef struct __si_s1ap_dt_CriticalityDiagnostics_IE_Item SI_S1AP_DT_CriticalityDiagnostics_IE_Item;

// L:387
typedef struct __si_s1ap_dt_DAPSRequestInfo SI_S1AP_DT_DAPSRequestInfo;
// L:1224
typedef struct __si_s1ap_dt_DAPSResponseInfoList SI_S1AP_DT_DAPSResponseInfoList;
// No structure for DAPSResponseInfoListIEs  

// L:387
typedef struct __si_s1ap_dt_DAPSResponseInfoItem SI_S1AP_DT_DAPSResponseInfoItem;

// L:387
typedef struct __si_s1ap_dt_DAPSResponseInfo SI_S1AP_DT_DAPSResponseInfo;
// L:4970
typedef struct __si_s1ap_dt_DataCodingScheme SI_S1AP_DT_DataCodingScheme;
// L:5426
typedef struct __si_s1ap_dt_DataSize SI_S1AP_DT_DataSize;
// L:5426
typedef struct __si_s1ap_dt_DCN_ID SI_S1AP_DT_DCN_ID;
// L:1224
typedef struct __si_s1ap_dt_ServedDCNs SI_S1AP_DT_ServedDCNs;
// L:387
typedef struct __si_s1ap_dt_ServedDCNsItem SI_S1AP_DT_ServedDCNsItem;
// L:387
typedef struct __si_s1ap_dt_DL_CP_SecurityInformation SI_S1AP_DT_DL_CP_SecurityInformation;

// L:4970
typedef struct __si_s1ap_dt_DL_NAS_MAC SI_S1AP_DT_DL_NAS_MAC;





// L:5426
typedef struct __si_s1ap_dt_EARFCN SI_S1AP_DT_EARFCN;
// L:1224
typedef struct __si_s1ap_dt_ECGIList SI_S1AP_DT_ECGIList;
// L:1224
typedef struct __si_s1ap_dt_PWSfailedECGIList SI_S1AP_DT_PWSfailedECGIList;

// L:1224
typedef struct __si_s1ap_dt_EmergencyAreaIDList SI_S1AP_DT_EmergencyAreaIDList;
// L:4495
typedef struct __si_s1ap_dt_EmergencyAreaID SI_S1AP_DT_EmergencyAreaID;
// L:1224
typedef struct __si_s1ap_dt_EmergencyAreaID_Broadcast SI_S1AP_DT_EmergencyAreaID_Broadcast;
// L:387
typedef struct __si_s1ap_dt_EmergencyAreaID_Broadcast_Item SI_S1AP_DT_EmergencyAreaID_Broadcast_Item;
// L:1224
typedef struct __si_s1ap_dt_EmergencyAreaID_Cancelled SI_S1AP_DT_EmergencyAreaID_Cancelled;
// L:387
typedef struct __si_s1ap_dt_EmergencyAreaID_Cancelled_Item SI_S1AP_DT_EmergencyAreaID_Cancelled_Item;
// L:1224
typedef struct __si_s1ap_dt_CompletedCellinEAI SI_S1AP_DT_CompletedCellinEAI;
// L:387
typedef struct __si_s1ap_dt_CompletedCellinEAI_Item SI_S1AP_DT_CompletedCellinEAI_Item;
// L:1224
typedef struct __si_s1ap_dt_ECGI_List SI_S1AP_DT_ECGI_List;
// L:1224
typedef struct __si_s1ap_dt_EmergencyAreaIDListForRestart SI_S1AP_DT_EmergencyAreaIDListForRestart;

// L:387
typedef struct __si_s1ap_dt_ENB_EarlyStatusTransfer_TransparentContainer SI_S1AP_DT_ENB_EarlyStatusTransfer_TransparentContainer;
// L:4970
typedef struct __si_s1ap_dt_ENBID_macroENB_ID SI_S1AP_DT_ENBID_macroENB_ID;
// L:4970
typedef struct __si_s1ap_dt_ENBID_homeENB_ID SI_S1AP_DT_ENBID_homeENB_ID;
// L:4970
typedef struct __si_s1ap_dt_ENBID_short_macroENB_ID SI_S1AP_DT_ENBID_short_macroENB_ID;
// L:4970
typedef struct __si_s1ap_dt_ENBID_long_macroENB_ID SI_S1AP_DT_ENBID_long_macroENB_ID;

// L:4970
typedef struct __si_s1ap_dt_En_gNB_ID SI_S1AP_DT_En_gNB_ID;
// L:387
typedef struct __si_s1ap_dt_GERAN_Cell_ID SI_S1AP_DT_GERAN_Cell_ID;
// L:387
typedef struct __si_s1ap_dt_Global_ENB_ID SI_S1AP_DT_Global_ENB_ID;
// L:387
typedef struct __si_s1ap_dt_Global_en_gNB_ID SI_S1AP_DT_Global_en_gNB_ID;
// L:1224
typedef struct __si_s1ap_dt_GUMMEIList SI_S1AP_DT_GUMMEIList;
// L:387
typedef struct __si_s1ap_dt_ENB_StatusTransfer_TransparentContainer SI_S1AP_DT_ENB_StatusTransfer_TransparentContainer;
// L:5426
typedef struct __si_s1ap_dt_ENB_UE_S1AP_ID SI_S1AP_DT_ENB_UE_S1AP_ID;
// L:5858
typedef struct __si_s1ap_dt_ENBname SI_S1AP_DT_ENBname;
// L:1224
typedef struct __si_s1ap_dt_ENBX2TLAs SI_S1AP_DT_ENBX2TLAs;
// L:4970
typedef struct __si_s1ap_dt_EncryptionAlgorithms SI_S1AP_DT_EncryptionAlgorithms;
// L:387
typedef struct __si_s1ap_dt_EN_DCSONConfigurationTransfer SI_S1AP_DT_EN_DCSONConfigurationTransfer;

// L:387
typedef struct __si_s1ap_dt_EN_DCTransferTypeRequest SI_S1AP_DT_EN_DCTransferTypeRequest;
// L:387
typedef struct __si_s1ap_dt_EN_DCTransferTypeReply SI_S1AP_DT_EN_DCTransferTypeReply;
// L:387
typedef struct __si_s1ap_dt_EN_DCSONeNBIdentification SI_S1AP_DT_EN_DCSONeNBIdentification;
// L:387
typedef struct __si_s1ap_dt_EN_DCSONengNBIdentification SI_S1AP_DT_EN_DCSONengNBIdentification;



// L:1224
typedef struct __si_s1ap_dt_EPLMNs SI_S1AP_DT_EPLMNs;

// L:5426
typedef struct __si_s1ap_dt_E_RAB_ID SI_S1AP_DT_E_RAB_ID;
// L:1224
typedef struct __si_s1ap_dt_E_RABInformationList SI_S1AP_DT_E_RABInformationList;
// No structure for E-RABInformationListIEs  

// L:387
typedef struct __si_s1ap_dt_E_RABInformationListItem SI_S1AP_DT_E_RABInformationListItem;
// L:1224
typedef struct __si_s1ap_dt_E_RABList SI_S1AP_DT_E_RABList;
// L:387
typedef struct __si_s1ap_dt_E_RABItem SI_S1AP_DT_E_RABItem;
// L:387
typedef struct __si_s1ap_dt_E_RABLevelQoSParameters SI_S1AP_DT_E_RABLevelQoSParameters;
// L:1224
typedef struct __si_s1ap_dt_E_RABSecurityResultList SI_S1AP_DT_E_RABSecurityResultList;
// No structure for E-RABSecurityResultListIEs  

// L:387
typedef struct __si_s1ap_dt_E_RABSecurityResultItem SI_S1AP_DT_E_RABSecurityResultItem;
// L:1224
typedef struct __si_s1ap_dt_E_RABUsageReportList SI_S1AP_DT_E_RABUsageReportList;
// L:4495
typedef struct __si_s1ap_dt_ERABUsageReportItem_startTimestamp SI_S1AP_DT_ERABUsageReportItem_startTimestamp;
// L:4495
typedef struct __si_s1ap_dt_ERABUsageReportItem_endTimestamp SI_S1AP_DT_ERABUsageReportItem_endTimestamp;
// L:5426
typedef struct __si_s1ap_dt_ERABUsageReportItem_usageCountUL SI_S1AP_DT_ERABUsageReportItem_usageCountUL;
// L:5426
typedef struct __si_s1ap_dt_ERABUsageReportItem_usageCountDL SI_S1AP_DT_ERABUsageReportItem_usageCountDL;
// L:387
typedef struct __si_s1ap_dt_E_RABUsageReportItem SI_S1AP_DT_E_RABUsageReportItem;

// L:387
typedef struct __si_s1ap_dt_EUTRAN_CGI SI_S1AP_DT_EUTRAN_CGI;
// L:5426
typedef struct __si_s1ap_dt_EUTRANRoundTripDelayEstimationInfo SI_S1AP_DT_EUTRANRoundTripDelayEstimationInfo;
// L:387
typedef struct __si_s1ap_dt_EventL1LoggedMDTConfig SI_S1AP_DT_EventL1LoggedMDTConfig;


// L:387
typedef struct __si_s1ap_dt_ExpectedUEBehaviour SI_S1AP_DT_ExpectedUEBehaviour;
// L:387
typedef struct __si_s1ap_dt_ExpectedUEActivityBehaviour SI_S1AP_DT_ExpectedUEActivityBehaviour;
// L:5426
typedef struct __si_s1ap_dt_ExpectedActivityPeriod SI_S1AP_DT_ExpectedActivityPeriod;
// L:5426
typedef struct __si_s1ap_dt_ExpectedIdlePeriod SI_S1AP_DT_ExpectedIdlePeriod;


// L:5426
typedef struct __si_s1ap_dt_ExtendedBitRate SI_S1AP_DT_ExtendedBitRate;
// L:5426
typedef struct __si_s1ap_dt_ExtendedRNC_ID SI_S1AP_DT_ExtendedRNC_ID;
// L:5426
typedef struct __si_s1ap_dt_ExtendedRepetitionPeriod SI_S1AP_DT_ExtendedRepetitionPeriod;
// L:4970
typedef struct __si_s1ap_dt_Extended_UEIdentityIndexValue SI_S1AP_DT_Extended_UEIdentityIndexValue;
// L:4495
typedef struct __si_s1ap_dt_FiveGSTAC SI_S1AP_DT_FiveGSTAC;
// L:387
typedef struct __si_s1ap_dt_FiveGSTAI SI_S1AP_DT_FiveGSTAI;
// L:5426
typedef struct __si_s1ap_dt_FiveQI SI_S1AP_DT_FiveQI;

// L:1224
typedef struct __si_s1ap_dt_ForbiddenTAs SI_S1AP_DT_ForbiddenTAs;
// L:387
typedef struct __si_s1ap_dt_ForbiddenTAs_Item SI_S1AP_DT_ForbiddenTAs_Item;
// L:1224
typedef struct __si_s1ap_dt_ForbiddenTACs SI_S1AP_DT_ForbiddenTACs;
// L:1224
typedef struct __si_s1ap_dt_ForbiddenLAs SI_S1AP_DT_ForbiddenLAs;
// L:387
typedef struct __si_s1ap_dt_ForbiddenLAs_Item SI_S1AP_DT_ForbiddenLAs_Item;
// L:1224
typedef struct __si_s1ap_dt_ForbiddenLACs SI_S1AP_DT_ForbiddenLACs;
// L:387
typedef struct __si_s1ap_dt_GBR_QosInformation SI_S1AP_DT_GBR_QosInformation;
// L:4495
typedef struct __si_s1ap_dt_GTP_TEID SI_S1AP_DT_GTP_TEID;
// L:387
typedef struct __si_s1ap_dt_GUMMEI SI_S1AP_DT_GUMMEI;



// L:387
typedef struct __si_s1ap_dt_HandoverRestrictionList SI_S1AP_DT_HandoverRestrictionList;

// L:5426
typedef struct __si_s1ap_dt_HFN SI_S1AP_DT_HFN;
// L:5426
typedef struct __si_s1ap_dt_HFNModified SI_S1AP_DT_HFNModified;
// L:5426
typedef struct __si_s1ap_dt_HFNforPDCP_SNlength18 SI_S1AP_DT_HFNforPDCP_SNlength18;
// L:5426
typedef struct __si_s1ap_dt_Hysteresis SI_S1AP_DT_Hysteresis;
// L:4970
typedef struct __si_s1ap_dt_Masked_IMEISV SI_S1AP_DT_Masked_IMEISV;
// L:387
typedef struct __si_s1ap_dt_ImmediateMDT SI_S1AP_DT_ImmediateMDT;
// L:4495
typedef struct __si_s1ap_dt_IMSI SI_S1AP_DT_IMSI;
// L:387
typedef struct __si_s1ap_dt_InformationOnRecommendedCellsAndENBsForPaging SI_S1AP_DT_InformationOnRecommendedCellsAndENBsForPaging;
// L:4970
typedef struct __si_s1ap_dt_IntegrityProtectionAlgorithms SI_S1AP_DT_IntegrityProtectionAlgorithms;


// L:5426
typedef struct __si_s1ap_dt_IntendedNumberOfPagingAttempts SI_S1AP_DT_IntendedNumberOfPagingAttempts;
// L:4970
typedef struct __si_s1ap_dt_InterfacesToTrace SI_S1AP_DT_InterfacesToTrace;
// L:5426
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration_rSRP SI_S1AP_DT_IntersystemMeasurementConfiguration_rSRP;
// L:5426
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration_rSRQ SI_S1AP_DT_IntersystemMeasurementConfiguration_rSRQ;
// L:5426
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration_sINR SI_S1AP_DT_IntersystemMeasurementConfiguration_sINR;
// L:387
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration SI_S1AP_DT_IntersystemMeasurementConfiguration;
// L:5426
typedef struct __si_s1ap_dt_InterSystemMeasurementParameters_measurementDuration SI_S1AP_DT_InterSystemMeasurementParameters_measurementDuration;
// L:387
typedef struct __si_s1ap_dt_InterSystemMeasurementParameters SI_S1AP_DT_InterSystemMeasurementParameters;
// L:1224
typedef struct __si_s1ap_dt_InterSystemMeasurementList SI_S1AP_DT_InterSystemMeasurementList;
// L:5426
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_freqBandIndicatorNR SI_S1AP_DT_InterSystemMeasurementItem_freqBandIndicatorNR;
// L:5426
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_sSBfrequencies SI_S1AP_DT_InterSystemMeasurementItem_sSBfrequencies;

// L:5426
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_maxRSIndexCellQual SI_S1AP_DT_InterSystemMeasurementItem_maxRSIndexCellQual;
// L:4495
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_sMTC SI_S1AP_DT_InterSystemMeasurementItem_sMTC;
// L:4495
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_threshRS_Index_r15 SI_S1AP_DT_InterSystemMeasurementItem_threshRS_Index_r15;
// L:4495
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_sSBToMeasure SI_S1AP_DT_InterSystemMeasurementItem_sSBToMeasure;
// L:4495
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_sSRSSIMeasurement SI_S1AP_DT_InterSystemMeasurementItem_sSRSSIMeasurement;
// L:4495
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_quantityConfigNR_R15 SI_S1AP_DT_InterSystemMeasurementItem_quantityConfigNR_R15;
// L:4495
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_excludedCellsToAddModList SI_S1AP_DT_InterSystemMeasurementItem_excludedCellsToAddModList;
// L:387
typedef struct __si_s1ap_dt_InterSystemMeasurementItem SI_S1AP_DT_InterSystemMeasurementItem;
// L:4495
typedef struct __si_s1ap_dt_IntersystemSONConfigurationTransfer SI_S1AP_DT_IntersystemSONConfigurationTransfer;





// L:4495
typedef struct __si_s1ap_dt_LAC SI_S1AP_DT_LAC;
// L:387
typedef struct __si_s1ap_dt_LAI SI_S1AP_DT_LAI;

// L:387
typedef struct __si_s1ap_dt_LastVisitedEUTRANCellInformation SI_S1AP_DT_LastVisitedEUTRANCellInformation;
// L:1224
typedef struct __si_s1ap_dt_LastVisitedPSCellList SI_S1AP_DT_LastVisitedPSCellList;
// L:5426
typedef struct __si_s1ap_dt_LastVisitedPSCellInformation_timeStay SI_S1AP_DT_LastVisitedPSCellInformation_timeStay;
// L:387
typedef struct __si_s1ap_dt_LastVisitedPSCellInformation SI_S1AP_DT_LastVisitedPSCellInformation;
// L:4495
typedef struct __si_s1ap_dt_LastVisitedNGRANCellInformation SI_S1AP_DT_LastVisitedNGRANCellInformation;
// L:4495
typedef struct __si_s1ap_dt_LastVisitedUTRANCellInformation SI_S1AP_DT_LastVisitedUTRANCellInformation;

// L:4495
typedef struct __si_s1ap_dt_L3_Information SI_S1AP_DT_L3_Information;
// L:4495
typedef struct __si_s1ap_dt_LPPa_PDU SI_S1AP_DT_LPPa_PDU;
// L:4495
typedef struct __si_s1ap_dt_LHN_ID SI_S1AP_DT_LHN_ID;


// L:5426
typedef struct __si_s1ap_dt_ListeningSubframePattern_pattern_offset SI_S1AP_DT_ListeningSubframePattern_pattern_offset;
// L:387
typedef struct __si_s1ap_dt_ListeningSubframePattern SI_S1AP_DT_ListeningSubframePattern;
// L:387
typedef struct __si_s1ap_dt_LoggedMDT SI_S1AP_DT_LoggedMDT;


// L:387
typedef struct __si_s1ap_dt_LoggedMBSFNMDT SI_S1AP_DT_LoggedMBSFNMDT;


// L:387
typedef struct __si_s1ap_dt_LTE_NTN_TAI_Information SI_S1AP_DT_LTE_NTN_TAI_Information;
// L:387
typedef struct __si_s1ap_dt_M3Configuration SI_S1AP_DT_M3Configuration;

// L:387
typedef struct __si_s1ap_dt_M4Configuration SI_S1AP_DT_M4Configuration;


// L:387
typedef struct __si_s1ap_dt_M5Configuration SI_S1AP_DT_M5Configuration;


// L:387
typedef struct __si_s1ap_dt_M6Configuration SI_S1AP_DT_M6Configuration;



// L:387
typedef struct __si_s1ap_dt_M7Configuration SI_S1AP_DT_M7Configuration;

// L:5426
typedef struct __si_s1ap_dt_M7period SI_S1AP_DT_M7period;

// L:4970
typedef struct __si_s1ap_dt_MDT_Location_Info SI_S1AP_DT_MDT_Location_Info;
// L:387
typedef struct __si_s1ap_dt_MDT_Configuration SI_S1AP_DT_MDT_Configuration;

// L:1224
typedef struct __si_s1ap_dt_MBSFN_ResultToLog SI_S1AP_DT_MBSFN_ResultToLog;
// L:5426
typedef struct __si_s1ap_dt_MBSFNResultToLogInfo_mBSFN_AreaId SI_S1AP_DT_MBSFNResultToLogInfo_mBSFN_AreaId;
// L:387
typedef struct __si_s1ap_dt_MBSFN_ResultToLogInfo SI_S1AP_DT_MBSFN_ResultToLogInfo;
// L:1224
typedef struct __si_s1ap_dt_MDTPLMNList SI_S1AP_DT_MDTPLMNList;


// No structure for MDTMode-Extension 

// L:4970
typedef struct __si_s1ap_dt_MeasurementsToActivate SI_S1AP_DT_MeasurementsToActivate;


// L:4970
typedef struct __si_s1ap_dt_MessageIdentifier SI_S1AP_DT_MessageIdentifier;
// L:4970
typedef struct __si_s1ap_dt_MobilityInformation SI_S1AP_DT_MobilityInformation;
// L:5858
typedef struct __si_s1ap_dt_MMEname SI_S1AP_DT_MMEname;


// L:4495
typedef struct __si_s1ap_dt_MME_Group_ID SI_S1AP_DT_MME_Group_ID;
// L:4495
typedef struct __si_s1ap_dt_MME_Code SI_S1AP_DT_MME_Code;
// L:5426
typedef struct __si_s1ap_dt_MME_UE_S1AP_ID SI_S1AP_DT_MME_UE_S1AP_ID;
// L:4495
typedef struct __si_s1ap_dt_M_TMSI SI_S1AP_DT_M_TMSI;
// L:4495
typedef struct __si_s1ap_dt_MSClassmark2 SI_S1AP_DT_MSClassmark2;


// L:5426
typedef struct __si_s1ap_dt_MutingPatternInformation_muting_pattern_offset SI_S1AP_DT_MutingPatternInformation_muting_pattern_offset;
// L:387
typedef struct __si_s1ap_dt_MutingPatternInformation SI_S1AP_DT_MutingPatternInformation;
// L:4495
typedef struct __si_s1ap_dt_MDT_ConfigurationNR SI_S1AP_DT_MDT_ConfigurationNR;
// L:4495
typedef struct __si_s1ap_dt_NAS_PDU SI_S1AP_DT_NAS_PDU;
// L:4495
typedef struct __si_s1ap_dt_NASSecurityParametersfromE_UTRAN SI_S1AP_DT_NASSecurityParametersfromE_UTRAN;
// L:4495
typedef struct __si_s1ap_dt_NASSecurityParameterstoE_UTRAN SI_S1AP_DT_NASSecurityParameterstoE_UTRAN;


// L:387
typedef struct __si_s1ap_dt_NB_IoT_Paging_eDRXInformation SI_S1AP_DT_NB_IoT_Paging_eDRXInformation;


// L:4495
typedef struct __si_s1ap_dt_NB_IoT_RLF_Report_Container SI_S1AP_DT_NB_IoT_RLF_Report_Container;
// L:4970
typedef struct __si_s1ap_dt_NB_IoT_UEIdentityIndexValue SI_S1AP_DT_NB_IoT_UEIdentityIndexValue;


// L:4970
typedef struct __si_s1ap_dt_NRCellIdentity SI_S1AP_DT_NRCellIdentity;
// L:387
typedef struct __si_s1ap_dt_NR_CGI SI_S1AP_DT_NR_CGI;
// L:4970
typedef struct __si_s1ap_dt_NRencryptionAlgorithms SI_S1AP_DT_NRencryptionAlgorithms;


// L:387
typedef struct __si_s1ap_dt_NRUESecurityCapabilities SI_S1AP_DT_NRUESecurityCapabilities;
// L:5426
typedef struct __si_s1ap_dt_NumberofBroadcastRequest SI_S1AP_DT_NumberofBroadcastRequest;
// L:5426
typedef struct __si_s1ap_dt_NumberOfBroadcasts SI_S1AP_DT_NumberOfBroadcasts;
// L:387
typedef struct __si_s1ap_dt_NRV2XServicesAuthorized SI_S1AP_DT_NRV2XServicesAuthorized;
// L:387
typedef struct __si_s1ap_dt_NRUESidelinkAggregateMaximumBitrate SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate;
// L:4495
typedef struct __si_s1ap_dt_OldBSS_ToNewBSS_Information SI_S1AP_DT_OldBSS_ToNewBSS_Information;


// L:5426
typedef struct __si_s1ap_dt_Packet_LossRate SI_S1AP_DT_Packet_LossRate;
// L:387
typedef struct __si_s1ap_dt_PagingAttemptInformation SI_S1AP_DT_PagingAttemptInformation;
// L:5426
typedef struct __si_s1ap_dt_PagingAttemptCount SI_S1AP_DT_PagingAttemptCount;
// L:387
typedef struct __si_s1ap_dt_Paging_eDRXInformation SI_S1AP_DT_Paging_eDRXInformation;






// L:387
typedef struct __si_s1ap_dt_PC5QoSParameters SI_S1AP_DT_PC5QoSParameters;
// L:1224
typedef struct __si_s1ap_dt_PC5QoSFlowList SI_S1AP_DT_PC5QoSFlowList;
// L:387
typedef struct __si_s1ap_dt_PC5QoSFlowItem SI_S1AP_DT_PC5QoSFlowItem;
// L:387
typedef struct __si_s1ap_dt_PC5FlowBitRates SI_S1AP_DT_PC5FlowBitRates;
// L:5426
typedef struct __si_s1ap_dt_PDCP_SN SI_S1AP_DT_PDCP_SN;
// L:5426
typedef struct __si_s1ap_dt_PDCP_SNExtended SI_S1AP_DT_PDCP_SNExtended;
// L:5426
typedef struct __si_s1ap_dt_PDCP_SNlength18 SI_S1AP_DT_PDCP_SNlength18;

// L:387
typedef struct __si_s1ap_dt_M1PeriodicReporting SI_S1AP_DT_M1PeriodicReporting;
// L:4495
typedef struct __si_s1ap_dt_PLMNidentity SI_S1AP_DT_PLMNidentity;
// L:387
typedef struct __si_s1ap_dt_PLMNAreaBasedQMC SI_S1AP_DT_PLMNAreaBasedQMC;
// L:1224
typedef struct __si_s1ap_dt_PLMNListforQMC SI_S1AP_DT_PLMNListforQMC;
// L:4495
typedef struct __si_s1ap_dt_Port_Number SI_S1AP_DT_Port_Number;


// L:5426
typedef struct __si_s1ap_dt_PriorityLevel SI_S1AP_DT_PriorityLevel;
// L:387
typedef struct __si_s1ap_dt_ProSeAuthorized SI_S1AP_DT_ProSeAuthorized;




// L:387
typedef struct __si_s1ap_dt_PSCellInformation SI_S1AP_DT_PSCellInformation;
// L:5426
typedef struct __si_s1ap_dt_QCI SI_S1AP_DT_QCI;

// L:5426
typedef struct __si_s1ap_dt_RAN_UE_NGAP_ID SI_S1AP_DT_RAN_UE_NGAP_ID;

// L:4970
typedef struct __si_s1ap_dt_ReceiveStatusofULPDCPSDUs SI_S1AP_DT_ReceiveStatusofULPDCPSDUs;
// L:4970
typedef struct __si_s1ap_dt_ReceiveStatusOfULPDCPSDUsExtended SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsExtended;
// L:4970
typedef struct __si_s1ap_dt_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18;
// L:387
typedef struct __si_s1ap_dt_RecommendedCellsForPaging SI_S1AP_DT_RecommendedCellsForPaging;
// L:1224
typedef struct __si_s1ap_dt_RecommendedCellList SI_S1AP_DT_RecommendedCellList;
// L:5426
typedef struct __si_s1ap_dt_RecommendedCellItem_timeStayedInCell SI_S1AP_DT_RecommendedCellItem_timeStayedInCell;
// L:387
typedef struct __si_s1ap_dt_RecommendedCellItem SI_S1AP_DT_RecommendedCellItem;
// L:387
typedef struct __si_s1ap_dt_RecommendedENBsForPaging SI_S1AP_DT_RecommendedENBsForPaging;
// L:1224
typedef struct __si_s1ap_dt_RecommendedENBList SI_S1AP_DT_RecommendedENBList;
// L:387
typedef struct __si_s1ap_dt_RecommendedENBItem SI_S1AP_DT_RecommendedENBItem;
// L:5426
typedef struct __si_s1ap_dt_RelativeMMECapacity SI_S1AP_DT_RelativeMMECapacity;

// L:4495
typedef struct __si_s1ap_dt_RAC SI_S1AP_DT_RAC;
// L:1224
typedef struct __si_s1ap_dt_RAT_Restrictions SI_S1AP_DT_RAT_Restrictions;
// L:4970
typedef struct __si_s1ap_dt_RATRestrictionsItem_rAT_RestrictionInformation SI_S1AP_DT_RATRestrictionsItem_rAT_RestrictionInformation;
// L:387
typedef struct __si_s1ap_dt_RAT_RestrictionsItem SI_S1AP_DT_RAT_RestrictionsItem;




// L:387
typedef struct __si_s1ap_dt_RequestType SI_S1AP_DT_RequestType;

// L:387
typedef struct __si_s1ap_dt_RIMTransfer SI_S1AP_DT_RIMTransfer;
// L:4495
typedef struct __si_s1ap_dt_RIMInformation SI_S1AP_DT_RIMInformation;
// L:4495
typedef struct __si_s1ap_dt_RIMRoutingAddress_eHRPD_Sector_ID SI_S1AP_DT_RIMRoutingAddress_eHRPD_Sector_ID;


// L:5426
typedef struct __si_s1ap_dt_RepetitionPeriod SI_S1AP_DT_RepetitionPeriod;
// L:387
typedef struct __si_s1ap_dt_RLFReportInformation SI_S1AP_DT_RLFReportInformation;
// L:5426
typedef struct __si_s1ap_dt_RNC_ID SI_S1AP_DT_RNC_ID;
// L:4495
typedef struct __si_s1ap_dt_RRC_Container SI_S1AP_DT_RRC_Container;

// L:1224
typedef struct __si_s1ap_dt_ECGIListForRestart SI_S1AP_DT_ECGIListForRestart;
// L:5426
typedef struct __si_s1ap_dt_Routing_ID SI_S1AP_DT_Routing_ID;
// L:4970
typedef struct __si_s1ap_dt_SecurityKey SI_S1AP_DT_SecurityKey;
// L:5426
typedef struct __si_s1ap_dt_SecurityContext_nextHopChainingCount SI_S1AP_DT_SecurityContext_nextHopChainingCount;
// L:387
typedef struct __si_s1ap_dt_SecurityContext SI_S1AP_DT_SecurityContext;


// L:1224
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReportList SI_S1AP_DT_SecondaryRATDataUsageReportList;
// L:387
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReportItem SI_S1AP_DT_SecondaryRATDataUsageReportItem;
// L:387
typedef struct __si_s1ap_dt_SecurityIndication SI_S1AP_DT_SecurityIndication;
// L:387
typedef struct __si_s1ap_dt_SecurityResult SI_S1AP_DT_SecurityResult;

// L:387
typedef struct __si_s1ap_dt_SensorMeasConfigNameItem SI_S1AP_DT_SensorMeasConfigNameItem;
// L:1224
typedef struct __si_s1ap_dt_SensorMeasConfigNameList SI_S1AP_DT_SensorMeasConfigNameList;
// L:387
typedef struct __si_s1ap_dt_SensorMeasurementConfiguration SI_S1AP_DT_SensorMeasurementConfiguration;


// L:4970
typedef struct __si_s1ap_dt_SerialNumber SI_S1AP_DT_SerialNumber;


// No structure for SONInformation-Extension 


// L:387
typedef struct __si_s1ap_dt_SONInformationReply SI_S1AP_DT_SONInformationReply;

// L:387
typedef struct __si_s1ap_dt_SONConfigurationTransfer SI_S1AP_DT_SONConfigurationTransfer;
// L:387
typedef struct __si_s1ap_dt_SynchronisationInformation SI_S1AP_DT_SynchronisationInformation;
// L:4495
typedef struct __si_s1ap_dt_Source_ToTarget_TransparentContainer SI_S1AP_DT_Source_ToTarget_TransparentContainer;
// L:4495
typedef struct __si_s1ap_dt_SourceBSS_ToTargetBSS_TransparentContainer SI_S1AP_DT_SourceBSS_ToTargetBSS_TransparentContainer;
// L:387
typedef struct __si_s1ap_dt_SourceeNB_ID SI_S1AP_DT_SourceeNB_ID;




// No structure for SourceNodeID-Extension 

// L:387
typedef struct __si_s1ap_dt_SourceeNB_ToTargeteNB_TransparentContainer SI_S1AP_DT_SourceeNB_ToTargeteNB_TransparentContainer;
// L:387
typedef struct __si_s1ap_dt_SourceNgRanNode_ID SI_S1AP_DT_SourceNgRanNode_ID;
// L:4495
typedef struct __si_s1ap_dt_SourceRNC_ToTargetRNC_TransparentContainer SI_S1AP_DT_SourceRNC_ToTargetRNC_TransparentContainer;
// L:4495
typedef struct __si_s1ap_dt_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer SI_S1AP_DT_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer;
// L:1224
typedef struct __si_s1ap_dt_ServedGUMMEIs SI_S1AP_DT_ServedGUMMEIs;
// L:387
typedef struct __si_s1ap_dt_ServedGUMMEIsItem SI_S1AP_DT_ServedGUMMEIsItem;
// L:1224
typedef struct __si_s1ap_dt_ServedGroupIDs SI_S1AP_DT_ServedGroupIDs;
// L:1224
typedef struct __si_s1ap_dt_ServedMMECs SI_S1AP_DT_ServedMMECs;
// L:1224
typedef struct __si_s1ap_dt_ServedPLMNs SI_S1AP_DT_ServedPLMNs;
// L:5426
typedef struct __si_s1ap_dt_SubscriberProfileIDforRFP SI_S1AP_DT_SubscriberProfileIDforRFP;

// L:5426
typedef struct __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_periodicTime SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_periodicTime;



// L:387
typedef struct __si_s1ap_dt_Subscription_Based_UE_DifferentiationInfo SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo;
// L:4970
typedef struct __si_s1ap_dt_ScheduledCommunicationTime_dayofWeek SI_S1AP_DT_ScheduledCommunicationTime_dayofWeek;
// L:5426
typedef struct __si_s1ap_dt_ScheduledCommunicationTime_timeofDayStart SI_S1AP_DT_ScheduledCommunicationTime_timeofDayStart;
// L:5426
typedef struct __si_s1ap_dt_ScheduledCommunicationTime_timeofDayEnd SI_S1AP_DT_ScheduledCommunicationTime_timeofDayEnd;
// L:387
typedef struct __si_s1ap_dt_ScheduledCommunicationTime SI_S1AP_DT_ScheduledCommunicationTime;
// L:1224
typedef struct __si_s1ap_dt_SupportedTAs SI_S1AP_DT_SupportedTAs;
// L:387
typedef struct __si_s1ap_dt_SupportedTAs_Item SI_S1AP_DT_SupportedTAs_Item;
// L:5426
typedef struct __si_s1ap_dt_StratumLevel SI_S1AP_DT_StratumLevel;

// L:387
typedef struct __si_s1ap_dt_TimeSynchronisationInfo SI_S1AP_DT_TimeSynchronisationInfo;
// L:387
typedef struct __si_s1ap_dt_S_TMSI SI_S1AP_DT_S_TMSI;
// L:4495
typedef struct __si_s1ap_dt_TAC SI_S1AP_DT_TAC;
// L:1224
typedef struct __si_s1ap_dt_TACList_In_LTE_NTN SI_S1AP_DT_TACList_In_LTE_NTN;
// L:387
typedef struct __si_s1ap_dt_TAIBasedMDT SI_S1AP_DT_TAIBasedMDT;
// L:1224
typedef struct __si_s1ap_dt_TAIListforMDT SI_S1AP_DT_TAIListforMDT;
// L:1224
typedef struct __si_s1ap_dt_TAIListforWarning SI_S1AP_DT_TAIListforWarning;
// L:387
typedef struct __si_s1ap_dt_TAI SI_S1AP_DT_TAI;
// L:1224
typedef struct __si_s1ap_dt_TAI_Broadcast SI_S1AP_DT_TAI_Broadcast;
// L:387
typedef struct __si_s1ap_dt_TAI_Broadcast_Item SI_S1AP_DT_TAI_Broadcast_Item;
// L:1224
typedef struct __si_s1ap_dt_TAI_Cancelled SI_S1AP_DT_TAI_Cancelled;
// L:387
typedef struct __si_s1ap_dt_TAI_Cancelled_Item SI_S1AP_DT_TAI_Cancelled_Item;
// L:387
typedef struct __si_s1ap_dt_TABasedMDT SI_S1AP_DT_TABasedMDT;
// L:1224
typedef struct __si_s1ap_dt_TAListforMDT SI_S1AP_DT_TAListforMDT;
// L:387
typedef struct __si_s1ap_dt_TABasedQMC SI_S1AP_DT_TABasedQMC;
// L:1224
typedef struct __si_s1ap_dt_TAListforQMC SI_S1AP_DT_TAListforQMC;
// L:387
typedef struct __si_s1ap_dt_TAIBasedQMC SI_S1AP_DT_TAIBasedQMC;
// L:1224
typedef struct __si_s1ap_dt_TAIListforQMC SI_S1AP_DT_TAIListforQMC;
// L:1224
typedef struct __si_s1ap_dt_CompletedCellinTAI SI_S1AP_DT_CompletedCellinTAI;
// L:387
typedef struct __si_s1ap_dt_CompletedCellinTAI_Item SI_S1AP_DT_CompletedCellinTAI_Item;
// L:4495
typedef struct __si_s1ap_dt_TBCD_STRING SI_S1AP_DT_TBCD_STRING;

// L:387
typedef struct __si_s1ap_dt_TargeteNB_ID SI_S1AP_DT_TargeteNB_ID;
// L:387
typedef struct __si_s1ap_dt_TargetRNC_ID SI_S1AP_DT_TargetRNC_ID;
// L:387
typedef struct __si_s1ap_dt_TargetNgRanNode_ID SI_S1AP_DT_TargetNgRanNode_ID;

// L:387
typedef struct __si_s1ap_dt_GNB SI_S1AP_DT_GNB;
// L:387
typedef struct __si_s1ap_dt_Global_GNB_ID SI_S1AP_DT_Global_GNB_ID;

// L:387
typedef struct __si_s1ap_dt_NG_eNB SI_S1AP_DT_NG_eNB;
// L:4970
typedef struct __si_s1ap_dt_GNB_ID SI_S1AP_DT_GNB_ID;
// L:387
typedef struct __si_s1ap_dt_TargeteNB_ToSourceeNB_TransparentContainer SI_S1AP_DT_TargeteNB_ToSourceeNB_TransparentContainer;
// L:4495
typedef struct __si_s1ap_dt_Target_ToSource_TransparentContainer SI_S1AP_DT_Target_ToSource_TransparentContainer;
// L:4495
typedef struct __si_s1ap_dt_TargetRNC_ToSourceRNC_TransparentContainer SI_S1AP_DT_TargetRNC_ToSourceRNC_TransparentContainer;
// L:4495
typedef struct __si_s1ap_dt_TargetBSS_ToSourceBSS_TransparentContainer SI_S1AP_DT_TargetBSS_ToSourceBSS_TransparentContainer;
// L:4495
typedef struct __si_s1ap_dt_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer SI_S1AP_DT_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer;
// L:387
typedef struct __si_s1ap_dt_M1ThresholdEventA2 SI_S1AP_DT_M1ThresholdEventA2;
// L:5426
typedef struct __si_s1ap_dt_Threshold_RSRP SI_S1AP_DT_Threshold_RSRP;
// L:5426
typedef struct __si_s1ap_dt_Threshold_RSRQ SI_S1AP_DT_Threshold_RSRQ;
// L:387
typedef struct __si_s1ap_dt_TimeBasedHandoverInformation SI_S1AP_DT_TimeBasedHandoverInformation;
// L:5426
typedef struct __si_s1ap_dt_HandoverWindowStart SI_S1AP_DT_HandoverWindowStart;
// L:5426
typedef struct __si_s1ap_dt_HandoverWindowDuration SI_S1AP_DT_HandoverWindowDuration;


// L:5426
typedef struct __si_s1ap_dt_Time_UE_StayedInCell SI_S1AP_DT_Time_UE_StayedInCell;
// L:5426
typedef struct __si_s1ap_dt_Time_UE_StayedInCell_EnhancedGranularity SI_S1AP_DT_Time_UE_StayedInCell_EnhancedGranularity;
// L:4495
typedef struct __si_s1ap_dt_TimeSinceSecondaryNodeRelease SI_S1AP_DT_TimeSinceSecondaryNodeRelease;
// L:387
typedef struct __si_s1ap_dt_TransportInformation SI_S1AP_DT_TransportInformation;
// L:4970
typedef struct __si_s1ap_dt_TransportLayerAddress SI_S1AP_DT_TransportLayerAddress;
// L:387
typedef struct __si_s1ap_dt_TraceActivation SI_S1AP_DT_TraceActivation;

// L:4495
typedef struct __si_s1ap_dt_E_UTRAN_Trace_ID SI_S1AP_DT_E_UTRAN_Trace_ID;
// L:5426
typedef struct __si_s1ap_dt_TrafficLoadReductionIndication SI_S1AP_DT_TrafficLoadReductionIndication;
// L:387
typedef struct __si_s1ap_dt_TunnelInformation SI_S1AP_DT_TunnelInformation;

// L:1224
typedef struct __si_s1ap_dt_TAIListForRestart SI_S1AP_DT_TAIListForRestart;
// L:387
typedef struct __si_s1ap_dt_UEAggregateMaximumBitrate SI_S1AP_DT_UEAggregateMaximumBitrate;
// L:4495
typedef struct __si_s1ap_dt_UEAppLayerMeasConfig_containerForAppLayerMeasConfig SI_S1AP_DT_UEAppLayerMeasConfig_containerForAppLayerMeasConfig;
// L:387
typedef struct __si_s1ap_dt_UEAppLayerMeasConfig SI_S1AP_DT_UEAppLayerMeasConfig;



// L:387
typedef struct __si_s1ap_dt_UE_S1AP_ID_pair SI_S1AP_DT_UE_S1AP_ID_pair;
// L:387
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionItem SI_S1AP_DT_UE_associatedLogicalS1_ConnectionItem;
// L:4970
typedef struct __si_s1ap_dt_UEIdentityIndexValue SI_S1AP_DT_UEIdentityIndexValue;
// L:1224
typedef struct __si_s1ap_dt_UE_HistoryInformation SI_S1AP_DT_UE_HistoryInformation;
// L:4495
typedef struct __si_s1ap_dt_UE_HistoryInformationFromTheUE SI_S1AP_DT_UE_HistoryInformationFromTheUE;

// L:4495
typedef struct __si_s1ap_dt_UERadioCapability SI_S1AP_DT_UERadioCapability;
// L:4495
typedef struct __si_s1ap_dt_UERadioCapabilityForPaging SI_S1AP_DT_UERadioCapabilityForPaging;
// L:4495
typedef struct __si_s1ap_dt_UERadioCapabilityID SI_S1AP_DT_UERadioCapabilityID;
// L:4495
typedef struct __si_s1ap_dt_UE_RLF_Report_Container SI_S1AP_DT_UE_RLF_Report_Container;
// L:4495
typedef struct __si_s1ap_dt_UE_RLF_Report_Container_for_extended_bands SI_S1AP_DT_UE_RLF_Report_Container_for_extended_bands;
// L:387
typedef struct __si_s1ap_dt_UESecurityCapabilities SI_S1AP_DT_UESecurityCapabilities;
// L:387
typedef struct __si_s1ap_dt_UESidelinkAggregateMaximumBitrate SI_S1AP_DT_UESidelinkAggregateMaximumBitrate;
// L:5426
typedef struct __si_s1ap_dt_UE_Usage_Type SI_S1AP_DT_UE_Usage_Type;
// L:387
typedef struct __si_s1ap_dt_UL_CP_SecurityInformation SI_S1AP_DT_UL_CP_SecurityInformation;
// L:4970
typedef struct __si_s1ap_dt_UL_NAS_MAC SI_S1AP_DT_UL_NAS_MAC;
// L:4970
typedef struct __si_s1ap_dt_UL_NAS_Count SI_S1AP_DT_UL_NAS_Count;

// L:5858
typedef struct __si_s1ap_dt_URI_Address SI_S1AP_DT_URI_Address;
// L:387
typedef struct __si_s1ap_dt_UserLocationInformation SI_S1AP_DT_UserLocationInformation;

// L:4970
typedef struct __si_s1ap_dt_UE_Application_Layer_Measurement_Capability SI_S1AP_DT_UE_Application_Layer_Measurement_Capability;

// L:387
typedef struct __si_s1ap_dt_V2XServicesAuthorized SI_S1AP_DT_V2XServicesAuthorized;


// L:4495
typedef struct __si_s1ap_dt_WarningAreaCoordinates SI_S1AP_DT_WarningAreaCoordinates;

// L:4495
typedef struct __si_s1ap_dt_WarningType SI_S1AP_DT_WarningType;
// L:4495
typedef struct __si_s1ap_dt_WarningSecurityInfo SI_S1AP_DT_WarningSecurityInfo;
// L:4495
typedef struct __si_s1ap_dt_WarningMessageContents SI_S1AP_DT_WarningMessageContents;


// L:387
typedef struct __si_s1ap_dt_WLANMeasurementConfiguration SI_S1AP_DT_WLANMeasurementConfiguration;
// L:1224
typedef struct __si_s1ap_dt_WLANMeasConfigNameList SI_S1AP_DT_WLANMeasConfigNameList;

// L:4495
typedef struct __si_s1ap_dt_WLANName SI_S1AP_DT_WLANName;
// L:387
typedef struct __si_s1ap_dt_WUS_Assistance_Information SI_S1AP_DT_WUS_Assistance_Information;
// L:387
typedef struct __si_s1ap_dt_X2TNLConfigurationInfo SI_S1AP_DT_X2TNLConfigurationInfo;
// L:1224
typedef struct __si_s1ap_dt_ENBX2ExtTLAs SI_S1AP_DT_ENBX2ExtTLAs;
// L:387
typedef struct __si_s1ap_dt_ENBX2ExtTLA SI_S1AP_DT_ENBX2ExtTLA;
// L:1224
typedef struct __si_s1ap_dt_ENBX2GTPTLAs SI_S1AP_DT_ENBX2GTPTLAs;
// L:1224
typedef struct __si_s1ap_dt_ENBIndirectX2TransportLayerAddresses SI_S1AP_DT_ENBIndirectX2TransportLayerAddresses;



// L:387
typedef struct __si_s1ap_dt_E_RABDataForwardingItem SI_S1AP_DT_E_RABDataForwardingItem;
// L:387
typedef struct __si_s1ap_dt_E_RABToBeSetupItemHOReq SI_S1AP_DT_E_RABToBeSetupItemHOReq;
// L:387
typedef struct __si_s1ap_dt_E_RABAdmittedItem SI_S1AP_DT_E_RABAdmittedItem;
// L:387
typedef struct __si_s1ap_dt_E_RABFailedToSetupItemHOReqAck SI_S1AP_DT_E_RABFailedToSetupItemHOReqAck;
// L:387
typedef struct __si_s1ap_dt_E_RABToBeSwitchedDLItem SI_S1AP_DT_E_RABToBeSwitchedDLItem;
// L:387
typedef struct __si_s1ap_dt_E_RABToBeSwitchedULItem SI_S1AP_DT_E_RABToBeSwitchedULItem;
// L:387
typedef struct __si_s1ap_dt_E_RABToBeUpdatedItem SI_S1AP_DT_E_RABToBeUpdatedItem;
// L:1224
typedef struct __si_s1ap_dt_E_RABToBeSetupListBearerSUReq SI_S1AP_DT_E_RABToBeSetupListBearerSUReq;
// L:387
typedef struct __si_s1ap_dt_E_RABToBeSetupItemBearerSUReq SI_S1AP_DT_E_RABToBeSetupItemBearerSUReq;
// L:1224
typedef struct __si_s1ap_dt_E_RABSetupListBearerSURes SI_S1AP_DT_E_RABSetupListBearerSURes;
// L:387
typedef struct __si_s1ap_dt_E_RABSetupItemBearerSURes SI_S1AP_DT_E_RABSetupItemBearerSURes;
// L:1224
typedef struct __si_s1ap_dt_E_RABToBeModifiedListBearerModReq SI_S1AP_DT_E_RABToBeModifiedListBearerModReq;
// L:387
typedef struct __si_s1ap_dt_E_RABToBeModifiedItemBearerModReq SI_S1AP_DT_E_RABToBeModifiedItemBearerModReq;
// L:1224
typedef struct __si_s1ap_dt_E_RABModifyListBearerModRes SI_S1AP_DT_E_RABModifyListBearerModRes;
// L:387
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModRes SI_S1AP_DT_E_RABModifyItemBearerModRes;
// L:1224
typedef struct __si_s1ap_dt_E_RABReleaseListBearerRelComp SI_S1AP_DT_E_RABReleaseListBearerRelComp;
// L:387
typedef struct __si_s1ap_dt_E_RABReleaseItemBearerRelComp SI_S1AP_DT_E_RABReleaseItemBearerRelComp;
// L:1224
typedef struct __si_s1ap_dt_E_RABToBeSetupListCtxtSUReq SI_S1AP_DT_E_RABToBeSetupListCtxtSUReq;
// L:387
typedef struct __si_s1ap_dt_E_RABToBeSetupItemCtxtSUReq SI_S1AP_DT_E_RABToBeSetupItemCtxtSUReq;
// L:1224
typedef struct __si_s1ap_dt_E_RABSetupListCtxtSURes SI_S1AP_DT_E_RABSetupListCtxtSURes;
// L:387
typedef struct __si_s1ap_dt_E_RABSetupItemCtxtSURes SI_S1AP_DT_E_RABSetupItemCtxtSURes;
// L:1224
typedef struct __si_s1ap_dt_TAIList SI_S1AP_DT_TAIList;
// L:387
typedef struct __si_s1ap_dt_TAIItem SI_S1AP_DT_TAIItem;
// L:1224
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionListRes SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListRes;
// L:1224
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionListResAck SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListResAck;
// L:387
typedef struct __si_s1ap_dt_E_RABToBeModifiedItemBearerModInd SI_S1AP_DT_E_RABToBeModifiedItemBearerModInd;
// L:387
typedef struct __si_s1ap_dt_E_RABNotToBeModifiedItemBearerModInd SI_S1AP_DT_E_RABNotToBeModifiedItemBearerModInd;
// L:387
typedef struct __si_s1ap_dt_CSGMembershipInfo SI_S1AP_DT_CSGMembershipInfo;
// L:1224
typedef struct __si_s1ap_dt_E_RABModifyListBearerModConf SI_S1AP_DT_E_RABModifyListBearerModConf;
// L:387
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModConf SI_S1AP_DT_E_RABModifyItemBearerModConf;
// L:387
typedef struct __si_s1ap_dt_E_RABFailedToResumeItemResumeReq SI_S1AP_DT_E_RABFailedToResumeItemResumeReq;
// L:387
typedef struct __si_s1ap_dt_E_RABFailedToResumeItemResumeRes SI_S1AP_DT_E_RABFailedToResumeItemResumeRes;
// L:4495
typedef struct __si_s1ap_dt_DefaultOctetString SI_S1AP_DT_DefaultOctetString;

//PDU
// L:8002
typedef struct __si_s1ap_dt_Additional_GUTI_ExtIEs SI_S1AP_DT_PDU_Additional_GUTI_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_AllocationAndRetentionPriority_ExtIEs SI_S1AP_DT_PDU_AllocationAndRetentionPriority_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_InformationForCECapableUEs_ExtIEs SI_S1AP_DT_PDU_InformationForCECapableUEs_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_AssistanceDataForPaging_ExtIEs SI_S1AP_DT_PDU_AssistanceDataForPaging_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_AssistanceDataForRecommendedCells_ExtIEs SI_S1AP_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_Bearers_SubjectToStatusTransfer_ItemIEs SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemIEs;
// L:8002
typedef struct __si_s1ap_dt_Bearers_SubjectToStatusTransfer_ItemExtIEs SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs;
// L:8002
typedef struct __si_s1ap_dt_Bearers_SubjectToEarlyStatusTransfer_ItemIEs SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs;
// L:8002
typedef struct __si_s1ap_dt_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs;
// L:8002
typedef struct __si_s1ap_dt_Bearers_SubjectToDLDiscarding_ItemIEs SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemIEs;
// L:8002
typedef struct __si_s1ap_dt_Bearers_SubjectToDLDiscarding_ItemExtIEs SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs;
// L:8002
typedef struct __si_s1ap_dt_BluetoothMeasurementConfiguration_ExtIEs SI_S1AP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CancelledCellinEAI_Item_ExtIEs SI_S1AP_DT_PDU_CancelledCellinEAI_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CancelledCellinTAI_Item_ExtIEs SI_S1AP_DT_PDU_CancelledCellinTAI_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CellIdentifierAndCELevelForCECapableUEs_ExtIEs SI_S1AP_DT_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CellID_Broadcast_Item_ExtIEs SI_S1AP_DT_PDU_CellID_Broadcast_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CellID_Cancelled_Item_ExtIEs SI_S1AP_DT_PDU_CellID_Cancelled_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CellBasedMDT_ExtIEs SI_S1AP_DT_PDU_CellBasedMDT_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CellBasedQMC_ExtIEs SI_S1AP_DT_PDU_CellBasedQMC_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_Cdma2000OneXSRVCCInfo_ExtIEs SI_S1AP_DT_PDU_Cdma2000OneXSRVCCInfo_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CellType_ExtIEs SI_S1AP_DT_PDU_CellType_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CGI_ExtIEs SI_S1AP_DT_PDU_CGI_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CNTypeRestrictions_Item_ExtIEs SI_S1AP_DT_PDU_CNTypeRestrictions_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ConnectedengNBItem_ExtIEs SI_S1AP_DT_PDU_ConnectedengNBItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ContextatSource_ExtIEs SI_S1AP_DT_PDU_ContextatSource_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CSG_IdList_Item_ExtIEs SI_S1AP_DT_PDU_CSG_IdList_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_COUNTvalue_ExtIEs SI_S1AP_DT_PDU_COUNTvalue_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_COUNTValueExtended_ExtIEs SI_S1AP_DT_PDU_COUNTValueExtended_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_COUNTvaluePDCP_SNlength18_ExtIEs SI_S1AP_DT_PDU_COUNTvaluePDCP_SNlength18_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CriticalityDiagnostics_ExtIEs SI_S1AP_DT_PDU_CriticalityDiagnostics_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CriticalityDiagnostics_IE_Item_ExtIEs SI_S1AP_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_DAPSRequestInfo_ExtIEs SI_S1AP_DT_PDU_DAPSRequestInfo_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_DAPSResponseInfoItem_ExtIEs SI_S1AP_DT_PDU_DAPSResponseInfoItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_DAPSResponseInfo_ExtIEs SI_S1AP_DT_PDU_DAPSResponseInfo_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ServedDCNsItem_ExtIEs SI_S1AP_DT_PDU_ServedDCNsItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_DL_CP_SecurityInformation_ExtIEs SI_S1AP_DT_PDU_DL_CP_SecurityInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EmergencyAreaID_Broadcast_Item_ExtIEs SI_S1AP_DT_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EmergencyAreaID_Cancelled_Item_ExtIEs SI_S1AP_DT_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CompletedCellinEAI_Item_ExtIEs SI_S1AP_DT_PDU_CompletedCellinEAI_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs SI_S1AP_DT_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_GERAN_Cell_ID_ExtIEs SI_S1AP_DT_PDU_GERAN_Cell_ID_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_GlobalENB_ID_ExtIEs SI_S1AP_DT_PDU_GlobalENB_ID_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_Global_en_gNB_ID_ExtIEs SI_S1AP_DT_PDU_Global_en_gNB_ID_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ENB_StatusTransfer_TransparentContainer_ExtIEs SI_S1AP_DT_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EN_DCSONConfigurationTransfer_ExtIEs SI_S1AP_DT_PDU_EN_DCSONConfigurationTransfer_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EN_DCTransferTypeRequest_ExtIEs SI_S1AP_DT_PDU_EN_DCTransferTypeRequest_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EN_DCTransferTypeReply_ExtIEs SI_S1AP_DT_PDU_EN_DCTransferTypeReply_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EN_DCSONeNBIdentification_ExtIEs SI_S1AP_DT_PDU_EN_DCSONeNBIdentification_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EN_DCSONengNBIdentification_ExtIEs SI_S1AP_DT_PDU_EN_DCSONengNBIdentification_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABInformationListItem_ExtIEs SI_S1AP_DT_PDU_E_RABInformationListItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABItemIEs SI_S1AP_DT_PDU_E_RABItemIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABItem_ExtIEs SI_S1AP_DT_PDU_E_RABItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABSecurityResultItem_ExtIEs SI_S1AP_DT_PDU_E_RABSecurityResultItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABUsageReportItemIEs SI_S1AP_DT_PDU_E_RABUsageReportItemIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABUsageReportItem_ExtIEs SI_S1AP_DT_PDU_E_RABUsageReportItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABQoSParameters_ExtIEs SI_S1AP_DT_PDU_E_RABQoSParameters_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EUTRAN_CGI_ExtIEs SI_S1AP_DT_PDU_EUTRAN_CGI_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EventL1LoggedMDTConfig_ExtIEs SI_S1AP_DT_PDU_EventL1LoggedMDTConfig_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_EventTrigger_ExtIEs SI_S1AP_DT_PDU_EventTrigger_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ExpectedUEBehaviour_ExtIEs SI_S1AP_DT_PDU_ExpectedUEBehaviour_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ExpectedUEActivityBehaviour_ExtIEs SI_S1AP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_FiveGSTAI_ExtIEs SI_S1AP_DT_PDU_FiveGSTAI_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ForbiddenTAs_Item_ExtIEs SI_S1AP_DT_PDU_ForbiddenTAs_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ForbiddenLAs_Item_ExtIEs SI_S1AP_DT_PDU_ForbiddenLAs_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_GBR_QosInformation_ExtIEs SI_S1AP_DT_PDU_GBR_QosInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_GUMMEI_ExtIEs SI_S1AP_DT_PDU_GUMMEI_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_HandoverRestrictionList_ExtIEs SI_S1AP_DT_PDU_HandoverRestrictionList_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ImmediateMDT_ExtIEs SI_S1AP_DT_PDU_ImmediateMDT_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs SI_S1AP_DT_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration_ExtIEs SI_S1AP_DT_PDU_IntersystemMeasurementConfiguration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_InterSystemMeasurementParameters_ExtIEs SI_S1AP_DT_PDU_InterSystemMeasurementParameters_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_ExtIEs SI_S1AP_DT_PDU_InterSystemMeasurementItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_LAI_ExtIEs SI_S1AP_DT_PDU_LAI_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_LastVisitedEUTRANCellInformation_ExtIEs SI_S1AP_DT_PDU_LastVisitedEUTRANCellInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_LastVisitedPSCellInformation_ExtIEs SI_S1AP_DT_PDU_LastVisitedPSCellInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ListeningSubframePattern_ExtIEs SI_S1AP_DT_PDU_ListeningSubframePattern_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_LoggedMDT_ExtIEs SI_S1AP_DT_PDU_LoggedMDT_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_LoggedMBSFNMDT_ExtIEs SI_S1AP_DT_PDU_LoggedMBSFNMDT_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_LTE_NTN_TAI_Information_ExtIEs SI_S1AP_DT_PDU_LTE_NTN_TAI_Information_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_M3Configuration_ExtIEs SI_S1AP_DT_PDU_M3Configuration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_M4Configuration_ExtIEs SI_S1AP_DT_PDU_M4Configuration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_M5Configuration_ExtIEs SI_S1AP_DT_PDU_M5Configuration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_M6Configuration_ExtIEs SI_S1AP_DT_PDU_M6Configuration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_M7Configuration_ExtIEs SI_S1AP_DT_PDU_M7Configuration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_MDT_Configuration_ExtIEs SI_S1AP_DT_PDU_MDT_Configuration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_MBSFN_ResultToLogInfo_ExtIEs SI_S1AP_DT_PDU_MBSFN_ResultToLogInfo_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_MDTMode_ExtensionIE SI_S1AP_DT_PDU_MDTMode_ExtensionIE;
// L:8002
typedef struct __si_s1ap_dt_MeasurementThresholdL1LoggedMDT_ExtIEs SI_S1AP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_MutingPatternInformation_ExtIEs SI_S1AP_DT_PDU_MutingPatternInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_NB_IoT_Paging_eDRXInformation_ExtIEs SI_S1AP_DT_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_NR_CGI_ExtIEs SI_S1AP_DT_PDU_NR_CGI_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_NRUESecurityCapabilities_ExtIEs SI_S1AP_DT_PDU_NRUESecurityCapabilities_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_NRV2XServicesAuthorized_ExtIEs SI_S1AP_DT_PDU_NRV2XServicesAuthorized_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_NRUESidelinkAggregateMaximumBitrate_ExtIEs SI_S1AP_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_PagingAttemptInformation_ExtIEs SI_S1AP_DT_PDU_PagingAttemptInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_Paging_eDRXInformation_ExtIEs SI_S1AP_DT_PDU_Paging_eDRXInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_PC5QoSParameters_ExtIEs SI_S1AP_DT_PDU_PC5QoSParameters_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_PC5QoSFlowItem_ExtIEs SI_S1AP_DT_PDU_PC5QoSFlowItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_PC5FlowBitRates_ExtIEs SI_S1AP_DT_PDU_PC5FlowBitRates_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_M1PeriodicReporting_ExtIEs SI_S1AP_DT_PDU_M1PeriodicReporting_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_PLMNAreaBasedQMC_ExtIEs SI_S1AP_DT_PDU_PLMNAreaBasedQMC_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ProSeAuthorized_ExtIEs SI_S1AP_DT_PDU_ProSeAuthorized_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_PSCellInformation_ExtIEs SI_S1AP_DT_PDU_PSCellInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_RecommendedCellsForPaging_ExtIEs SI_S1AP_DT_PDU_RecommendedCellsForPaging_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_RecommendedCellItemIEs SI_S1AP_DT_PDU_RecommendedCellItemIEs;
// L:8002
typedef struct __si_s1ap_dt_RecommendedCellsForPagingItem_ExtIEs SI_S1AP_DT_PDU_RecommendedCellsForPagingItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_RecommendedENBsForPaging_ExtIEs SI_S1AP_DT_PDU_RecommendedENBsForPaging_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_RecommendedENBItemIEs SI_S1AP_DT_PDU_RecommendedENBItemIEs;
// L:8002
typedef struct __si_s1ap_dt_RecommendedENBItem_ExtIEs SI_S1AP_DT_PDU_RecommendedENBItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_RAT_RestrictionsItem_ExtIEs SI_S1AP_DT_PDU_RAT_RestrictionsItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_RequestType_ExtIEs SI_S1AP_DT_PDU_RequestType_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_RIMTransfer_ExtIEs SI_S1AP_DT_PDU_RIMTransfer_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_RLFReportInformation_ExtIEs SI_S1AP_DT_PDU_RLFReportInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SecurityContext_ExtIEs SI_S1AP_DT_PDU_SecurityContext_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReportItemIEs SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItemIEs;
// L:8002
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReportItem_ExtIEs SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SecurityIndication_ExtIEs SI_S1AP_DT_PDU_SecurityIndication_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SecurityResult_ExtIEs SI_S1AP_DT_PDU_SecurityResult_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SensorMeasConfigNameItem_ExtIEs SI_S1AP_DT_PDU_SensorMeasConfigNameItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SensorMeasurementConfiguration_ExtIEs SI_S1AP_DT_PDU_SensorMeasurementConfiguration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SensorNameConfig_ExtIEs SI_S1AP_DT_PDU_SensorNameConfig_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SONInformation_ExtensionIE SI_S1AP_DT_PDU_SONInformation_ExtensionIE;
// L:8002
typedef struct __si_s1ap_dt_SONInformationReply_ExtIEs SI_S1AP_DT_PDU_SONInformationReply_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SONConfigurationTransfer_ExtIEs SI_S1AP_DT_PDU_SONConfigurationTransfer_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SynchronisationInformation_ExtIEs SI_S1AP_DT_PDU_SynchronisationInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SourceeNB_ID_ExtIEs SI_S1AP_DT_PDU_SourceeNB_ID_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SourceNodeID_ExtensionIE SI_S1AP_DT_PDU_SourceNodeID_ExtensionIE;
// L:8002
typedef struct __si_s1ap_dt_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs SI_S1AP_DT_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SourceNgRanNode_ID_ExtIEs SI_S1AP_DT_PDU_SourceNgRanNode_ID_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ServedGUMMEIsItem_ExtIEs SI_S1AP_DT_PDU_ServedGUMMEIsItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_Subscription_Based_UE_DifferentiationInfo_ExtIEs SI_S1AP_DT_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ScheduledCommunicationTime_ExtIEs SI_S1AP_DT_PDU_ScheduledCommunicationTime_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_SupportedTAs_Item_ExtIEs SI_S1AP_DT_PDU_SupportedTAs_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TimeSynchronisationInfo_ExtIEs SI_S1AP_DT_PDU_TimeSynchronisationInfo_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_S_TMSI_ExtIEs SI_S1AP_DT_PDU_S_TMSI_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TAIBasedMDT_ExtIEs SI_S1AP_DT_PDU_TAIBasedMDT_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TAI_ExtIEs SI_S1AP_DT_PDU_TAI_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TAI_Broadcast_Item_ExtIEs SI_S1AP_DT_PDU_TAI_Broadcast_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TAI_Cancelled_Item_ExtIEs SI_S1AP_DT_PDU_TAI_Cancelled_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TABasedMDT_ExtIEs SI_S1AP_DT_PDU_TABasedMDT_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TABasedQMC_ExtIEs SI_S1AP_DT_PDU_TABasedQMC_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TAIBasedQMC_ExtIEs SI_S1AP_DT_PDU_TAIBasedQMC_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CompletedCellinTAI_Item_ExtIEs SI_S1AP_DT_PDU_CompletedCellinTAI_Item_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TargeteNB_ID_ExtIEs SI_S1AP_DT_PDU_TargeteNB_ID_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TargetRNC_ID_ExtIEs SI_S1AP_DT_PDU_TargetRNC_ID_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TargetNgRanNode_ID_ExtIEs SI_S1AP_DT_PDU_TargetNgRanNode_ID_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_GNB_ExtIEs SI_S1AP_DT_PDU_GNB_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_Global_GNB_ID_ExtIEs SI_S1AP_DT_PDU_Global_GNB_ID_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_NG_eNB_ExtIEs SI_S1AP_DT_PDU_NG_eNB_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs SI_S1AP_DT_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_M1ThresholdEventA2_ExtIEs SI_S1AP_DT_PDU_M1ThresholdEventA2_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TimeBasedHandoverInformation_ExtIEs SI_S1AP_DT_PDU_TimeBasedHandoverInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TraceActivation_ExtIEs SI_S1AP_DT_PDU_TraceActivation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_Tunnel_Information_ExtIEs SI_S1AP_DT_PDU_Tunnel_Information_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_UEAggregate_MaximumBitrates_ExtIEs SI_S1AP_DT_PDU_UEAggregate_MaximumBitrates_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_UEAppLayerMeasConfig_ExtIEs SI_S1AP_DT_PDU_UEAppLayerMeasConfig_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_UE_S1AP_ID_pair_ExtIEs SI_S1AP_DT_PDU_UE_S1AP_ID_pair_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionItemExtIEs SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs;
// L:8002
typedef struct __si_s1ap_dt_UESecurityCapabilities_ExtIEs SI_S1AP_DT_PDU_UESecurityCapabilities_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs SI_S1AP_DT_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_UL_CP_SecurityInformation_ExtIEs SI_S1AP_DT_PDU_UL_CP_SecurityInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_UserLocationInformation_ExtIEs SI_S1AP_DT_PDU_UserLocationInformation_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_V2XServicesAuthorized_ExtIEs SI_S1AP_DT_PDU_V2XServicesAuthorized_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_WLANMeasurementConfiguration_ExtIEs SI_S1AP_DT_PDU_WLANMeasurementConfiguration_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_WUS_Assistance_Information_ExtIEs SI_S1AP_DT_PDU_WUS_Assistance_Information_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_X2TNLConfigurationInfo_ExtIEs SI_S1AP_DT_PDU_X2TNLConfigurationInfo_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_ENBX2ExtTLA_ExtIEs SI_S1AP_DT_PDU_ENBX2ExtTLA_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_HandoverRequired SI_S1AP_DT_PDU_HandoverRequired;
// L:8002
typedef struct __si_s1ap_dt_HandoverCommand SI_S1AP_DT_PDU_HandoverCommand;
// L:8002
typedef struct __si_s1ap_dt_HandoverPreparationFailure SI_S1AP_DT_PDU_HandoverPreparationFailure;
// L:8002
typedef struct __si_s1ap_dt_HandoverRequest SI_S1AP_DT_PDU_HandoverRequest;
// L:8002
typedef struct __si_s1ap_dt_HandoverRequestAcknowledge SI_S1AP_DT_PDU_HandoverRequestAcknowledge;
// L:8002
typedef struct __si_s1ap_dt_HandoverFailure SI_S1AP_DT_PDU_HandoverFailure;
// L:8002
typedef struct __si_s1ap_dt_HandoverNotify SI_S1AP_DT_PDU_HandoverNotify;
// L:8002
typedef struct __si_s1ap_dt_PathSwitchRequest SI_S1AP_DT_PDU_PathSwitchRequest;
// L:8002
typedef struct __si_s1ap_dt_PathSwitchRequestAcknowledge SI_S1AP_DT_PDU_PathSwitchRequestAcknowledge;
// L:8002
typedef struct __si_s1ap_dt_PathSwitchRequestFailure SI_S1AP_DT_PDU_PathSwitchRequestFailure;
// L:8002
typedef struct __si_s1ap_dt_HandoverCancel SI_S1AP_DT_PDU_HandoverCancel;
// L:8002
typedef struct __si_s1ap_dt_HandoverCancelAcknowledge SI_S1AP_DT_PDU_HandoverCancelAcknowledge;
// L:8002
typedef struct __si_s1ap_dt_HandoverSuccess SI_S1AP_DT_PDU_HandoverSuccess;
// L:8002
typedef struct __si_s1ap_dt_ENBEarlyStatusTransfer SI_S1AP_DT_PDU_ENBEarlyStatusTransfer;
// L:8002
typedef struct __si_s1ap_dt_MMEEarlyStatusTransfer SI_S1AP_DT_PDU_MMEEarlyStatusTransfer;
// L:8002
typedef struct __si_s1ap_dt_E_RABSetupRequest SI_S1AP_DT_PDU_E_RABSetupRequest;
// L:8002
typedef struct __si_s1ap_dt_E_RABSetupResponse SI_S1AP_DT_PDU_E_RABSetupResponse;
// L:8002
typedef struct __si_s1ap_dt_E_RABModifyRequest SI_S1AP_DT_PDU_E_RABModifyRequest;
// L:8002
typedef struct __si_s1ap_dt_E_RABModifyResponse SI_S1AP_DT_PDU_E_RABModifyResponse;
// L:8002
typedef struct __si_s1ap_dt_E_RABReleaseCommand SI_S1AP_DT_PDU_E_RABReleaseCommand;
// L:8002
typedef struct __si_s1ap_dt_E_RABReleaseResponse SI_S1AP_DT_PDU_E_RABReleaseResponse;
// L:8002
typedef struct __si_s1ap_dt_E_RABReleaseIndication SI_S1AP_DT_PDU_E_RABReleaseIndication;
// L:8002
typedef struct __si_s1ap_dt_InitialContextSetupRequest SI_S1AP_DT_PDU_InitialContextSetupRequest;
// L:8002
typedef struct __si_s1ap_dt_InitialContextSetupResponse SI_S1AP_DT_PDU_InitialContextSetupResponse;
// L:8002
typedef struct __si_s1ap_dt_InitialContextSetupFailure SI_S1AP_DT_PDU_InitialContextSetupFailure;
// L:8002
typedef struct __si_s1ap_dt_Paging SI_S1AP_DT_PDU_Paging;
// L:8002
typedef struct __si_s1ap_dt_UEContextReleaseRequest SI_S1AP_DT_PDU_UEContextReleaseRequest;
// L:8002
typedef struct __si_s1ap_dt_UEContextReleaseCommand SI_S1AP_DT_PDU_UEContextReleaseCommand;
// L:8002
typedef struct __si_s1ap_dt_UEContextReleaseComplete SI_S1AP_DT_PDU_UEContextReleaseComplete;
// L:8002
typedef struct __si_s1ap_dt_UEContextModificationRequest SI_S1AP_DT_PDU_UEContextModificationRequest;
// L:8002
typedef struct __si_s1ap_dt_UEContextModificationResponse SI_S1AP_DT_PDU_UEContextModificationResponse;
// L:8002
typedef struct __si_s1ap_dt_UEContextModificationFailure SI_S1AP_DT_PDU_UEContextModificationFailure;
// L:8002
typedef struct __si_s1ap_dt_UERadioCapabilityMatchRequest SI_S1AP_DT_PDU_UERadioCapabilityMatchRequest;
// L:8002
typedef struct __si_s1ap_dt_UERadioCapabilityMatchResponse SI_S1AP_DT_PDU_UERadioCapabilityMatchResponse;
// L:8002
typedef struct __si_s1ap_dt_DownlinkNASTransport SI_S1AP_DT_PDU_DownlinkNASTransport;
// L:8002
typedef struct __si_s1ap_dt_InitialUEMessage SI_S1AP_DT_PDU_InitialUEMessage;
// L:8002
typedef struct __si_s1ap_dt_UplinkNASTransport SI_S1AP_DT_PDU_UplinkNASTransport;
// L:8002
typedef struct __si_s1ap_dt_NASNonDeliveryIndication SI_S1AP_DT_PDU_NASNonDeliveryIndication;
// L:8002
typedef struct __si_s1ap_dt_RerouteNASRequest SI_S1AP_DT_PDU_RerouteNASRequest;
// L:8002
typedef struct __si_s1ap_dt_NASDeliveryIndication SI_S1AP_DT_PDU_NASDeliveryIndication;
// L:8002
typedef struct __si_s1ap_dt_Reset SI_S1AP_DT_PDU_Reset;
// L:8002
typedef struct __si_s1ap_dt_ResetAcknowledge SI_S1AP_DT_PDU_ResetAcknowledge;
// L:8002
typedef struct __si_s1ap_dt_ErrorIndication SI_S1AP_DT_PDU_ErrorIndication;
// L:8002
typedef struct __si_s1ap_dt_S1SetupRequest SI_S1AP_DT_PDU_S1SetupRequest;
// L:8002
typedef struct __si_s1ap_dt_S1SetupResponse SI_S1AP_DT_PDU_S1SetupResponse;
// L:8002
typedef struct __si_s1ap_dt_S1SetupFailure SI_S1AP_DT_PDU_S1SetupFailure;
// L:8002
typedef struct __si_s1ap_dt_ENBConfigurationUpdate SI_S1AP_DT_PDU_ENBConfigurationUpdate;
// L:8002
typedef struct __si_s1ap_dt_ENBConfigurationUpdateAcknowledge SI_S1AP_DT_PDU_ENBConfigurationUpdateAcknowledge;
// L:8002
typedef struct __si_s1ap_dt_ENBConfigurationUpdateFailure SI_S1AP_DT_PDU_ENBConfigurationUpdateFailure;
// L:8002
typedef struct __si_s1ap_dt_MMEConfigurationUpdate SI_S1AP_DT_PDU_MMEConfigurationUpdate;
// L:8002
typedef struct __si_s1ap_dt_MMEConfigurationUpdateAcknowledge SI_S1AP_DT_PDU_MMEConfigurationUpdateAcknowledge;
// L:8002
typedef struct __si_s1ap_dt_MMEConfigurationUpdateFailure SI_S1AP_DT_PDU_MMEConfigurationUpdateFailure;
// L:8002
typedef struct __si_s1ap_dt_DownlinkS1cdma2000tunnelling SI_S1AP_DT_PDU_DownlinkS1cdma2000tunnelling;
// L:8002
typedef struct __si_s1ap_dt_UplinkS1cdma2000tunnelling SI_S1AP_DT_PDU_UplinkS1cdma2000tunnelling;
// L:8002
typedef struct __si_s1ap_dt_UECapabilityInfoIndication SI_S1AP_DT_PDU_UECapabilityInfoIndication;
// L:8002
typedef struct __si_s1ap_dt_ENBStatusTransfer SI_S1AP_DT_PDU_ENBStatusTransfer;
// L:8002
typedef struct __si_s1ap_dt_MMEStatusTransfer SI_S1AP_DT_PDU_MMEStatusTransfer;
// L:8002
typedef struct __si_s1ap_dt_TraceStart SI_S1AP_DT_PDU_TraceStart;
// L:8002
typedef struct __si_s1ap_dt_TraceFailureIndication SI_S1AP_DT_PDU_TraceFailureIndication;
// L:8002
typedef struct __si_s1ap_dt_DeactivateTrace SI_S1AP_DT_PDU_DeactivateTrace;
// L:8002
typedef struct __si_s1ap_dt_CellTrafficTrace SI_S1AP_DT_PDU_CellTrafficTrace;
// L:8002
typedef struct __si_s1ap_dt_LocationReportingControl SI_S1AP_DT_PDU_LocationReportingControl;
// L:8002
typedef struct __si_s1ap_dt_LocationReportingFailureIndication SI_S1AP_DT_PDU_LocationReportingFailureIndication;
// L:8002
typedef struct __si_s1ap_dt_LocationReport SI_S1AP_DT_PDU_LocationReport;
// L:8002
typedef struct __si_s1ap_dt_OverloadStart SI_S1AP_DT_PDU_OverloadStart;
// L:8002
typedef struct __si_s1ap_dt_OverloadStop SI_S1AP_DT_PDU_OverloadStop;
// L:8002
typedef struct __si_s1ap_dt_WriteReplaceWarningRequest SI_S1AP_DT_PDU_WriteReplaceWarningRequest;
// L:8002
typedef struct __si_s1ap_dt_WriteReplaceWarningResponse SI_S1AP_DT_PDU_WriteReplaceWarningResponse;
// L:8002
typedef struct __si_s1ap_dt_ENBDirectInformationTransfer SI_S1AP_DT_PDU_ENBDirectInformationTransfer;
// L:8002
typedef struct __si_s1ap_dt_MMEDirectInformationTransfer SI_S1AP_DT_PDU_MMEDirectInformationTransfer;
// L:8002
typedef struct __si_s1ap_dt_ENBConfigurationTransfer SI_S1AP_DT_PDU_ENBConfigurationTransfer;
// L:8002
typedef struct __si_s1ap_dt_MMEConfigurationTransfer SI_S1AP_DT_PDU_MMEConfigurationTransfer;
// L:8002
typedef struct __si_s1ap_dt_PrivateMessage SI_S1AP_DT_PDU_PrivateMessage;
// L:8002
typedef struct __si_s1ap_dt_KillRequest SI_S1AP_DT_PDU_KillRequest;
// L:8002
typedef struct __si_s1ap_dt_KillResponse SI_S1AP_DT_PDU_KillResponse;
// L:8002
typedef struct __si_s1ap_dt_PWSRestartIndication SI_S1AP_DT_PDU_PWSRestartIndication;
// L:8002
typedef struct __si_s1ap_dt_PWSFailureIndication SI_S1AP_DT_PDU_PWSFailureIndication;
// L:8002
typedef struct __si_s1ap_dt_DownlinkUEAssociatedLPPaTransport SI_S1AP_DT_PDU_DownlinkUEAssociatedLPPaTransport;
// L:8002
typedef struct __si_s1ap_dt_UplinkUEAssociatedLPPaTransport SI_S1AP_DT_PDU_UplinkUEAssociatedLPPaTransport;
// L:8002
typedef struct __si_s1ap_dt_DownlinkNonUEAssociatedLPPaTransport SI_S1AP_DT_PDU_DownlinkNonUEAssociatedLPPaTransport;
// L:8002
typedef struct __si_s1ap_dt_UplinkNonUEAssociatedLPPaTransport SI_S1AP_DT_PDU_UplinkNonUEAssociatedLPPaTransport;
// L:8002
typedef struct __si_s1ap_dt_E_RABModificationIndication SI_S1AP_DT_PDU_E_RABModificationIndication;
// L:8002
typedef struct __si_s1ap_dt_E_RABModificationConfirm SI_S1AP_DT_PDU_E_RABModificationConfirm;
// L:8002
typedef struct __si_s1ap_dt_UEContextModificationIndication SI_S1AP_DT_PDU_UEContextModificationIndication;
// L:8002
typedef struct __si_s1ap_dt_UEContextModificationConfirm SI_S1AP_DT_PDU_UEContextModificationConfirm;
// L:8002
typedef struct __si_s1ap_dt_UEContextSuspendRequest SI_S1AP_DT_PDU_UEContextSuspendRequest;
// L:8002
typedef struct __si_s1ap_dt_UEContextSuspendResponse SI_S1AP_DT_PDU_UEContextSuspendResponse;
// L:8002
typedef struct __si_s1ap_dt_UEContextResumeRequest SI_S1AP_DT_PDU_UEContextResumeRequest;
// L:8002
typedef struct __si_s1ap_dt_UEContextResumeResponse SI_S1AP_DT_PDU_UEContextResumeResponse;
// L:8002
typedef struct __si_s1ap_dt_UEContextResumeFailure SI_S1AP_DT_PDU_UEContextResumeFailure;
// L:8002
typedef struct __si_s1ap_dt_ConnectionEstablishmentIndication SI_S1AP_DT_PDU_ConnectionEstablishmentIndication;
// L:8002
typedef struct __si_s1ap_dt_RetrieveUEInformation SI_S1AP_DT_PDU_RetrieveUEInformation;
// L:8002
typedef struct __si_s1ap_dt_UEInformationTransfer SI_S1AP_DT_PDU_UEInformationTransfer;
// L:8002
typedef struct __si_s1ap_dt_ENBCPRelocationIndication SI_S1AP_DT_PDU_ENBCPRelocationIndication;
// L:8002
typedef struct __si_s1ap_dt_MMECPRelocationIndication SI_S1AP_DT_PDU_MMECPRelocationIndication;
// L:8002
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReport SI_S1AP_DT_PDU_SecondaryRATDataUsageReport;
// L:8002
typedef struct __si_s1ap_dt_UERadioCapabilityIDMappingRequest SI_S1AP_DT_PDU_UERadioCapabilityIDMappingRequest;
// L:8002
typedef struct __si_s1ap_dt_UERadioCapabilityIDMappingResponse SI_S1AP_DT_PDU_UERadioCapabilityIDMappingResponse;
// L:8002
typedef struct __si_s1ap_dt_E_RABDataForwardingItem_ExtIEs SI_S1AP_DT_PDU_E_RABDataForwardingItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeSetupItemHOReq_ExtIEs SI_S1AP_DT_PDU_E_RABToBeSetupItemHOReq_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABAdmittedItem_ExtIEs SI_S1AP_DT_PDU_E_RABAdmittedItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABFailedToSetupItemHOReqAckExtIEs SI_S1AP_DT_PDU_E_RABFailedToSetupItemHOReqAckExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeSwitchedDLItem_ExtIEs SI_S1AP_DT_PDU_E_RABToBeSwitchedDLItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeSwitchedULItem_ExtIEs SI_S1AP_DT_PDU_E_RABToBeSwitchedULItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeUpdatedItem_ExtIEs SI_S1AP_DT_PDU_E_RABToBeUpdatedItem_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeSetupItemBearerSUReqIEs SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeSetupItemBearerSUReqExtIEs SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABSetupItemBearerSUResIEs SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABSetupItemBearerSUResExtIEs SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeModifiedItemBearerModReqIEs SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModReqIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeModifyItemBearerModReqExtIEs SI_S1AP_DT_PDU_E_RABToBeModifyItemBearerModReqExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModResIEs SI_S1AP_DT_PDU_E_RABModifyItemBearerModResIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModResExtIEs SI_S1AP_DT_PDU_E_RABModifyItemBearerModResExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABReleaseItemBearerRelCompIEs SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABReleaseItemBearerRelCompExtIEs SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeSetupItemCtxtSUReqIEs SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeSetupItemCtxtSUReqExtIEs SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABSetupItemCtxtSUResIEs SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABSetupItemCtxtSUResExtIEs SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResExtIEs;
// L:8002
typedef struct __si_s1ap_dt_TAIItemIEs SI_S1AP_DT_PDU_TAIItemIEs;
// L:8002
typedef struct __si_s1ap_dt_TAIItemExtIEs SI_S1AP_DT_PDU_TAIItemExtIEs;
// L:8002
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionItemRes SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemRes;
// L:8002
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionItemResAck SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemResAck;
// L:8002
typedef struct __si_s1ap_dt_E_RABToBeModifiedItemBearerModInd_ExtIEs SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABNotToBeModifiedItemBearerModInd_ExtIEs SI_S1AP_DT_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_CSGMembershipInfo_ExtIEs SI_S1AP_DT_PDU_CSGMembershipInfo_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModConfIEs SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModConfExtIEs SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABFailedToResumeItemResumeReq_ExtIEs SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs;
// L:8002
typedef struct __si_s1ap_dt_E_RABFailedToResumeItemResumeRes_ExtIEs SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs;

//TODO: DataType -><- Got NULL  L:7941

// Criticality
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Criticality
{
	__si_s1ap__Criticality_reject_val,
	__si_s1ap__Criticality_ignore_val,
	__si_s1ap__Criticality_notify_val
} SI_S1AP_DT_Criticality;


// L:2561
typedef enum __si_s1ap_dt_Criticality2
{
	Criticality_reject_val,
	Criticality_ignore_val,
	Criticality_notify_val
} SI_S1AP_DT_Criticality2;


// L:2588
typedef struct __si_s1ap_dt_Criticality_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Criticality_EnumProxy;


// Presence
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Presence
{
	__si_s1ap__Presence_optional_val,
	__si_s1ap__Presence_conditional_val,
	__si_s1ap__Presence_mandatory_val
} SI_S1AP_DT_Presence;


// L:2561
typedef enum __si_s1ap_dt_Presence2
{
	Presence_optional_val,
	Presence_conditional_val,
	Presence_mandatory_val
} SI_S1AP_DT_Presence2;


// L:2588
typedef struct __si_s1ap_dt_Presence_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Presence_EnumProxy;


// PrivateIEID_local
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_PrivateIEID_local
{
	unsigned long long int data;
} SI_S1AP_DT_PrivateIEID_local;

// PrivateIE-ID
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_PrivateIE_ID
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int local;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int global;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_PrivateIE_ID;


// ProcedureCode
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ProcedureCode
{
	unsigned long long int data;
} SI_S1AP_DT_ProcedureCode;

// ProtocolExtensionID
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ProtocolExtensionID
{
	unsigned long long int data;
} SI_S1AP_DT_ProtocolExtensionID;

// ProtocolIE-ID
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ProtocolIE_ID
{
	unsigned long long int data;
} SI_S1AP_DT_ProtocolIE_ID;

// TriggeringMessage
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_TriggeringMessage
{
	__si_s1ap__TriggeringMessage_initiating_message_val,
	__si_s1ap__TriggeringMessage_successful_outcome_val,
	__si_s1ap__TriggeringMessage_unsuccessfull_outcome_val
} SI_S1AP_DT_TriggeringMessage;


// L:2561
typedef enum __si_s1ap_dt_TriggeringMessage2
{
	TriggeringMessage_initiating_message_val,
	TriggeringMessage_successful_outcome_val,
	TriggeringMessage_unsuccessfull_outcome_val
} SI_S1AP_DT_TriggeringMessage2;


// L:2588
typedef struct __si_s1ap_dt_TriggeringMessage_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_TriggeringMessage_EnumProxy;


// NULL
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_NULL
{
	unsigned long long int data;
} SI_S1AP_DT_NULL;

// PLMNidentity
// OCTETSTRING,TBCD-STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_PLMNidentity
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_PLMNidentity;

// MME-Group-ID
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_MME_Group_ID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_MME_Group_ID;

// MME-Code
// OCTETSTRING,OCTET STRING(SIZE(1))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_MME_Code
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_MME_Code;

// GUMMEI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_GUMMEI
{
	SI_S1AP_DT_PLMNidentity * pLMN_Identity;

	SI_S1AP_DT_MME_Group_ID * mME_Group_ID;

	SI_S1AP_DT_MME_Code * mME_Code;

} SI_S1AP_DT_GUMMEI;


// M-TMSI
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_M_TMSI
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_M_TMSI;

// Additional-GUTI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Additional_GUTI
{
	SI_S1AP_DT_GUMMEI * gUMMEI;

	SI_S1AP_DT_M_TMSI * m_TMSI;

} SI_S1AP_DT_Additional_GUTI;


// AdditionalRRMPriorityIndex
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_AdditionalRRMPriorityIndex
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_AdditionalRRMPriorityIndex;

// AerialUEsubscriptionInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_AerialUEsubscriptionInformation
{
	__si_s1ap__AerialUEsubscriptionInformation_allowed_val,
	__si_s1ap__AerialUEsubscriptionInformation_not_allowed_val
} SI_S1AP_DT_AerialUEsubscriptionInformation;


// L:2561
typedef enum __si_s1ap_dt_AerialUEsubscriptionInformation2
{
	AerialUEsubscriptionInformation_allowed_val,
	AerialUEsubscriptionInformation_not_allowed_val
} SI_S1AP_DT_AerialUEsubscriptionInformation2;


// L:2588
typedef struct __si_s1ap_dt_AerialUEsubscriptionInformation_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_AerialUEsubscriptionInformation_EnumProxy;


// CellIdListforMDT
//SEQUENCE OF EUTRAN-CGI, MIN=1, MAX=maxnoofCellIDforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CellIdListforMDT
{
	SI_LinkedList * EUTRAN_CGI;
} SI_S1AP_DT_CellIdListforMDT;


// CellBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CellBasedMDT
{
	SI_S1AP_DT_CellIdListforMDT * cellIdListforMDT;

} SI_S1AP_DT_CellBasedMDT;


// TAListforMDT
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofTAforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TAListforMDT
{
	SI_LinkedList * TAC;
} SI_S1AP_DT_TAListforMDT;


// TABasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TABasedMDT
{
	SI_S1AP_DT_TAListforMDT * tAListforMDT;

} SI_S1AP_DT_TABasedMDT;


// TAIListforMDT
//SEQUENCE OF TAI, MIN=1, MAX=maxnoofTAforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TAIListforMDT
{
	SI_LinkedList * TAI;
} SI_S1AP_DT_TAIListforMDT;


// TAIBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TAIBasedMDT
{
	SI_S1AP_DT_TAIListforMDT * tAIListforMDT;

} SI_S1AP_DT_TAIBasedMDT;


// AreaScopeOfMDT
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_AreaScopeOfMDT
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_CellBasedMDT * cellBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_TABasedMDT * tABased;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int pLMNWide;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_TAIBasedMDT * tAIBased_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_AreaScopeOfMDT;


// CellIdListforQMC
//SEQUENCE OF EUTRAN-CGI, MIN=1, MAX=maxnoofCellIDforQMC  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CellIdListforQMC
{
	SI_LinkedList * EUTRAN_CGI;
} SI_S1AP_DT_CellIdListforQMC;


// CellBasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CellBasedQMC
{
	SI_S1AP_DT_CellIdListforQMC * cellIdListforQMC;

} SI_S1AP_DT_CellBasedQMC;


// TAListforQMC
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofTAforQMC  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TAListforQMC
{
	SI_LinkedList * TAC;
} SI_S1AP_DT_TAListforQMC;


// TABasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TABasedQMC
{
	SI_S1AP_DT_TAListforQMC * tAListforQMC;

} SI_S1AP_DT_TABasedQMC;


// TAIListforQMC
//SEQUENCE OF TAI, MIN=1, MAX=maxnoofTAforQMC  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TAIListforQMC
{
	SI_LinkedList * TAI;
} SI_S1AP_DT_TAIListforQMC;


// TAIBasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TAIBasedQMC
{
	SI_S1AP_DT_TAIListforQMC * tAIListforQMC;

} SI_S1AP_DT_TAIBasedQMC;


// PLMNListforQMC
//SEQUENCE OF PLMNidentity, MIN=1, MAX=maxnoofPLMNforQMC  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_PLMNListforQMC
{
	SI_LinkedList * PLMNidentity;
} SI_S1AP_DT_PLMNListforQMC;


// PLMNAreaBasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_PLMNAreaBasedQMC
{
	SI_S1AP_DT_PLMNListforQMC * plmnListforQMC;

} SI_S1AP_DT_PLMNAreaBasedQMC;


// AreaScopeOfQMC
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_AreaScopeOfQMC
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_CellBasedQMC * cellBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_TABasedQMC * tABased;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_TAIBasedQMC * tAIBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_PLMNAreaBasedQMC * pLMNAreaBased;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_AreaScopeOfQMC;


// PriorityLevel
// INTEGER,INTEGER{spare(0), highest(1), lowest(14), no-priority(15) }(0..15),MIN=0,MAX=15  plexs
// ADT=0  DT=1
// L:5795
typedef struct __si_s1ap_dt_PriorityLevel
{
	unsigned long long int data;
} SI_S1AP_DT_PriorityLevel;

// Pre-emptionCapability
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Pre_emptionCapability
{
	__si_s1ap__Pre_emptionCapability_shall_not_trigger_pre_emption_val,
	__si_s1ap__Pre_emptionCapability_may_trigger_pre_emption_val
} SI_S1AP_DT_Pre_emptionCapability;


// L:2561
typedef enum __si_s1ap_dt_Pre_emptionCapability2
{
	Pre_emptionCapability_shall_not_trigger_pre_emption_val,
	Pre_emptionCapability_may_trigger_pre_emption_val
} SI_S1AP_DT_Pre_emptionCapability2;


// L:2588
typedef struct __si_s1ap_dt_Pre_emptionCapability_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Pre_emptionCapability_EnumProxy;


// Pre-emptionVulnerability
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Pre_emptionVulnerability
{
	__si_s1ap__Pre_emptionVulnerability_not_pre_emptable_val,
	__si_s1ap__Pre_emptionVulnerability_pre_emptable_val
} SI_S1AP_DT_Pre_emptionVulnerability;


// L:2561
typedef enum __si_s1ap_dt_Pre_emptionVulnerability2
{
	Pre_emptionVulnerability_not_pre_emptable_val,
	Pre_emptionVulnerability_pre_emptable_val
} SI_S1AP_DT_Pre_emptionVulnerability2;


// L:2588
typedef struct __si_s1ap_dt_Pre_emptionVulnerability_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Pre_emptionVulnerability_EnumProxy;


// AllocationAndRetentionPriority
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_AllocationAndRetentionPriority
{
	unsigned long long int priorityLevel;

	uint8_t selected_epre_emptionCapability;
	int extSelected_epre_emptionCapability;

	uint8_t selected_epre_emptionVulnerability;
	int extSelected_epre_emptionVulnerability;

} SI_S1AP_DT_AllocationAndRetentionPriority;


// CellIdentity
// BITSTRING,BIT STRING(SIZE(28))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_CellIdentity
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_CellIdentity;

// EUTRAN-CGI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_EUTRAN_CGI
{
	SI_S1AP_DT_PLMNidentity * pLMNidentity;

	SI_S1AP_DT_CellIdentity * cell_ID;

} SI_S1AP_DT_EUTRAN_CGI;


// CELevel
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_CELevel
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_CELevel;

// CellIdentifierAndCELevelForCECapableUEs
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CellIdentifierAndCELevelForCECapableUEs
{
	SI_S1AP_DT_EUTRAN_CGI * global_Cell_ID;

	SI_S1AP_DT_CELevel * cELevel;

} SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs;


// AssistanceDataForCECapableUEs
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_AssistanceDataForCECapableUEs
{
	SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs * cellIdentifierAndCELevelForCECapableUEs;

} SI_S1AP_DT_AssistanceDataForCECapableUEs;


// RecommendedCellList
//SEQUENCE OF ProtocolIE-SingleContainer{{RecommendedCellItemIEs } }, MIN=1, MAX= maxnoofRecommendedCells  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_RecommendedCellList
{
	SI_LinkedList * list;
} SI_S1AP_DT_RecommendedCellList;


// RecommendedCellsForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_RecommendedCellsForPaging
{
	SI_S1AP_DT_RecommendedCellList * recommendedCellList;

} SI_S1AP_DT_RecommendedCellsForPaging;


// AssistanceDataForRecommendedCells
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_AssistanceDataForRecommendedCells
{
	SI_S1AP_DT_RecommendedCellsForPaging * recommendedCellsForPaging;

} SI_S1AP_DT_AssistanceDataForRecommendedCells;


// PagingAttemptCount
// INTEGER,INTEGER(1..16,...),MIN=1,MAX=16  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_PagingAttemptCount
{
	unsigned long long int data;
} SI_S1AP_DT_PagingAttemptCount;

// IntendedNumberOfPagingAttempts
// INTEGER,INTEGER(1..16,...),MIN=1,MAX=16  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_IntendedNumberOfPagingAttempts
{
	unsigned long long int data;
} SI_S1AP_DT_IntendedNumberOfPagingAttempts;

// NextPagingAreaScope
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_NextPagingAreaScope
{
	__si_s1ap__NextPagingAreaScope_same_val,
	__si_s1ap__NextPagingAreaScope_changed_val
} SI_S1AP_DT_NextPagingAreaScope;


// L:2561
typedef enum __si_s1ap_dt_NextPagingAreaScope2
{
	NextPagingAreaScope_same_val,
	NextPagingAreaScope_changed_val
} SI_S1AP_DT_NextPagingAreaScope2;


// L:2588
typedef struct __si_s1ap_dt_NextPagingAreaScope_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_NextPagingAreaScope_EnumProxy;


// PagingAttemptInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_PagingAttemptInformation
{
	unsigned long long int pagingAttemptCount;

	unsigned long long int intendedNumberOfPagingAttempts;

	uint8_t selected_enextPagingAreaScope;
	int extSelected_enextPagingAreaScope;
	int isPresent_nextPagingAreaScope;

} SI_S1AP_DT_PagingAttemptInformation;


// AssistanceDataForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_AssistanceDataForPaging
{
	SI_S1AP_DT_AssistanceDataForRecommendedCells * assistanceDataForRecommendedCells;
	int isPresent_assistanceDataForRecommendedCells;

	SI_S1AP_DT_AssistanceDataForCECapableUEs * assistanceDataForCECapableUEs;
	int isPresent_assistanceDataForCECapableUEs;

	SI_S1AP_DT_PagingAttemptInformation * pagingAttemptInformation;
	int isPresent_pagingAttemptInformation;

} SI_S1AP_DT_AssistanceDataForPaging;


// Bearers-SubjectToStatusTransferList
//SEQUENCE OF ProtocolIE-SingleContainer{{Bearers-SubjectToStatusTransfer-ItemIEs } }, MIN=1, MAX= maxnoofE-RABs  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_Bearers_SubjectToStatusTransferList
{
	SI_LinkedList * list;
} SI_S1AP_DT_Bearers_SubjectToStatusTransferList;


// E-RAB-ID
// INTEGER,INTEGER(0..15,...),MIN=0,MAX=15  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_E_RAB_ID
{
	unsigned long long int data;
} SI_S1AP_DT_E_RAB_ID;

// PDCP-SN
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_PDCP_SN
{
	unsigned long long int data;
} SI_S1AP_DT_PDCP_SN;

// HFN
// INTEGER,INTEGER(0..1048575),MIN=0,MAX=1048575  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_HFN
{
	unsigned long long int data;
} SI_S1AP_DT_HFN;

// COUNTvalue
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_COUNTvalue
{
	unsigned long long int pDCP_SN;

	unsigned long long int hFN;

} SI_S1AP_DT_COUNTvalue;


// ReceiveStatusofULPDCPSDUs
// BITSTRING,BIT STRING(SIZE(4096))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_ReceiveStatusofULPDCPSDUs
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_ReceiveStatusofULPDCPSDUs;

//TODO: DataType ->ProtocolExtensionContainer{{Bearers-SubjectToStatusTransfer-ItemExtIEs}}<- Got NULL  L:7941

// Bearers-SubjectToStatusTransfer-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Bearers_SubjectToStatusTransfer_Item
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_COUNTvalue * uL_COUNTvalue;

	SI_S1AP_DT_COUNTvalue * dL_COUNTvalue;

	SI_S1AP_DT_ReceiveStatusofULPDCPSDUs * receiveStatusofULPDCPSDUs;
	int isPresent_receiveStatusofULPDCPSDUs;

} SI_S1AP_DT_Bearers_SubjectToStatusTransfer_Item;


// Bearers-SubjectToEarlyStatusTransferList
//SEQUENCE OF ProtocolIE-SingleContainer{{Bearers-SubjectToEarlyStatusTransfer-ItemIEs } }, MIN=1, MAX= maxnoofE-RABs  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_Bearers_SubjectToEarlyStatusTransferList
{
	SI_LinkedList * list;
} SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransferList;


// PDCP-SNExtended
// INTEGER,INTEGER(0..32767),MIN=0,MAX=32767  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_PDCP_SNExtended
{
	unsigned long long int data;
} SI_S1AP_DT_PDCP_SNExtended;

// HFNModified
// INTEGER,INTEGER(0..131071),MIN=0,MAX=131071  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_HFNModified
{
	unsigned long long int data;
} SI_S1AP_DT_HFNModified;

// COUNTValueExtended
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_COUNTValueExtended
{
	unsigned long long int pDCP_SNExtended;

	unsigned long long int hFNModified;

} SI_S1AP_DT_COUNTValueExtended;


// PDCP-SNlength18
// INTEGER,INTEGER(0..262143),MIN=0,MAX=262143  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_PDCP_SNlength18
{
	unsigned long long int data;
} SI_S1AP_DT_PDCP_SNlength18;

// HFNforPDCP-SNlength18
// INTEGER,INTEGER(0..16383),MIN=0,MAX=16383  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_HFNforPDCP_SNlength18
{
	unsigned long long int data;
} SI_S1AP_DT_HFNforPDCP_SNlength18;

// COUNTvaluePDCP-SNlength18
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_COUNTvaluePDCP_SNlength18
{
	unsigned long long int pDCP_SNlength18;

	unsigned long long int hFNforPDCP_SNlength18;

} SI_S1AP_DT_COUNTvaluePDCP_SNlength18;


// DLCOUNT-PDCP-SNlength
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_DLCOUNT_PDCP_SNlength
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_COUNTvalue * dLCOUNTValuePDCP_SNlength12;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_COUNTValueExtended * dLCOUNTValuePDCP_SNlength15;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_COUNTvaluePDCP_SNlength18 * dLCOUNTValuePDCP_SNlength18;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_DLCOUNT_PDCP_SNlength;


//TODO: DataType ->ProtocolExtensionContainer{{Bearers-SubjectToEarlyStatusTransfer-ItemExtIEs}}<- Got NULL  L:7941

// Bearers-SubjectToEarlyStatusTransfer-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Bearers_SubjectToEarlyStatusTransfer_Item
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_DLCOUNT_PDCP_SNlength * dLCOUNT_PDCP_SNlength;

} SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransfer_Item;


// Bearers-SubjectToDLDiscardingList
//SEQUENCE OF ProtocolIE-SingleContainer{{Bearers-SubjectToDLDiscarding-ItemIEs } }, MIN=1, MAX= maxnoofE-RABs  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_Bearers_SubjectToDLDiscardingList
{
	SI_LinkedList * list;
} SI_S1AP_DT_Bearers_SubjectToDLDiscardingList;


// DLDiscarding
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_DLDiscarding
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_COUNTvalue * discardDLCOUNTValuePDCP_SNlength12;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_COUNTValueExtended * discardDLCOUNTValuePDCP_SNlength15;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_COUNTvaluePDCP_SNlength18 * discardDLCOUNTValuePDCP_SNlength18;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_DLDiscarding;


//TODO: DataType ->ProtocolExtensionContainer{{Bearers-SubjectToDLDiscarding-ItemExtIEs}}<- Got NULL  L:7941

// Bearers-SubjectToDLDiscarding-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Bearers_SubjectToDLDiscarding_Item
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_DLDiscarding * dL_Discarding;

} SI_S1AP_DT_Bearers_SubjectToDLDiscarding_Item;


// BearerType
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_BearerType
{
	__si_s1ap__BearerType_non_IP_val
} SI_S1AP_DT_BearerType;


// L:2561
typedef enum __si_s1ap_dt_BearerType2
{
	BearerType_non_IP_val
} SI_S1AP_DT_BearerType2;


// L:2588
typedef struct __si_s1ap_dt_BearerType_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_BearerType_EnumProxy;


// BitRate
// INTEGER,INTEGER(0..10000000000),MIN=0,MAX=10000000000  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_BitRate
{
	unsigned long long int data;
} SI_S1AP_DT_BitRate;

// BluetoothMeasurementConfiguration_bt-rssi
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_BluetoothMeasurementConfiguration_bt_rssi
{
	__si_s1ap__BluetoothMeasurementConfiguration_bt_rssi_true_val
} SI_S1AP_DT_BluetoothMeasurementConfiguration_bt_rssi;


// L:2561
typedef enum __si_s1ap_dt_BluetoothMeasurementConfiguration_bt_rssi2
{
	BluetoothMeasurementConfiguration_bt_rssi_true_val
} SI_S1AP_DT_BluetoothMeasurementConfiguration_bt_rssi2;


// L:2588
typedef struct __si_s1ap_dt_BluetoothMeasurementConfiguration_bt_rssi_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_BluetoothMeasurementConfiguration_bt_rssi_EnumProxy;


// BluetoothMeasConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_BluetoothMeasConfig
{
	__si_s1ap__BluetoothMeasConfig_setup_val
} SI_S1AP_DT_BluetoothMeasConfig;


// L:2561
typedef enum __si_s1ap_dt_BluetoothMeasConfig2
{
	BluetoothMeasConfig_setup_val
} SI_S1AP_DT_BluetoothMeasConfig2;


// L:2588
typedef struct __si_s1ap_dt_BluetoothMeasConfig_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_BluetoothMeasConfig_EnumProxy;


// BluetoothMeasConfigNameList
//SEQUENCE OF BluetoothName, MIN=1, MAX=maxnoofBluetoothName  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_BluetoothMeasConfigNameList
{
	SI_LinkedList * BluetoothName;
} SI_S1AP_DT_BluetoothMeasConfigNameList;


// BluetoothMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_BluetoothMeasurementConfiguration
{
	uint8_t selected_ebluetoothMeasConfig;
	int extSelected_ebluetoothMeasConfig;

	SI_S1AP_DT_BluetoothMeasConfigNameList * bluetoothMeasConfigNameList;
	int isPresent_bluetoothMeasConfigNameList;

	uint8_t selected_ebt_rssi;
	int extSelected_ebt_rssi;
	int isPresent_bt_rssi;

} SI_S1AP_DT_BluetoothMeasurementConfiguration;


// BluetoothName
// OCTETSTRING,OCTET STRING(SIZE(1..248))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_BluetoothName
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_BluetoothName;

// BPLMNs
//SEQUENCE OF PLMNidentity, MIN=1, MAX= maxnoofBPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_BPLMNs
{
	SI_LinkedList * PLMNidentity;
} SI_S1AP_DT_BPLMNs;


// CellID-Cancelled
//SEQUENCE OF CellID-Cancelled-Item, MIN=1, MAX=maxnoofCellID  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CellID_Cancelled
{
	SI_LinkedList * CellID_Cancelled_Item;
} SI_S1AP_DT_CellID_Cancelled;


// TAI-Cancelled
//SEQUENCE OF TAI-Cancelled-Item, MIN=1, MAX=maxnoofTAIforWarning  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TAI_Cancelled
{
	SI_LinkedList * TAI_Cancelled_Item;
} SI_S1AP_DT_TAI_Cancelled;


// EmergencyAreaID-Cancelled
//SEQUENCE OF EmergencyAreaID-Cancelled-Item, MIN=1, MAX=maxnoofEmergencyAreaID  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_EmergencyAreaID_Cancelled
{
	SI_LinkedList * EmergencyAreaID_Cancelled_Item;
} SI_S1AP_DT_EmergencyAreaID_Cancelled;


// BroadcastCancelledAreaList
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_BroadcastCancelledAreaList
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_CellID_Cancelled * cellID_Cancelled;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_TAI_Cancelled * tAI_Cancelled;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_EmergencyAreaID_Cancelled * emergencyAreaID_Cancelled;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_BroadcastCancelledAreaList;


// CellID-Broadcast
//SEQUENCE OF CellID-Broadcast-Item, MIN=1, MAX=maxnoofCellID  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CellID_Broadcast
{
	SI_LinkedList * CellID_Broadcast_Item;
} SI_S1AP_DT_CellID_Broadcast;


// TAI-Broadcast
//SEQUENCE OF TAI-Broadcast-Item, MIN=1, MAX=maxnoofTAIforWarning  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TAI_Broadcast
{
	SI_LinkedList * TAI_Broadcast_Item;
} SI_S1AP_DT_TAI_Broadcast;


// EmergencyAreaID-Broadcast
//SEQUENCE OF EmergencyAreaID-Broadcast-Item, MIN=1, MAX=maxnoofEmergencyAreaID  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_EmergencyAreaID_Broadcast
{
	SI_LinkedList * EmergencyAreaID_Broadcast_Item;
} SI_S1AP_DT_EmergencyAreaID_Broadcast;


// BroadcastCompletedAreaList
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_BroadcastCompletedAreaList
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_CellID_Broadcast * cellID_Broadcast;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_TAI_Broadcast * tAI_Broadcast;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_EmergencyAreaID_Broadcast * emergencyAreaID_Broadcast;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_BroadcastCompletedAreaList;


// CancelledCellinEAI
//SEQUENCE OF CancelledCellinEAI-Item, MIN=1, MAX=maxnoofCellinEAI  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CancelledCellinEAI
{
	SI_LinkedList * CancelledCellinEAI_Item;
} SI_S1AP_DT_CancelledCellinEAI;


// NumberOfBroadcasts
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_NumberOfBroadcasts
{
	unsigned long long int data;
} SI_S1AP_DT_NumberOfBroadcasts;

// CancelledCellinEAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CancelledCellinEAI_Item
{
	SI_S1AP_DT_EUTRAN_CGI * eCGI;

	unsigned long long int numberOfBroadcasts;

} SI_S1AP_DT_CancelledCellinEAI_Item;


// CancelledCellinTAI
//SEQUENCE OF CancelledCellinTAI-Item, MIN=1, MAX=maxnoofCellinTAI  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CancelledCellinTAI
{
	SI_LinkedList * CancelledCellinTAI_Item;
} SI_S1AP_DT_CancelledCellinTAI;


// CancelledCellinTAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CancelledCellinTAI_Item
{
	SI_S1AP_DT_EUTRAN_CGI * eCGI;

	unsigned long long int numberOfBroadcasts;

} SI_S1AP_DT_CancelledCellinTAI_Item;


// CauseRadioNetwork
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CauseRadioNetwork
{
	__si_s1ap__CauseRadioNetwork_unspecified_val,
	__si_s1ap__CauseRadioNetwork_tx2relocoverall_expiry_val,
	__si_s1ap__CauseRadioNetwork_successful_handover_val,
	__si_s1ap__CauseRadioNetwork_release_due_to_eutran_generated_reason_val,
	__si_s1ap__CauseRadioNetwork_handover_cancelled_val,
	__si_s1ap__CauseRadioNetwork_partial_handover_val,
	__si_s1ap__CauseRadioNetwork_ho_failure_in_target_EPC_eNB_or_target_system_val,
	__si_s1ap__CauseRadioNetwork_ho_target_not_allowed_val,
	__si_s1ap__CauseRadioNetwork_tS1relocoverall_expiry_val,
	__si_s1ap__CauseRadioNetwork_tS1relocprep_expiry_val,
	__si_s1ap__CauseRadioNetwork_cell_not_available_val,
	__si_s1ap__CauseRadioNetwork_unknown_targetID_val,
	__si_s1ap__CauseRadioNetwork_no_radio_resources_available_in_target_cell_val,
	__si_s1ap__CauseRadioNetwork_unknown_mme_ue_s1ap_id_val,
	__si_s1ap__CauseRadioNetwork_unknown_enb_ue_s1ap_id_val,
	__si_s1ap__CauseRadioNetwork_unknown_pair_ue_s1ap_id_val,
	__si_s1ap__CauseRadioNetwork_handover_desirable_for_radio_reason_val,
	__si_s1ap__CauseRadioNetwork_time_critical_handover_val,
	__si_s1ap__CauseRadioNetwork_resource_optimisation_handover_val,
	__si_s1ap__CauseRadioNetwork_reduce_load_in_serving_cell_val,
	__si_s1ap__CauseRadioNetwork_user_inactivity_val,
	__si_s1ap__CauseRadioNetwork_radio_connection_with_ue_lost_val,
	__si_s1ap__CauseRadioNetwork_load_balancing_tau_required_val,
	__si_s1ap__CauseRadioNetwork_cs_fallback_triggered_val,
	__si_s1ap__CauseRadioNetwork_ue_not_available_for_ps_service_val,
	__si_s1ap__CauseRadioNetwork_radio_resources_not_available_val,
	__si_s1ap__CauseRadioNetwork_failure_in_radio_interface_procedure_val,
	__si_s1ap__CauseRadioNetwork_invalid_qos_combination_val,
	__si_s1ap__CauseRadioNetwork_interrat_redirection_val,
	__si_s1ap__CauseRadioNetwork_interaction_with_other_procedure_val,
	__si_s1ap__CauseRadioNetwork_unknown_E_RAB_ID_val,
	__si_s1ap__CauseRadioNetwork_multiple_E_RAB_ID_instances_val,
	__si_s1ap__CauseRadioNetwork_encryption_and_or_integrity_protection_algorithms_not_supported_val,
	__si_s1ap__CauseRadioNetwork_s1_intra_system_handover_triggered_val,
	__si_s1ap__CauseRadioNetwork_s1_inter_system_handover_triggered_val,
	__si_s1ap__CauseRadioNetwork_x2_handover_triggered_val,
	__si_s1ap__CauseRadioNetwork_redirection_towards_1xRTT_val_ext,
	__si_s1ap__CauseRadioNetwork_not_supported_QCI_value_val_ext,
	__si_s1ap__CauseRadioNetwork_invalid_CSG_Id_val_ext,
	__si_s1ap__CauseRadioNetwork_release_due_to_pre_emption_val_ext,
	__si_s1ap__CauseRadioNetwork_n26_interface_not_available_val_ext,
	__si_s1ap__CauseRadioNetwork_insufficient_ue_capabilities_val_ext,
	__si_s1ap__CauseRadioNetwork_maximum_bearer_pre_emption_rate_exceeded_val_ext,
	__si_s1ap__CauseRadioNetwork_up_integrity_protection_not_possible_val_ext,
	__si_s1ap__CauseRadioNetwork_release_due_to_discontinuous_coverage_val_ext
} SI_S1AP_DT_CauseRadioNetwork;


// L:2561
typedef enum __si_s1ap_dt_CauseRadioNetwork2
{
	CauseRadioNetwork_unspecified_val,
	CauseRadioNetwork_tx2relocoverall_expiry_val,
	CauseRadioNetwork_successful_handover_val,
	CauseRadioNetwork_release_due_to_eutran_generated_reason_val,
	CauseRadioNetwork_handover_cancelled_val,
	CauseRadioNetwork_partial_handover_val,
	CauseRadioNetwork_ho_failure_in_target_EPC_eNB_or_target_system_val,
	CauseRadioNetwork_ho_target_not_allowed_val,
	CauseRadioNetwork_tS1relocoverall_expiry_val,
	CauseRadioNetwork_tS1relocprep_expiry_val,
	CauseRadioNetwork_cell_not_available_val,
	CauseRadioNetwork_unknown_targetID_val,
	CauseRadioNetwork_no_radio_resources_available_in_target_cell_val,
	CauseRadioNetwork_unknown_mme_ue_s1ap_id_val,
	CauseRadioNetwork_unknown_enb_ue_s1ap_id_val,
	CauseRadioNetwork_unknown_pair_ue_s1ap_id_val,
	CauseRadioNetwork_handover_desirable_for_radio_reason_val,
	CauseRadioNetwork_time_critical_handover_val,
	CauseRadioNetwork_resource_optimisation_handover_val,
	CauseRadioNetwork_reduce_load_in_serving_cell_val,
	CauseRadioNetwork_user_inactivity_val,
	CauseRadioNetwork_radio_connection_with_ue_lost_val,
	CauseRadioNetwork_load_balancing_tau_required_val,
	CauseRadioNetwork_cs_fallback_triggered_val,
	CauseRadioNetwork_ue_not_available_for_ps_service_val,
	CauseRadioNetwork_radio_resources_not_available_val,
	CauseRadioNetwork_failure_in_radio_interface_procedure_val,
	CauseRadioNetwork_invalid_qos_combination_val,
	CauseRadioNetwork_interrat_redirection_val,
	CauseRadioNetwork_interaction_with_other_procedure_val,
	CauseRadioNetwork_unknown_E_RAB_ID_val,
	CauseRadioNetwork_multiple_E_RAB_ID_instances_val,
	CauseRadioNetwork_encryption_and_or_integrity_protection_algorithms_not_supported_val,
	CauseRadioNetwork_s1_intra_system_handover_triggered_val,
	CauseRadioNetwork_s1_inter_system_handover_triggered_val,
	CauseRadioNetwork_x2_handover_triggered_val,
	CauseRadioNetwork_redirection_towards_1xRTT_val_ext,
	CauseRadioNetwork_not_supported_QCI_value_val_ext,
	CauseRadioNetwork_invalid_CSG_Id_val_ext,
	CauseRadioNetwork_release_due_to_pre_emption_val_ext,
	CauseRadioNetwork_n26_interface_not_available_val_ext,
	CauseRadioNetwork_insufficient_ue_capabilities_val_ext,
	CauseRadioNetwork_maximum_bearer_pre_emption_rate_exceeded_val_ext,
	CauseRadioNetwork_up_integrity_protection_not_possible_val_ext,
	CauseRadioNetwork_release_due_to_discontinuous_coverage_val_ext
} SI_S1AP_DT_CauseRadioNetwork2;


// L:2588
typedef struct __si_s1ap_dt_CauseRadioNetwork_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CauseRadioNetwork_EnumProxy;


// CauseTransport
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CauseTransport
{
	__si_s1ap__CauseTransport_transport_resource_unavailable_val,
	__si_s1ap__CauseTransport_unspecified_val
} SI_S1AP_DT_CauseTransport;


// L:2561
typedef enum __si_s1ap_dt_CauseTransport2
{
	CauseTransport_transport_resource_unavailable_val,
	CauseTransport_unspecified_val
} SI_S1AP_DT_CauseTransport2;


// L:2588
typedef struct __si_s1ap_dt_CauseTransport_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CauseTransport_EnumProxy;


// CauseNas
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CauseNas
{
	__si_s1ap__CauseNas_normal_release_val,
	__si_s1ap__CauseNas_authentication_failure_val,
	__si_s1ap__CauseNas_detach_val,
	__si_s1ap__CauseNas_unspecified_val,
	__si_s1ap__CauseNas_csg_subscription_expiry_val_ext,
	__si_s1ap__CauseNas_uE_not_in_PLMN_serving_area_val_ext,
	__si_s1ap__CauseNas_iab_not_authorized_val_ext
} SI_S1AP_DT_CauseNas;


// L:2561
typedef enum __si_s1ap_dt_CauseNas2
{
	CauseNas_normal_release_val,
	CauseNas_authentication_failure_val,
	CauseNas_detach_val,
	CauseNas_unspecified_val,
	CauseNas_csg_subscription_expiry_val_ext,
	CauseNas_uE_not_in_PLMN_serving_area_val_ext,
	CauseNas_iab_not_authorized_val_ext
} SI_S1AP_DT_CauseNas2;


// L:2588
typedef struct __si_s1ap_dt_CauseNas_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CauseNas_EnumProxy;


// CauseProtocol
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CauseProtocol
{
	__si_s1ap__CauseProtocol_transfer_syntax_error_val,
	__si_s1ap__CauseProtocol_abstract_syntax_error_reject_val,
	__si_s1ap__CauseProtocol_abstract_syntax_error_ignore_and_notify_val,
	__si_s1ap__CauseProtocol_message_not_compatible_with_receiver_state_val,
	__si_s1ap__CauseProtocol_semantic_error_val,
	__si_s1ap__CauseProtocol_abstract_syntax_error_falsely_constructed_message_val,
	__si_s1ap__CauseProtocol_unspecified_val
} SI_S1AP_DT_CauseProtocol;


// L:2561
typedef enum __si_s1ap_dt_CauseProtocol2
{
	CauseProtocol_transfer_syntax_error_val,
	CauseProtocol_abstract_syntax_error_reject_val,
	CauseProtocol_abstract_syntax_error_ignore_and_notify_val,
	CauseProtocol_message_not_compatible_with_receiver_state_val,
	CauseProtocol_semantic_error_val,
	CauseProtocol_abstract_syntax_error_falsely_constructed_message_val,
	CauseProtocol_unspecified_val
} SI_S1AP_DT_CauseProtocol2;


// L:2588
typedef struct __si_s1ap_dt_CauseProtocol_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CauseProtocol_EnumProxy;


// CauseMisc
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CauseMisc
{
	__si_s1ap__CauseMisc_control_processing_overload_val,
	__si_s1ap__CauseMisc_not_enough_user_plane_processing_resources_val,
	__si_s1ap__CauseMisc_hardware_failure_val,
	__si_s1ap__CauseMisc_om_intervention_val,
	__si_s1ap__CauseMisc_unspecified_val,
	__si_s1ap__CauseMisc_unknown_PLMN_val
} SI_S1AP_DT_CauseMisc;


// L:2561
typedef enum __si_s1ap_dt_CauseMisc2
{
	CauseMisc_control_processing_overload_val,
	CauseMisc_not_enough_user_plane_processing_resources_val,
	CauseMisc_hardware_failure_val,
	CauseMisc_om_intervention_val,
	CauseMisc_unspecified_val,
	CauseMisc_unknown_PLMN_val
} SI_S1AP_DT_CauseMisc2;


// L:2588
typedef struct __si_s1ap_dt_CauseMisc_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CauseMisc_EnumProxy;


// Cause
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_Cause
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t radioNetwork;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t transport;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t nas;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t protocol;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t misc;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_Cause;


// CellAccessMode
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CellAccessMode
{
	__si_s1ap__CellAccessMode_hybrid_val
} SI_S1AP_DT_CellAccessMode;


// L:2561
typedef enum __si_s1ap_dt_CellAccessMode2
{
	CellAccessMode_hybrid_val
} SI_S1AP_DT_CellAccessMode2;


// L:2588
typedef struct __si_s1ap_dt_CellAccessMode_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CellAccessMode_EnumProxy;


// CE-mode-B-SupportIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CE_mode_B_SupportIndicator
{
	__si_s1ap__CE_mode_B_SupportIndicator_supported_val
} SI_S1AP_DT_CE_mode_B_SupportIndicator;


// L:2561
typedef enum __si_s1ap_dt_CE_mode_B_SupportIndicator2
{
	CE_mode_B_SupportIndicator_supported_val
} SI_S1AP_DT_CE_mode_B_SupportIndicator2;


// L:2588
typedef struct __si_s1ap_dt_CE_mode_B_SupportIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CE_mode_B_SupportIndicator_EnumProxy;


// CellID-Broadcast-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CellID_Broadcast_Item
{
	SI_S1AP_DT_EUTRAN_CGI * eCGI;

} SI_S1AP_DT_CellID_Broadcast_Item;


// CellID-Cancelled-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CellID_Cancelled_Item
{
	SI_S1AP_DT_EUTRAN_CGI * eCGI;

	unsigned long long int numberOfBroadcasts;

} SI_S1AP_DT_CellID_Cancelled_Item;


// Cdma2000PDU
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Cdma2000PDU
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Cdma2000PDU;

// Cdma2000RATType
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Cdma2000RATType
{
	__si_s1ap__Cdma2000RATType_hRPD_val,
	__si_s1ap__Cdma2000RATType_onexRTT_val
} SI_S1AP_DT_Cdma2000RATType;


// L:2561
typedef enum __si_s1ap_dt_Cdma2000RATType2
{
	Cdma2000RATType_hRPD_val,
	Cdma2000RATType_onexRTT_val
} SI_S1AP_DT_Cdma2000RATType2;


// L:2588
typedef struct __si_s1ap_dt_Cdma2000RATType_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Cdma2000RATType_EnumProxy;


// Cdma2000SectorID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Cdma2000SectorID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Cdma2000SectorID;

// Cdma2000HOStatus
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Cdma2000HOStatus
{
	__si_s1ap__Cdma2000HOStatus_hOSuccess_val,
	__si_s1ap__Cdma2000HOStatus_hOFailure_val
} SI_S1AP_DT_Cdma2000HOStatus;


// L:2561
typedef enum __si_s1ap_dt_Cdma2000HOStatus2
{
	Cdma2000HOStatus_hOSuccess_val,
	Cdma2000HOStatus_hOFailure_val
} SI_S1AP_DT_Cdma2000HOStatus2;


// L:2588
typedef struct __si_s1ap_dt_Cdma2000HOStatus_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Cdma2000HOStatus_EnumProxy;


// Cdma2000HORequiredIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Cdma2000HORequiredIndication
{
	__si_s1ap__Cdma2000HORequiredIndication_true_val
} SI_S1AP_DT_Cdma2000HORequiredIndication;


// L:2561
typedef enum __si_s1ap_dt_Cdma2000HORequiredIndication2
{
	Cdma2000HORequiredIndication_true_val
} SI_S1AP_DT_Cdma2000HORequiredIndication2;


// L:2588
typedef struct __si_s1ap_dt_Cdma2000HORequiredIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Cdma2000HORequiredIndication_EnumProxy;


// Cdma2000OneXMEID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Cdma2000OneXMEID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Cdma2000OneXMEID;

// Cdma2000OneXMSI
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Cdma2000OneXMSI
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Cdma2000OneXMSI;

// Cdma2000OneXPilot
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Cdma2000OneXPilot
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Cdma2000OneXPilot;

// Cdma2000OneXSRVCCInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Cdma2000OneXSRVCCInfo
{
	SI_S1AP_DT_Cdma2000OneXMEID * cdma2000OneXMEID;

	SI_S1AP_DT_Cdma2000OneXMSI * cdma2000OneXMSI;

	SI_S1AP_DT_Cdma2000OneXPilot * cdma2000OneXPilot;

} SI_S1AP_DT_Cdma2000OneXSRVCCInfo;


// Cdma2000OneXRAND
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Cdma2000OneXRAND
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Cdma2000OneXRAND;

// Cell-Size
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Cell_Size
{
	__si_s1ap__Cell_Size_verysmall_val,
	__si_s1ap__Cell_Size_small_val,
	__si_s1ap__Cell_Size_medium_val,
	__si_s1ap__Cell_Size_large_val
} SI_S1AP_DT_Cell_Size;


// L:2561
typedef enum __si_s1ap_dt_Cell_Size2
{
	Cell_Size_verysmall_val,
	Cell_Size_small_val,
	Cell_Size_medium_val,
	Cell_Size_large_val
} SI_S1AP_DT_Cell_Size2;


// L:2588
typedef struct __si_s1ap_dt_Cell_Size_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Cell_Size_EnumProxy;


// CellType
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CellType
{
	uint8_t selected_ecell_Size;
	int extSelected_ecell_Size;

} SI_S1AP_DT_CellType;


// LAC
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_LAC
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_LAC;

// CI
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_CI
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_CI;

// RAC
// OCTETSTRING,OCTET STRING(SIZE(1))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_RAC
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_RAC;

// CGI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CGI
{
	SI_S1AP_DT_PLMNidentity * pLMNidentity;

	SI_S1AP_DT_LAC * lAC;

	SI_S1AP_DT_CI * cI;

	SI_S1AP_DT_RAC * rAC;
	int isPresent_rAC;

} SI_S1AP_DT_CGI;


// CNDomain
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CNDomain
{
	__si_s1ap__CNDomain_ps_val,
	__si_s1ap__CNDomain_cs_val
} SI_S1AP_DT_CNDomain;


// L:2561
typedef enum __si_s1ap_dt_CNDomain2
{
	CNDomain_ps_val,
	CNDomain_cs_val
} SI_S1AP_DT_CNDomain2;


// L:2588
typedef struct __si_s1ap_dt_CNDomain_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CNDomain_EnumProxy;


// CNTypeRestrictions
//SEQUENCE OF CNTypeRestrictions-Item, MIN=1, MAX= maxnoofEPLMNsPlusOne  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CNTypeRestrictions
{
	SI_LinkedList * CNTypeRestrictions_Item;
} SI_S1AP_DT_CNTypeRestrictions;


// CNType
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CNType
{
	__si_s1ap__CNType_fiveGCForbidden_val,
	__si_s1ap__CNType_epc_Forbiddden_val_ext
} SI_S1AP_DT_CNType;


// L:2561
typedef enum __si_s1ap_dt_CNType2
{
	CNType_fiveGCForbidden_val,
	CNType_epc_Forbiddden_val_ext
} SI_S1AP_DT_CNType2;


// L:2588
typedef struct __si_s1ap_dt_CNType_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CNType_EnumProxy;


// CNTypeRestrictions-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CNTypeRestrictions_Item
{
	SI_S1AP_DT_PLMNidentity * pLMN_Identity;

	uint8_t selected_ecNType;
	int extSelected_ecNType;

} SI_S1AP_DT_CNTypeRestrictions_Item;


// CoarseUELocationRequested
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CoarseUELocationRequested
{
	__si_s1ap__CoarseUELocationRequested_true_val
} SI_S1AP_DT_CoarseUELocationRequested;


// L:2561
typedef enum __si_s1ap_dt_CoarseUELocationRequested2
{
	CoarseUELocationRequested_true_val
} SI_S1AP_DT_CoarseUELocationRequested2;


// L:2588
typedef struct __si_s1ap_dt_CoarseUELocationRequested_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CoarseUELocationRequested_EnumProxy;


// CoarseUELocation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_CoarseUELocation
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_CoarseUELocation;

// ConcurrentWarningMessageIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ConcurrentWarningMessageIndicator
{
	__si_s1ap__ConcurrentWarningMessageIndicator_true_val
} SI_S1AP_DT_ConcurrentWarningMessageIndicator;


// L:2561
typedef enum __si_s1ap_dt_ConcurrentWarningMessageIndicator2
{
	ConcurrentWarningMessageIndicator_true_val
} SI_S1AP_DT_ConcurrentWarningMessageIndicator2;


// L:2588
typedef struct __si_s1ap_dt_ConcurrentWarningMessageIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ConcurrentWarningMessageIndicator_EnumProxy;


// ConnectedengNBList
//SEQUENCE OF ConnectedengNBItem, MIN=1, MAX=maxnoofConnectedengNBs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ConnectedengNBList
{
	SI_LinkedList * ConnectedengNBItem;
} SI_S1AP_DT_ConnectedengNBList;


// En-gNB-ID
// BITSTRING,BIT STRING(SIZE(22..32,...))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_En_gNB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_En_gNB_ID;

// SupportedTAs
//SEQUENCE OF SupportedTAs-Item, MIN=1, MAX= maxnoofTACs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_SupportedTAs
{
	SI_LinkedList * SupportedTAs_Item;
} SI_S1AP_DT_SupportedTAs;


// ConnectedengNBItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ConnectedengNBItem
{
	SI_S1AP_DT_En_gNB_ID * en_gNB_ID;

	SI_S1AP_DT_SupportedTAs * supportedTAs;

} SI_S1AP_DT_ConnectedengNBItem;


// GNB-ID
// BITSTRING,BIT STRING(SIZE(22..32))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_GNB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_GNB_ID;

// GNB-Identity
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_GNB_Identity
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_S1AP_DT_GNB_ID * gNB_ID;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_GNB_Identity;


// Global-GNB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Global_GNB_ID
{
	SI_S1AP_DT_PLMNidentity * pLMN_Identity;

	SI_S1AP_DT_GNB_Identity * gNB_ID;

} SI_S1AP_DT_Global_GNB_ID;


// GNB
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_GNB
{
	SI_S1AP_DT_Global_GNB_ID * global_gNB_ID;

} SI_S1AP_DT_GNB;


// ENBID_macroENB-ID
// BITSTRING,BIT STRING(SIZE(20))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_ENBID_macroENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_ENBID_macroENB_ID;

// ENBID_homeENB-ID
// BITSTRING,BIT STRING(SIZE(28))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_ENBID_homeENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_ENBID_homeENB_ID;

// ENBID_short-macroENB-ID
// BITSTRING,BIT STRING(SIZE(18))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_ENBID_short_macroENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_ENBID_short_macroENB_ID;

// ENBID_long-macroENB-ID
// BITSTRING,BIT STRING(SIZE(21))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_ENBID_long_macroENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_ENBID_long_macroENB_ID;

// ENB-ID
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_ENB_ID
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_S1AP_DT_ENBID_macroENB_ID * macroENB_ID;

		// ParserName = BITSTRING - NonEP false;
		SI_S1AP_DT_ENBID_homeENB_ID * homeENB_ID;

		// ParserName = BITSTRING - NonEP false;
		SI_S1AP_DT_ENBID_short_macroENB_ID * short_macroENB_ID_ext;

		// ParserName = BITSTRING - NonEP false;
		SI_S1AP_DT_ENBID_long_macroENB_ID * long_macroENB_ID_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_ENB_ID;


// Global-ENB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Global_ENB_ID
{
	SI_S1AP_DT_PLMNidentity * pLMNidentity;

	SI_S1AP_DT_ENB_ID * eNB_ID;

} SI_S1AP_DT_Global_ENB_ID;


// NG-eNB
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_NG_eNB
{
	SI_S1AP_DT_Global_ENB_ID * global_ng_eNB_ID;

} SI_S1AP_DT_NG_eNB;


// Global-RAN-NODE-ID
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_Global_RAN_NODE_ID
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_GNB * gNB;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_NG_eNB * ng_eNB;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_Global_RAN_NODE_ID;


// RAN-UE-NGAP-ID
// INTEGER,INTEGER(0..4294967295),MIN=0,MAX=4294967295  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_RAN_UE_NGAP_ID
{
	unsigned long long int data;
} SI_S1AP_DT_RAN_UE_NGAP_ID;

// ContextatSource
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ContextatSource
{
	SI_S1AP_DT_Global_RAN_NODE_ID * sourceNG_RAN_node_ID;

	unsigned long long int rAN_UE_NGAP_ID;

} SI_S1AP_DT_ContextatSource;


// Correlation-ID
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Correlation_ID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Correlation_ID;

// CSFallbackIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CSFallbackIndicator
{
	__si_s1ap__CSFallbackIndicator_cs_fallback_required_val,
	__si_s1ap__CSFallbackIndicator_cs_fallback_high_priority_val_ext
} SI_S1AP_DT_CSFallbackIndicator;


// L:2561
typedef enum __si_s1ap_dt_CSFallbackIndicator2
{
	CSFallbackIndicator_cs_fallback_required_val,
	CSFallbackIndicator_cs_fallback_high_priority_val_ext
} SI_S1AP_DT_CSFallbackIndicator2;


// L:2588
typedef struct __si_s1ap_dt_CSFallbackIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CSFallbackIndicator_EnumProxy;


// AdditionalCSFallbackIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_AdditionalCSFallbackIndicator
{
	__si_s1ap__AdditionalCSFallbackIndicator_no_restriction_val,
	__si_s1ap__AdditionalCSFallbackIndicator_restriction_val
} SI_S1AP_DT_AdditionalCSFallbackIndicator;


// L:2561
typedef enum __si_s1ap_dt_AdditionalCSFallbackIndicator2
{
	AdditionalCSFallbackIndicator_no_restriction_val,
	AdditionalCSFallbackIndicator_restriction_val
} SI_S1AP_DT_AdditionalCSFallbackIndicator2;


// L:2588
typedef struct __si_s1ap_dt_AdditionalCSFallbackIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_AdditionalCSFallbackIndicator_EnumProxy;


// CSG-Id
// BITSTRING,BIT STRING(SIZE(27))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_CSG_Id
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_CSG_Id;

// CSG-IdList
//SEQUENCE OF CSG-IdList-Item, MIN=1, MAX= maxnoofCSGs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CSG_IdList
{
	SI_LinkedList * CSG_IdList_Item;
} SI_S1AP_DT_CSG_IdList;


// CSG-IdList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CSG_IdList_Item
{
	SI_S1AP_DT_CSG_Id * cSG_Id;

} SI_S1AP_DT_CSG_IdList_Item;


// CSGMembershipStatus
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CSGMembershipStatus
{
	__si_s1ap__CSGMembershipStatus_member_val,
	__si_s1ap__CSGMembershipStatus_not_member_val
} SI_S1AP_DT_CSGMembershipStatus;


// L:2561
typedef enum __si_s1ap_dt_CSGMembershipStatus2
{
	CSGMembershipStatus_member_val,
	CSGMembershipStatus_not_member_val
} SI_S1AP_DT_CSGMembershipStatus2;


// L:2588
typedef struct __si_s1ap_dt_CSGMembershipStatus_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CSGMembershipStatus_EnumProxy;


// Coverage-Level
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Coverage_Level
{
	__si_s1ap__Coverage_Level_extendedcoverage_val
} SI_S1AP_DT_Coverage_Level;


// L:2561
typedef enum __si_s1ap_dt_Coverage_Level2
{
	Coverage_Level_extendedcoverage_val
} SI_S1AP_DT_Coverage_Level2;


// L:2588
typedef struct __si_s1ap_dt_Coverage_Level_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Coverage_Level_EnumProxy;


// CriticalityDiagnostics-IE-List
//SEQUENCE OF CriticalityDiagnostics-IE-Item, MIN=1, MAX= maxnoofErrors  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CriticalityDiagnostics_IE_List
{
	SI_LinkedList * CriticalityDiagnostics_IE_Item;
} SI_S1AP_DT_CriticalityDiagnostics_IE_List;


// CriticalityDiagnostics
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CriticalityDiagnostics
{
	unsigned long long int procedureCode;
	int isPresent_procedureCode;

	uint8_t selected_etriggeringMessage;
	int extSelected_etriggeringMessage;
	int isPresent_triggeringMessage;

	uint8_t selected_eprocedureCriticality;
	int extSelected_eprocedureCriticality;
	int isPresent_procedureCriticality;

	SI_S1AP_DT_CriticalityDiagnostics_IE_List * iEsCriticalityDiagnostics;
	int isPresent_iEsCriticalityDiagnostics;

} SI_S1AP_DT_CriticalityDiagnostics;


// TypeOfError
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_TypeOfError
{
	__si_s1ap__TypeOfError_not_understood_val,
	__si_s1ap__TypeOfError_missing_val
} SI_S1AP_DT_TypeOfError;


// L:2561
typedef enum __si_s1ap_dt_TypeOfError2
{
	TypeOfError_not_understood_val,
	TypeOfError_missing_val
} SI_S1AP_DT_TypeOfError2;


// L:2588
typedef struct __si_s1ap_dt_TypeOfError_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_TypeOfError_EnumProxy;


// CriticalityDiagnostics-IE-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CriticalityDiagnostics_IE_Item
{
	uint8_t selected_eiECriticality;
	int extSelected_eiECriticality;

	unsigned long long int iE_ID;

	uint8_t selected_etypeOfError;
	int extSelected_etypeOfError;

} SI_S1AP_DT_CriticalityDiagnostics_IE_Item;


// DAPSRequestInfo_dAPSIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_DAPSRequestInfo_dAPSIndicator
{
	__si_s1ap__DAPSRequestInfo_dAPSIndicator_dAPS_HO_required_val
} SI_S1AP_DT_DAPSRequestInfo_dAPSIndicator;


// L:2561
typedef enum __si_s1ap_dt_DAPSRequestInfo_dAPSIndicator2
{
	DAPSRequestInfo_dAPSIndicator_dAPS_HO_required_val
} SI_S1AP_DT_DAPSRequestInfo_dAPSIndicator2;


// L:2588
typedef struct __si_s1ap_dt_DAPSRequestInfo_dAPSIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_DAPSRequestInfo_dAPSIndicator_EnumProxy;


// DAPSRequestInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_DAPSRequestInfo
{
	uint8_t selected_edAPSIndicator;
	int extSelected_edAPSIndicator;

} SI_S1AP_DT_DAPSRequestInfo;


// DAPSResponseInfoList
//SEQUENCE OF ProtocolIE-SingleContainer{{DAPSResponseInfoListIEs } }, MIN=1, MAX= maxnoofE-RABs  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_DAPSResponseInfoList
{
	SI_LinkedList * list;
} SI_S1AP_DT_DAPSResponseInfoList;


// DAPSResponseInfo_dapsresponseindicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_DAPSResponseInfo_dapsresponseindicator
{
	__si_s1ap__DAPSResponseInfo_dapsresponseindicator_dAPS_HO_accepted_val,
	__si_s1ap__DAPSResponseInfo_dapsresponseindicator_dAPS_HO_not_accepted_val
} SI_S1AP_DT_DAPSResponseInfo_dapsresponseindicator;


// L:2561
typedef enum __si_s1ap_dt_DAPSResponseInfo_dapsresponseindicator2
{
	DAPSResponseInfo_dapsresponseindicator_dAPS_HO_accepted_val,
	DAPSResponseInfo_dapsresponseindicator_dAPS_HO_not_accepted_val
} SI_S1AP_DT_DAPSResponseInfo_dapsresponseindicator2;


// L:2588
typedef struct __si_s1ap_dt_DAPSResponseInfo_dapsresponseindicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_DAPSResponseInfo_dapsresponseindicator_EnumProxy;


// DAPSResponseInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_DAPSResponseInfo
{
	uint8_t selected_edapsresponseindicator;
	int extSelected_edapsresponseindicator;

} SI_S1AP_DT_DAPSResponseInfo;


// DAPSResponseInfoItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_DAPSResponseInfoItem
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_DAPSResponseInfo * dAPSResponseInfo;

} SI_S1AP_DT_DAPSResponseInfoItem;


// DAPSResponseInfoListIEs
// ADT=2  DT=3 Container
// L:4288
typedef struct __si_s1ap_dt_DAPSResponseInfoListIEs
{
	// Got Success L:4324
	//DAPSResponseInfoItem,  mandatory
	SI_S1AP_DT_DAPSResponseInfoItem * dAPSResponseInfoItem;
	int isPresent_dAPSResponseInfoItem;

} SI_S1AP_DT_DAPSResponseInfoListIEs;


// DataCodingScheme
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_DataCodingScheme
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_DataCodingScheme;

// DataSize
// INTEGER,INTEGER(1..4095,...),MIN=1,MAX=4095  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_DataSize
{
	unsigned long long int data;
} SI_S1AP_DT_DataSize;

// DCN-ID
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_DCN_ID
{
	unsigned long long int data;
} SI_S1AP_DT_DCN_ID;

// ServedDCNs
//SEQUENCE OF ServedDCNsItem, MIN=0, MAX=maxnoofDCNs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ServedDCNs
{
	SI_LinkedList * ServedDCNsItem;
} SI_S1AP_DT_ServedDCNs;


// RelativeMMECapacity
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_RelativeMMECapacity
{
	unsigned long long int data;
} SI_S1AP_DT_RelativeMMECapacity;

// ServedDCNsItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ServedDCNsItem
{
	unsigned long long int dCN_ID;

	unsigned long long int relativeDCNCapacity;

} SI_S1AP_DT_ServedDCNsItem;


// DL-NAS-MAC
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_DL_NAS_MAC
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_DL_NAS_MAC;

// DL-CP-SecurityInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_DL_CP_SecurityInformation
{
	SI_S1AP_DT_DL_NAS_MAC * dl_NAS_MAC;

} SI_S1AP_DT_DL_CP_SecurityInformation;


// DL-Forwarding
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_DL_Forwarding
{
	__si_s1ap__DL_Forwarding_dL_Forwarding_proposed_val
} SI_S1AP_DT_DL_Forwarding;


// L:2561
typedef enum __si_s1ap_dt_DL_Forwarding2
{
	DL_Forwarding_dL_Forwarding_proposed_val
} SI_S1AP_DT_DL_Forwarding2;


// L:2588
typedef struct __si_s1ap_dt_DL_Forwarding_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_DL_Forwarding_EnumProxy;


// Direct-Forwarding-Path-Availability
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Direct_Forwarding_Path_Availability
{
	__si_s1ap__Direct_Forwarding_Path_Availability_directPathAvailable_val
} SI_S1AP_DT_Direct_Forwarding_Path_Availability;


// L:2561
typedef enum __si_s1ap_dt_Direct_Forwarding_Path_Availability2
{
	Direct_Forwarding_Path_Availability_directPathAvailable_val
} SI_S1AP_DT_Direct_Forwarding_Path_Availability2;


// L:2588
typedef struct __si_s1ap_dt_Direct_Forwarding_Path_Availability_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Direct_Forwarding_Path_Availability_EnumProxy;


// Data-Forwarding-Not-Possible
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Data_Forwarding_Not_Possible
{
	__si_s1ap__Data_Forwarding_Not_Possible_data_Forwarding_not_Possible_val
} SI_S1AP_DT_Data_Forwarding_Not_Possible;


// L:2561
typedef enum __si_s1ap_dt_Data_Forwarding_Not_Possible2
{
	Data_Forwarding_Not_Possible_data_Forwarding_not_Possible_val
} SI_S1AP_DT_Data_Forwarding_Not_Possible2;


// L:2588
typedef struct __si_s1ap_dt_Data_Forwarding_Not_Possible_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Data_Forwarding_Not_Possible_EnumProxy;


// DLNASPDUDeliveryAckRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_DLNASPDUDeliveryAckRequest
{
	__si_s1ap__DLNASPDUDeliveryAckRequest_requested_val
} SI_S1AP_DT_DLNASPDUDeliveryAckRequest;


// L:2561
typedef enum __si_s1ap_dt_DLNASPDUDeliveryAckRequest2
{
	DLNASPDUDeliveryAckRequest_requested_val
} SI_S1AP_DT_DLNASPDUDeliveryAckRequest2;


// L:2588
typedef struct __si_s1ap_dt_DLNASPDUDeliveryAckRequest_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_DLNASPDUDeliveryAckRequest_EnumProxy;


// EARFCN
// INTEGER,INTEGER(0..maxEARFCN,...),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_EARFCN
{
	unsigned long long int data;
} SI_S1AP_DT_EARFCN;

// ECGIList
//SEQUENCE OF EUTRAN-CGI, MIN=1, MAX=maxnoofCellID  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ECGIList
{
	SI_LinkedList * EUTRAN_CGI;
} SI_S1AP_DT_ECGIList;


// PWSfailedECGIList
//SEQUENCE OF EUTRAN-CGI, MIN=1, MAX=maxnoofCellsineNB  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_PWSfailedECGIList
{
	SI_LinkedList * EUTRAN_CGI;
} SI_S1AP_DT_PWSfailedECGIList;


// EDT-Session
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_EDT_Session
{
	__si_s1ap__EDT_Session_true_val
} SI_S1AP_DT_EDT_Session;


// L:2561
typedef enum __si_s1ap_dt_EDT_Session2
{
	EDT_Session_true_val
} SI_S1AP_DT_EDT_Session2;


// L:2588
typedef struct __si_s1ap_dt_EDT_Session_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_EDT_Session_EnumProxy;


// EmergencyAreaIDList
//SEQUENCE OF EmergencyAreaID, MIN=1, MAX=maxnoofEmergencyAreaID  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_EmergencyAreaIDList
{
	SI_LinkedList * EmergencyAreaID;
} SI_S1AP_DT_EmergencyAreaIDList;


// EmergencyAreaID
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_EmergencyAreaID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_EmergencyAreaID;

// CompletedCellinEAI
//SEQUENCE OF CompletedCellinEAI-Item, MIN=1, MAX=maxnoofCellinEAI  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CompletedCellinEAI
{
	SI_LinkedList * CompletedCellinEAI_Item;
} SI_S1AP_DT_CompletedCellinEAI;


// EmergencyAreaID-Broadcast-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_EmergencyAreaID_Broadcast_Item
{
	SI_S1AP_DT_EmergencyAreaID * emergencyAreaID;

	SI_S1AP_DT_CompletedCellinEAI * completedCellinEAI;

} SI_S1AP_DT_EmergencyAreaID_Broadcast_Item;


// EmergencyAreaID-Cancelled-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_EmergencyAreaID_Cancelled_Item
{
	SI_S1AP_DT_EmergencyAreaID * emergencyAreaID;

	SI_S1AP_DT_CancelledCellinEAI * cancelledCellinEAI;

} SI_S1AP_DT_EmergencyAreaID_Cancelled_Item;


// CompletedCellinEAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CompletedCellinEAI_Item
{
	SI_S1AP_DT_EUTRAN_CGI * eCGI;

} SI_S1AP_DT_CompletedCellinEAI_Item;


// ECGI-List
//SEQUENCE OF EUTRAN-CGI, MIN=1, MAX=maxnoofCellsineNB  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ECGI_List
{
	SI_LinkedList * EUTRAN_CGI;
} SI_S1AP_DT_ECGI_List;


// EmergencyAreaIDListForRestart
//SEQUENCE OF EmergencyAreaID, MIN=1, MAX=maxnoofRestartEmergencyAreaIDs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_EmergencyAreaIDListForRestart
{
	SI_LinkedList * EmergencyAreaID;
} SI_S1AP_DT_EmergencyAreaIDListForRestart;


// EmergencyIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_EmergencyIndicator
{
	__si_s1ap__EmergencyIndicator_true_val
} SI_S1AP_DT_EmergencyIndicator;


// L:2561
typedef enum __si_s1ap_dt_EmergencyIndicator2
{
	EmergencyIndicator_true_val
} SI_S1AP_DT_EmergencyIndicator2;


// L:2588
typedef struct __si_s1ap_dt_EmergencyIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_EmergencyIndicator_EnumProxy;


// ENB-EarlyStatusTransfer-TransparentContainer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ENB_EarlyStatusTransfer_TransparentContainer
{
	SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransferList * bearers_SubjectToEarlyStatusTransferList;

} SI_S1AP_DT_ENB_EarlyStatusTransfer_TransparentContainer;


// LAI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_LAI
{
	SI_S1AP_DT_PLMNidentity * pLMNidentity;

	SI_S1AP_DT_LAC * lAC;

} SI_S1AP_DT_LAI;


// GERAN-Cell-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_GERAN_Cell_ID
{
	SI_S1AP_DT_LAI * lAI;

	SI_S1AP_DT_RAC * rAC;

	SI_S1AP_DT_CI * cI;

} SI_S1AP_DT_GERAN_Cell_ID;


// Global-en-gNB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Global_en_gNB_ID
{
	SI_S1AP_DT_PLMNidentity * pLMNidentity;

	SI_S1AP_DT_En_gNB_ID * en_gNB_ID;

} SI_S1AP_DT_Global_en_gNB_ID;


// GUMMEIList
//SEQUENCE OF GUMMEI, MIN=1, MAX= maxnoofMMECs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_GUMMEIList
{
	SI_LinkedList * GUMMEI;
} SI_S1AP_DT_GUMMEIList;


// ENB-StatusTransfer-TransparentContainer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ENB_StatusTransfer_TransparentContainer
{
	SI_S1AP_DT_Bearers_SubjectToStatusTransferList * bearers_SubjectToStatusTransferList;

} SI_S1AP_DT_ENB_StatusTransfer_TransparentContainer;


// ENB-UE-S1AP-ID
// INTEGER,INTEGER(0..16777215),MIN=0,MAX=16777215  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ENB_UE_S1AP_ID
{
	unsigned long long int data;
} SI_S1AP_DT_ENB_UE_S1AP_ID;

// ENBname
// PrintableString,PrintableString(SIZE(1..150,...))
// ADT=0  DT=2
// L:6261
typedef struct __si_s1ap_dt_ENBname
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_ENBname;

// ENBX2TLAs
//SEQUENCE OF TransportLayerAddress, MIN=1, MAX= maxnoofeNBX2TLAs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ENBX2TLAs
{
	SI_LinkedList * TransportLayerAddress;
} SI_S1AP_DT_ENBX2TLAs;


// EncryptionAlgorithms
// BITSTRING,BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_EncryptionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_EncryptionAlgorithms;

// TAC
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_TAC
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_TAC;

// TAI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TAI
{
	SI_S1AP_DT_PLMNidentity * pLMNidentity;

	SI_S1AP_DT_TAC * tAC;

} SI_S1AP_DT_TAI;


// EN-DCSONeNBIdentification
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_EN_DCSONeNBIdentification
{
	SI_S1AP_DT_Global_ENB_ID * globaleNBID;

	SI_S1AP_DT_TAI * selectedTAI;

} SI_S1AP_DT_EN_DCSONeNBIdentification;


// EN-DCSONengNBIdentification
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_EN_DCSONengNBIdentification
{
	SI_S1AP_DT_Global_en_gNB_ID * globalengNBID;

	SI_S1AP_DT_TAI * selectedTAI;

} SI_S1AP_DT_EN_DCSONengNBIdentification;


// FiveGSTAC
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_FiveGSTAC
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_FiveGSTAC;

// FiveGSTAI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_FiveGSTAI
{
	SI_S1AP_DT_PLMNidentity * pLMNidentity;

	SI_S1AP_DT_FiveGSTAC * fiveGSTAC;

} SI_S1AP_DT_FiveGSTAI;


// EN-DCTransferTypeRequest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_EN_DCTransferTypeRequest
{
	SI_S1AP_DT_EN_DCSONeNBIdentification * sourceeNB;

	SI_S1AP_DT_EN_DCSONengNBIdentification * targetengNB;

	SI_S1AP_DT_EN_DCSONeNBIdentification * targeteNB;
	int isPresent_targeteNB;

	SI_S1AP_DT_TAI * associatedTAI;
	int isPresent_associatedTAI;

	SI_S1AP_DT_FiveGSTAI * broadcast5GSTAI;
	int isPresent_broadcast5GSTAI;

} SI_S1AP_DT_EN_DCTransferTypeRequest;


// EN-DCTransferTypeReply
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_EN_DCTransferTypeReply
{
	SI_S1AP_DT_EN_DCSONengNBIdentification * sourceengNB;

	SI_S1AP_DT_EN_DCSONeNBIdentification * targeteNB;

} SI_S1AP_DT_EN_DCTransferTypeReply;


// EN-DCSONTransferType
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_EN_DCSONTransferType
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_EN_DCTransferTypeRequest * request;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_EN_DCTransferTypeReply * reply;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_EN_DCSONTransferType;


// SONInformationRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SONInformationRequest
{
	__si_s1ap__SONInformationRequest_x2TNL_Configuration_Info_val,
	__si_s1ap__SONInformationRequest_time_Synchronisation_Info_val_ext,
	__si_s1ap__SONInformationRequest_activate_Muting_val_ext,
	__si_s1ap__SONInformationRequest_deactivate_Muting_val_ext
} SI_S1AP_DT_SONInformationRequest;


// L:2561
typedef enum __si_s1ap_dt_SONInformationRequest2
{
	SONInformationRequest_x2TNL_Configuration_Info_val,
	SONInformationRequest_time_Synchronisation_Info_val_ext,
	SONInformationRequest_activate_Muting_val_ext,
	SONInformationRequest_deactivate_Muting_val_ext
} SI_S1AP_DT_SONInformationRequest2;


// L:2588
typedef struct __si_s1ap_dt_SONInformationRequest_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SONInformationRequest_EnumProxy;


// X2TNLConfigurationInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_X2TNLConfigurationInfo
{
	SI_S1AP_DT_ENBX2TLAs * eNBX2TransportLayerAddresses;

} SI_S1AP_DT_X2TNLConfigurationInfo;


// SONInformationReply
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SONInformationReply
{
	SI_S1AP_DT_X2TNLConfigurationInfo * x2TNLConfigurationInfo;
	int isPresent_x2TNLConfigurationInfo;

} SI_S1AP_DT_SONInformationReply;


//TODO: DataType ->SONInformation-ExtensionIE<- Got NULL  L:7941

// SONInformation-Extension
// ADT=0  DT=1 Container
// L:4288
typedef struct __si_s1ap_dt_SONInformation_Extension
{
	// Got SingleContainer L:4310
	//SI_S1AP_DT_SONInformation_ExtensionIE * sONInformationExtensionIE;
} SI_S1AP_DT_SONInformation_Extension;


// SONInformation
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_SONInformation
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t sONInformationRequest;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_SONInformationReply * sONInformationReply;

		// ParserName = CONTAINER - NonEP false;
		SI_S1AP_DT_SONInformation_Extension * sONInformation_Extension_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_SONInformation;


// EN-DCSONConfigurationTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_EN_DCSONConfigurationTransfer
{
	SI_S1AP_DT_EN_DCSONTransferType * transfertype;

	SI_S1AP_DT_SONInformation * sONInformation;

	SI_S1AP_DT_X2TNLConfigurationInfo * x2TNLConfigInfo;
	int isPresent_x2TNLConfigInfo;

} SI_S1AP_DT_EN_DCSONConfigurationTransfer;


// EndIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_EndIndication
{
	__si_s1ap__EndIndication_no_further_data_val,
	__si_s1ap__EndIndication_further_data_exists_val
} SI_S1AP_DT_EndIndication;


// L:2561
typedef enum __si_s1ap_dt_EndIndication2
{
	EndIndication_no_further_data_val,
	EndIndication_further_data_exists_val
} SI_S1AP_DT_EndIndication2;


// L:2588
typedef struct __si_s1ap_dt_EndIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_EndIndication_EnumProxy;


// EnhancedCoverageRestricted
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_EnhancedCoverageRestricted
{
	__si_s1ap__EnhancedCoverageRestricted_restricted_val
} SI_S1AP_DT_EnhancedCoverageRestricted;


// L:2561
typedef enum __si_s1ap_dt_EnhancedCoverageRestricted2
{
	EnhancedCoverageRestricted_restricted_val
} SI_S1AP_DT_EnhancedCoverageRestricted2;


// L:2588
typedef struct __si_s1ap_dt_EnhancedCoverageRestricted_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_EnhancedCoverageRestricted_EnumProxy;


// CE-ModeBRestricted
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_CE_ModeBRestricted
{
	__si_s1ap__CE_ModeBRestricted_restricted_val,
	__si_s1ap__CE_ModeBRestricted_not_restricted_val
} SI_S1AP_DT_CE_ModeBRestricted;


// L:2561
typedef enum __si_s1ap_dt_CE_ModeBRestricted2
{
	CE_ModeBRestricted_restricted_val,
	CE_ModeBRestricted_not_restricted_val
} SI_S1AP_DT_CE_ModeBRestricted2;


// L:2588
typedef struct __si_s1ap_dt_CE_ModeBRestricted_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_CE_ModeBRestricted_EnumProxy;


// EPLMNs
//SEQUENCE OF PLMNidentity, MIN=1, MAX=maxnoofEPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_EPLMNs
{
	SI_LinkedList * PLMNidentity;
} SI_S1AP_DT_EPLMNs;


// EventType
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_EventType
{
	__si_s1ap__EventType_direct_val,
	__si_s1ap__EventType_change_of_serve_cell_val,
	__si_s1ap__EventType_stop_change_of_serve_cell_val
} SI_S1AP_DT_EventType;


// L:2561
typedef enum __si_s1ap_dt_EventType2
{
	EventType_direct_val,
	EventType_change_of_serve_cell_val,
	EventType_stop_change_of_serve_cell_val
} SI_S1AP_DT_EventType2;


// L:2588
typedef struct __si_s1ap_dt_EventType_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_EventType_EnumProxy;


// E-RABInformationList
//SEQUENCE OF ProtocolIE-SingleContainer{{E-RABInformationListIEs } }, MIN=1, MAX= maxnoofE-RABs  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_E_RABInformationList
{
	SI_LinkedList * list;
} SI_S1AP_DT_E_RABInformationList;


// E-RABInformationListItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABInformationListItem
{
	unsigned long long int e_RAB_ID;

	uint8_t selected_edL_Forwarding;
	int extSelected_edL_Forwarding;
	int isPresent_dL_Forwarding;

} SI_S1AP_DT_E_RABInformationListItem;


// E-RABInformationListIEs
// ADT=2  DT=3 Container
// L:4288
typedef struct __si_s1ap_dt_E_RABInformationListIEs
{
	// Got Success L:4324
	//E-RABInformationListItem,  mandatory
	SI_S1AP_DT_E_RABInformationListItem * eRABInformationListItem;
	int isPresent_eRABInformationListItem;

} SI_S1AP_DT_E_RABInformationListIEs;


// E-RABList
//SEQUENCE OF ProtocolIE-SingleContainer{{E-RABItemIEs} }, MIN=1, MAX= maxnoofE-RABs  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_E_RABList
{
	SI_LinkedList * list;
} SI_S1AP_DT_E_RABList;


// E-RABItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABItem
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_Cause * cause;

} SI_S1AP_DT_E_RABItem;


// QCI
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_QCI
{
	unsigned long long int data;
} SI_S1AP_DT_QCI;

// GBR-QosInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_GBR_QosInformation
{
	unsigned long long int e_RAB_MaximumBitrateDL;

	unsigned long long int e_RAB_MaximumBitrateUL;

	unsigned long long int e_RAB_GuaranteedBitrateDL;

	unsigned long long int e_RAB_GuaranteedBitrateUL;

} SI_S1AP_DT_GBR_QosInformation;


// E-RABLevelQoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABLevelQoSParameters
{
	unsigned long long int qCI;

	SI_S1AP_DT_AllocationAndRetentionPriority * allocationRetentionPriority;

	SI_S1AP_DT_GBR_QosInformation * gbrQosInformation;
	int isPresent_gbrQosInformation;

} SI_S1AP_DT_E_RABLevelQoSParameters;


// E-RABSecurityResultList
//SEQUENCE OF ProtocolIE-SingleContainer{{E-RABSecurityResultListIEs } }, MIN=1, MAX= maxnoofE-RABs  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_E_RABSecurityResultList
{
	SI_LinkedList * list;
} SI_S1AP_DT_E_RABSecurityResultList;


// IntegrityProtectionResult
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_IntegrityProtectionResult
{
	__si_s1ap__IntegrityProtectionResult_performed_val,
	__si_s1ap__IntegrityProtectionResult_not_performed_val
} SI_S1AP_DT_IntegrityProtectionResult;


// L:2561
typedef enum __si_s1ap_dt_IntegrityProtectionResult2
{
	IntegrityProtectionResult_performed_val,
	IntegrityProtectionResult_not_performed_val
} SI_S1AP_DT_IntegrityProtectionResult2;


// L:2588
typedef struct __si_s1ap_dt_IntegrityProtectionResult_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_IntegrityProtectionResult_EnumProxy;


// SecurityResult
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SecurityResult
{
	uint8_t selected_eintegrityProtectionResult;
	int extSelected_eintegrityProtectionResult;

} SI_S1AP_DT_SecurityResult;


// E-RABSecurityResultItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABSecurityResultItem
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_SecurityResult * securityResult;

} SI_S1AP_DT_E_RABSecurityResultItem;


// E-RABSecurityResultListIEs
// ADT=2  DT=3 Container
// L:4288
typedef struct __si_s1ap_dt_E_RABSecurityResultListIEs
{
	// Got Success L:4324
	//E-RABSecurityResultItem,  mandatory
	SI_S1AP_DT_E_RABSecurityResultItem * eRABSecurityResultItem;
	int isPresent_eRABSecurityResultItem;

} SI_S1AP_DT_E_RABSecurityResultListIEs;


// E-RABUsageReportList
//SEQUENCE OF ProtocolIE-SingleContainer{{E-RABUsageReportItemIEs} }, MIN=1, MAX=maxnooftimeperiods  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_E_RABUsageReportList
{
	SI_LinkedList * list;
} SI_S1AP_DT_E_RABUsageReportList;


// ERABUsageReportItem_startTimestamp
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_ERABUsageReportItem_startTimestamp
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_ERABUsageReportItem_startTimestamp;

// ERABUsageReportItem_endTimestamp
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_ERABUsageReportItem_endTimestamp
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_ERABUsageReportItem_endTimestamp;

// ERABUsageReportItem_usageCountUL
// INTEGER,INTEGER(0..18446744073709551615),MIN=0,MAX=18446744073709552000  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ERABUsageReportItem_usageCountUL
{
	unsigned long long int data;
} SI_S1AP_DT_ERABUsageReportItem_usageCountUL;

// ERABUsageReportItem_usageCountDL
// INTEGER,INTEGER(0..18446744073709551615),MIN=0,MAX=18446744073709552000  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ERABUsageReportItem_usageCountDL
{
	unsigned long long int data;
} SI_S1AP_DT_ERABUsageReportItem_usageCountDL;

// E-RABUsageReportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABUsageReportItem
{
	SI_S1AP_DT_ERABUsageReportItem_startTimestamp * startTimestamp;

	SI_S1AP_DT_ERABUsageReportItem_endTimestamp * endTimestamp;

	unsigned long long int usageCountUL;

	unsigned long long int usageCountDL;

} SI_S1AP_DT_E_RABUsageReportItem;


// Ethernet-Type
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Ethernet_Type
{
	__si_s1ap__Ethernet_Type_true_val
} SI_S1AP_DT_Ethernet_Type;


// L:2561
typedef enum __si_s1ap_dt_Ethernet_Type2
{
	Ethernet_Type_true_val
} SI_S1AP_DT_Ethernet_Type2;


// L:2588
typedef struct __si_s1ap_dt_Ethernet_Type_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Ethernet_Type_EnumProxy;


// EUTRANRoundTripDelayEstimationInfo
// INTEGER,INTEGER(0..2047),MIN=0,MAX=2047  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_EUTRANRoundTripDelayEstimationInfo
{
	unsigned long long int data;
} SI_S1AP_DT_EUTRANRoundTripDelayEstimationInfo;

// Threshold-RSRP
// INTEGER,INTEGER(0..97),MIN=0,MAX=97  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_Threshold_RSRP
{
	unsigned long long int data;
} SI_S1AP_DT_Threshold_RSRP;

// Threshold-RSRQ
// INTEGER,INTEGER(0..34),MIN=0,MAX=34  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_Threshold_RSRQ
{
	unsigned long long int data;
} SI_S1AP_DT_Threshold_RSRQ;

// MeasurementThresholdL1LoggedMDT
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_MeasurementThresholdL1LoggedMDT
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRP;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRQ;

		// ParserName =  - NonEP true;
		SI_S1AP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_MeasurementThresholdL1LoggedMDT;


// Hysteresis
// INTEGER,INTEGER(0..30),MIN=0,MAX=30  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_Hysteresis
{
	unsigned long long int data;
} SI_S1AP_DT_Hysteresis;

// TimeToTrigger
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_TimeToTrigger
{
	__si_s1ap__TimeToTrigger_ms0_val,
	__si_s1ap__TimeToTrigger_ms40_val,
	__si_s1ap__TimeToTrigger_ms64_val,
	__si_s1ap__TimeToTrigger_ms80_val,
	__si_s1ap__TimeToTrigger_ms100_val,
	__si_s1ap__TimeToTrigger_ms128_val,
	__si_s1ap__TimeToTrigger_ms160_val,
	__si_s1ap__TimeToTrigger_ms256_val,
	__si_s1ap__TimeToTrigger_ms320_val,
	__si_s1ap__TimeToTrigger_ms480_val,
	__si_s1ap__TimeToTrigger_ms512_val,
	__si_s1ap__TimeToTrigger_ms640_val,
	__si_s1ap__TimeToTrigger_ms1024_val,
	__si_s1ap__TimeToTrigger_ms1280_val,
	__si_s1ap__TimeToTrigger_ms2560_val,
	__si_s1ap__TimeToTrigger_ms5120_val
} SI_S1AP_DT_TimeToTrigger;


// L:2561
typedef enum __si_s1ap_dt_TimeToTrigger2
{
	TimeToTrigger_ms0_val,
	TimeToTrigger_ms40_val,
	TimeToTrigger_ms64_val,
	TimeToTrigger_ms80_val,
	TimeToTrigger_ms100_val,
	TimeToTrigger_ms128_val,
	TimeToTrigger_ms160_val,
	TimeToTrigger_ms256_val,
	TimeToTrigger_ms320_val,
	TimeToTrigger_ms480_val,
	TimeToTrigger_ms512_val,
	TimeToTrigger_ms640_val,
	TimeToTrigger_ms1024_val,
	TimeToTrigger_ms1280_val,
	TimeToTrigger_ms2560_val,
	TimeToTrigger_ms5120_val
} SI_S1AP_DT_TimeToTrigger2;


// L:2588
typedef struct __si_s1ap_dt_TimeToTrigger_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_TimeToTrigger_EnumProxy;


// EventL1LoggedMDTConfig
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_EventL1LoggedMDTConfig
{
	SI_S1AP_DT_MeasurementThresholdL1LoggedMDT * l1Threshold;

	unsigned long long int hysteresis;

	uint8_t selected_etimeToTrigger;
	int extSelected_etimeToTrigger;

} SI_S1AP_DT_EventL1LoggedMDTConfig;


// EventTrigger_outOfCoverage
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_EventTrigger_outOfCoverage
{
	__si_s1ap__EventTrigger_outOfCoverage_true_val
} SI_S1AP_DT_EventTrigger_outOfCoverage;


// L:2561
typedef enum __si_s1ap_dt_EventTrigger_outOfCoverage2
{
	EventTrigger_outOfCoverage_true_val
} SI_S1AP_DT_EventTrigger_outOfCoverage2;


// L:2588
typedef struct __si_s1ap_dt_EventTrigger_outOfCoverage_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_EventTrigger_outOfCoverage_EnumProxy;


// EventTrigger
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_EventTrigger
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t outOfCoverage;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_EventL1LoggedMDTConfig * eventL1LoggedMDTConfig;

		// ParserName =  - NonEP true;
		SI_S1AP_DT_PDU_EventTrigger_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_EventTrigger;


// ExpectedActivityPeriod
// INTEGER,INTEGER(1..30|40|50|60|80|100|120|150|180|181,...),MIN=1,MAX=30  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ExpectedActivityPeriod
{
	unsigned long long int data;
} SI_S1AP_DT_ExpectedActivityPeriod;

// ExpectedIdlePeriod
// INTEGER,INTEGER(1..30|40|50|60|80|100|120|150|180|181,...),MIN=1,MAX=30  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ExpectedIdlePeriod
{
	unsigned long long int data;
} SI_S1AP_DT_ExpectedIdlePeriod;

// SourceOfUEActivityBehaviourInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SourceOfUEActivityBehaviourInformation
{
	__si_s1ap__SourceOfUEActivityBehaviourInformation_subscription_information_val,
	__si_s1ap__SourceOfUEActivityBehaviourInformation_statistics_val
} SI_S1AP_DT_SourceOfUEActivityBehaviourInformation;


// L:2561
typedef enum __si_s1ap_dt_SourceOfUEActivityBehaviourInformation2
{
	SourceOfUEActivityBehaviourInformation_subscription_information_val,
	SourceOfUEActivityBehaviourInformation_statistics_val
} SI_S1AP_DT_SourceOfUEActivityBehaviourInformation2;


// L:2588
typedef struct __si_s1ap_dt_SourceOfUEActivityBehaviourInformation_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SourceOfUEActivityBehaviourInformation_EnumProxy;


// ExpectedUEActivityBehaviour
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ExpectedUEActivityBehaviour
{
	unsigned long long int expectedActivityPeriod;
	int isPresent_expectedActivityPeriod;

	unsigned long long int expectedIdlePeriod;
	int isPresent_expectedIdlePeriod;

	uint8_t selected_esourceofUEActivityBehaviourInformation;
	int extSelected_esourceofUEActivityBehaviourInformation;
	int isPresent_sourceofUEActivityBehaviourInformation;

} SI_S1AP_DT_ExpectedUEActivityBehaviour;


// ExpectedHOInterval
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ExpectedHOInterval
{
	__si_s1ap__ExpectedHOInterval_sec15_val,
	__si_s1ap__ExpectedHOInterval_sec30_val,
	__si_s1ap__ExpectedHOInterval_sec60_val,
	__si_s1ap__ExpectedHOInterval_sec90_val,
	__si_s1ap__ExpectedHOInterval_sec120_val,
	__si_s1ap__ExpectedHOInterval_sec180_val,
	__si_s1ap__ExpectedHOInterval_long_time_val
} SI_S1AP_DT_ExpectedHOInterval;


// L:2561
typedef enum __si_s1ap_dt_ExpectedHOInterval2
{
	ExpectedHOInterval_sec15_val,
	ExpectedHOInterval_sec30_val,
	ExpectedHOInterval_sec60_val,
	ExpectedHOInterval_sec90_val,
	ExpectedHOInterval_sec120_val,
	ExpectedHOInterval_sec180_val,
	ExpectedHOInterval_long_time_val
} SI_S1AP_DT_ExpectedHOInterval2;


// L:2588
typedef struct __si_s1ap_dt_ExpectedHOInterval_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ExpectedHOInterval_EnumProxy;


// ExpectedUEBehaviour
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ExpectedUEBehaviour
{
	SI_S1AP_DT_ExpectedUEActivityBehaviour * expectedActivity;
	int isPresent_expectedActivity;

	uint8_t selected_eexpectedHOInterval;
	int extSelected_eexpectedHOInterval;
	int isPresent_expectedHOInterval;

} SI_S1AP_DT_ExpectedUEBehaviour;


// ExtendedBitRate
// INTEGER,INTEGER(10000000001..4000000000000,...),MIN=10000000001,MAX=4000000000000  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ExtendedBitRate
{
	unsigned long long int data;
} SI_S1AP_DT_ExtendedBitRate;

// ExtendedRNC-ID
// INTEGER,INTEGER(4096..65535),MIN=4096,MAX=65535  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ExtendedRNC_ID
{
	unsigned long long int data;
} SI_S1AP_DT_ExtendedRNC_ID;

// ExtendedRepetitionPeriod
// INTEGER,INTEGER(4096..131071),MIN=4096,MAX=131071  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ExtendedRepetitionPeriod
{
	unsigned long long int data;
} SI_S1AP_DT_ExtendedRepetitionPeriod;

// Extended-UEIdentityIndexValue
// BITSTRING,BIT STRING(SIZE(14))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_Extended_UEIdentityIndexValue
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_Extended_UEIdentityIndexValue;

// FiveQI
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_FiveQI
{
	unsigned long long int data;
} SI_S1AP_DT_FiveQI;

// ForbiddenInterRATs
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ForbiddenInterRATs
{
	__si_s1ap__ForbiddenInterRATs_all_val,
	__si_s1ap__ForbiddenInterRATs_geran_val,
	__si_s1ap__ForbiddenInterRATs_utran_val,
	__si_s1ap__ForbiddenInterRATs_cdma2000_val,
	__si_s1ap__ForbiddenInterRATs_geranandutran_val_ext,
	__si_s1ap__ForbiddenInterRATs_cdma2000andutran_val_ext
} SI_S1AP_DT_ForbiddenInterRATs;


// L:2561
typedef enum __si_s1ap_dt_ForbiddenInterRATs2
{
	ForbiddenInterRATs_all_val,
	ForbiddenInterRATs_geran_val,
	ForbiddenInterRATs_utran_val,
	ForbiddenInterRATs_cdma2000_val,
	ForbiddenInterRATs_geranandutran_val_ext,
	ForbiddenInterRATs_cdma2000andutran_val_ext
} SI_S1AP_DT_ForbiddenInterRATs2;


// L:2588
typedef struct __si_s1ap_dt_ForbiddenInterRATs_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ForbiddenInterRATs_EnumProxy;


// ForbiddenTAs
//SEQUENCE OF ForbiddenTAs-Item, MIN=1, MAX= maxnoofEPLMNsPlusOne  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ForbiddenTAs
{
	SI_LinkedList * ForbiddenTAs_Item;
} SI_S1AP_DT_ForbiddenTAs;


// ForbiddenTACs
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofForbTACs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ForbiddenTACs
{
	SI_LinkedList * TAC;
} SI_S1AP_DT_ForbiddenTACs;


// ForbiddenTAs-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ForbiddenTAs_Item
{
	SI_S1AP_DT_PLMNidentity * pLMN_Identity;

	SI_S1AP_DT_ForbiddenTACs * forbiddenTACs;

} SI_S1AP_DT_ForbiddenTAs_Item;


// ForbiddenLAs
//SEQUENCE OF ForbiddenLAs-Item, MIN=1, MAX=maxnoofEPLMNsPlusOne  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ForbiddenLAs
{
	SI_LinkedList * ForbiddenLAs_Item;
} SI_S1AP_DT_ForbiddenLAs;


// ForbiddenLACs
//SEQUENCE OF LAC, MIN=1, MAX=maxnoofForbLACs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ForbiddenLACs
{
	SI_LinkedList * LAC;
} SI_S1AP_DT_ForbiddenLACs;


// ForbiddenLAs-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ForbiddenLAs_Item
{
	SI_S1AP_DT_PLMNidentity * pLMN_Identity;

	SI_S1AP_DT_ForbiddenLACs * forbiddenLACs;

} SI_S1AP_DT_ForbiddenLAs_Item;


// GTP-TEID
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_GTP_TEID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_GTP_TEID;

// GUMMEIType
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_GUMMEIType
{
	__si_s1ap__GUMMEIType_native_val,
	__si_s1ap__GUMMEIType_mapped_val,
	__si_s1ap__GUMMEIType_mappedFrom5G_val_ext
} SI_S1AP_DT_GUMMEIType;


// L:2561
typedef enum __si_s1ap_dt_GUMMEIType2
{
	GUMMEIType_native_val,
	GUMMEIType_mapped_val,
	GUMMEIType_mappedFrom5G_val_ext
} SI_S1AP_DT_GUMMEIType2;


// L:2588
typedef struct __si_s1ap_dt_GUMMEIType_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_GUMMEIType_EnumProxy;


// GWContextReleaseIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_GWContextReleaseIndication
{
	__si_s1ap__GWContextReleaseIndication_true_val
} SI_S1AP_DT_GWContextReleaseIndication;


// L:2561
typedef enum __si_s1ap_dt_GWContextReleaseIndication2
{
	GWContextReleaseIndication_true_val
} SI_S1AP_DT_GWContextReleaseIndication2;


// L:2588
typedef struct __si_s1ap_dt_GWContextReleaseIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_GWContextReleaseIndication_EnumProxy;


// HandoverFlag
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_HandoverFlag
{
	__si_s1ap__HandoverFlag_handoverPreparation_val
} SI_S1AP_DT_HandoverFlag;


// L:2561
typedef enum __si_s1ap_dt_HandoverFlag2
{
	HandoverFlag_handoverPreparation_val
} SI_S1AP_DT_HandoverFlag2;


// L:2588
typedef struct __si_s1ap_dt_HandoverFlag_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_HandoverFlag_EnumProxy;


// HandoverRestrictionList
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_HandoverRestrictionList
{
	SI_S1AP_DT_PLMNidentity * servingPLMN;

	SI_S1AP_DT_EPLMNs * equivalentPLMNs;
	int isPresent_equivalentPLMNs;

	SI_S1AP_DT_ForbiddenTAs * forbiddenTAs;
	int isPresent_forbiddenTAs;

	SI_S1AP_DT_ForbiddenLAs * forbiddenLAs;
	int isPresent_forbiddenLAs;

	uint8_t selected_eforbiddenInterRATs;
	int extSelected_eforbiddenInterRATs;
	int isPresent_forbiddenInterRATs;

} SI_S1AP_DT_HandoverRestrictionList;


// HandoverType
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_HandoverType
{
	__si_s1ap__HandoverType_intralte_val,
	__si_s1ap__HandoverType_ltetoutran_val,
	__si_s1ap__HandoverType_ltetogeran_val,
	__si_s1ap__HandoverType_utrantolte_val,
	__si_s1ap__HandoverType_gerantolte_val,
	__si_s1ap__HandoverType_eps_to_5gs_val_ext,
	__si_s1ap__HandoverType_fivegs_to_eps_val_ext
} SI_S1AP_DT_HandoverType;


// L:2561
typedef enum __si_s1ap_dt_HandoverType2
{
	HandoverType_intralte_val,
	HandoverType_ltetoutran_val,
	HandoverType_ltetogeran_val,
	HandoverType_utrantolte_val,
	HandoverType_gerantolte_val,
	HandoverType_eps_to_5gs_val_ext,
	HandoverType_fivegs_to_eps_val_ext
} SI_S1AP_DT_HandoverType2;


// L:2588
typedef struct __si_s1ap_dt_HandoverType_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_HandoverType_EnumProxy;


// Masked-IMEISV
// BITSTRING,BIT STRING(SIZE(64))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_Masked_IMEISV
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_Masked_IMEISV;

// MeasurementsToActivate
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_MeasurementsToActivate
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_MeasurementsToActivate;

// M1ReportingTrigger
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M1ReportingTrigger
{
	__si_s1ap__M1ReportingTrigger_periodic_val,
	__si_s1ap__M1ReportingTrigger_a2eventtriggered_val,
	__si_s1ap__M1ReportingTrigger_a2eventtriggered_periodic_val_ext
} SI_S1AP_DT_M1ReportingTrigger;


// L:2561
typedef enum __si_s1ap_dt_M1ReportingTrigger2
{
	M1ReportingTrigger_periodic_val,
	M1ReportingTrigger_a2eventtriggered_val,
	M1ReportingTrigger_a2eventtriggered_periodic_val_ext
} SI_S1AP_DT_M1ReportingTrigger2;


// L:2588
typedef struct __si_s1ap_dt_M1ReportingTrigger_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M1ReportingTrigger_EnumProxy;


// MeasurementThresholdA2
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_MeasurementThresholdA2
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRP;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRQ;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_MeasurementThresholdA2;


// M1ThresholdEventA2
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_M1ThresholdEventA2
{
	SI_S1AP_DT_MeasurementThresholdA2 * measurementThreshold;

} SI_S1AP_DT_M1ThresholdEventA2;


// ReportIntervalMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ReportIntervalMDT
{
	__si_s1ap__ReportIntervalMDT_ms120_val,
	__si_s1ap__ReportIntervalMDT_ms240_val,
	__si_s1ap__ReportIntervalMDT_ms480_val,
	__si_s1ap__ReportIntervalMDT_ms640_val,
	__si_s1ap__ReportIntervalMDT_ms1024_val,
	__si_s1ap__ReportIntervalMDT_ms2048_val,
	__si_s1ap__ReportIntervalMDT_ms5120_val,
	__si_s1ap__ReportIntervalMDT_ms10240_val,
	__si_s1ap__ReportIntervalMDT_min1_val,
	__si_s1ap__ReportIntervalMDT_min6_val,
	__si_s1ap__ReportIntervalMDT_min12_val,
	__si_s1ap__ReportIntervalMDT_min30_val,
	__si_s1ap__ReportIntervalMDT_min60_val
} SI_S1AP_DT_ReportIntervalMDT;


// L:2561
typedef enum __si_s1ap_dt_ReportIntervalMDT2
{
	ReportIntervalMDT_ms120_val,
	ReportIntervalMDT_ms240_val,
	ReportIntervalMDT_ms480_val,
	ReportIntervalMDT_ms640_val,
	ReportIntervalMDT_ms1024_val,
	ReportIntervalMDT_ms2048_val,
	ReportIntervalMDT_ms5120_val,
	ReportIntervalMDT_ms10240_val,
	ReportIntervalMDT_min1_val,
	ReportIntervalMDT_min6_val,
	ReportIntervalMDT_min12_val,
	ReportIntervalMDT_min30_val,
	ReportIntervalMDT_min60_val
} SI_S1AP_DT_ReportIntervalMDT2;


// L:2588
typedef struct __si_s1ap_dt_ReportIntervalMDT_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ReportIntervalMDT_EnumProxy;


// ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ReportAmountMDT
{
	__si_s1ap__ReportAmountMDT_r1_val,
	__si_s1ap__ReportAmountMDT_r2_val,
	__si_s1ap__ReportAmountMDT_r4_val,
	__si_s1ap__ReportAmountMDT_r8_val,
	__si_s1ap__ReportAmountMDT_r16_val,
	__si_s1ap__ReportAmountMDT_r32_val,
	__si_s1ap__ReportAmountMDT_r64_val,
	__si_s1ap__ReportAmountMDT_rinfinity_val
} SI_S1AP_DT_ReportAmountMDT;


// L:2561
typedef enum __si_s1ap_dt_ReportAmountMDT2
{
	ReportAmountMDT_r1_val,
	ReportAmountMDT_r2_val,
	ReportAmountMDT_r4_val,
	ReportAmountMDT_r8_val,
	ReportAmountMDT_r16_val,
	ReportAmountMDT_r32_val,
	ReportAmountMDT_r64_val,
	ReportAmountMDT_rinfinity_val
} SI_S1AP_DT_ReportAmountMDT2;


// L:2588
typedef struct __si_s1ap_dt_ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ReportAmountMDT_EnumProxy;


// M1PeriodicReporting
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_M1PeriodicReporting
{
	uint8_t selected_ereportInterval;
	int extSelected_ereportInterval;

	uint8_t selected_ereportAmount;
	int extSelected_ereportAmount;

} SI_S1AP_DT_M1PeriodicReporting;


// ImmediateMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ImmediateMDT
{
	SI_S1AP_DT_MeasurementsToActivate * measurementsToActivate;

	uint8_t selected_em1reportingTrigger;
	int extSelected_em1reportingTrigger;

	SI_S1AP_DT_M1ThresholdEventA2 * m1thresholdeventA2;
	int isPresent_m1thresholdeventA2;

	SI_S1AP_DT_M1PeriodicReporting * m1periodicReporting;
	int isPresent_m1periodicReporting;

} SI_S1AP_DT_ImmediateMDT;


// IMSI
// OCTETSTRING,OCTET STRING(SIZE(3..8))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_IMSI
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_IMSI;

// RecommendedENBList
//SEQUENCE OF ProtocolIE-SingleContainer{{RecommendedENBItemIEs } }, MIN=1, MAX= maxnoofRecommendedENBs  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_RecommendedENBList
{
	SI_LinkedList * list;
} SI_S1AP_DT_RecommendedENBList;


// RecommendedENBsForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_RecommendedENBsForPaging
{
	SI_S1AP_DT_RecommendedENBList * recommendedENBList;

} SI_S1AP_DT_RecommendedENBsForPaging;


// InformationOnRecommendedCellsAndENBsForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_InformationOnRecommendedCellsAndENBsForPaging
{
	SI_S1AP_DT_RecommendedCellsForPaging * recommendedCellsForPaging;

	SI_S1AP_DT_RecommendedENBsForPaging * recommendENBsForPaging;

} SI_S1AP_DT_InformationOnRecommendedCellsAndENBsForPaging;


// IntegrityProtectionAlgorithms
// BITSTRING,BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_IntegrityProtectionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_IntegrityProtectionAlgorithms;

// IntegrityProtectionIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_IntegrityProtectionIndication
{
	__si_s1ap__IntegrityProtectionIndication_required_val,
	__si_s1ap__IntegrityProtectionIndication_preferred_val,
	__si_s1ap__IntegrityProtectionIndication_not_needed_val
} SI_S1AP_DT_IntegrityProtectionIndication;


// L:2561
typedef enum __si_s1ap_dt_IntegrityProtectionIndication2
{
	IntegrityProtectionIndication_required_val,
	IntegrityProtectionIndication_preferred_val,
	IntegrityProtectionIndication_not_needed_val
} SI_S1AP_DT_IntegrityProtectionIndication2;


// L:2588
typedef struct __si_s1ap_dt_IntegrityProtectionIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_IntegrityProtectionIndication_EnumProxy;


// InterfacesToTrace
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_InterfacesToTrace
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_InterfacesToTrace;

// IntersystemMeasurementConfiguration_rSRP
// INTEGER,INTEGER(0.. 127),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration_rSRP
{
	unsigned long long int data;
} SI_S1AP_DT_IntersystemMeasurementConfiguration_rSRP;

// IntersystemMeasurementConfiguration_rSRQ
// INTEGER,INTEGER(0.. 127),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration_rSRQ
{
	unsigned long long int data;
} SI_S1AP_DT_IntersystemMeasurementConfiguration_rSRQ;

// IntersystemMeasurementConfiguration_sINR
// INTEGER,INTEGER(0.. 127),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration_sINR
{
	unsigned long long int data;
} SI_S1AP_DT_IntersystemMeasurementConfiguration_sINR;

// InterSystemMeasurementParameters_measurementDuration
// INTEGER,INTEGER(1..100),MIN=1,MAX=100  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_InterSystemMeasurementParameters_measurementDuration
{
	unsigned long long int data;
} SI_S1AP_DT_InterSystemMeasurementParameters_measurementDuration;

// InterSystemMeasurementList
//SEQUENCE OF InterSystemMeasurementItem, MIN=1, MAX= maxnooffrequencies  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_InterSystemMeasurementList
{
	SI_LinkedList * InterSystemMeasurementItem;
} SI_S1AP_DT_InterSystemMeasurementList;


// InterSystemMeasurementParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_InterSystemMeasurementParameters
{
	unsigned long long int measurementDuration;

	SI_S1AP_DT_InterSystemMeasurementList * interSystemMeasurementList;
	int isPresent_interSystemMeasurementList;

} SI_S1AP_DT_InterSystemMeasurementParameters;


// IntersystemMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration
{
	unsigned long long int rSRP;
	int isPresent_rSRP;

	unsigned long long int rSRQ;
	int isPresent_rSRQ;

	unsigned long long int sINR;
	int isPresent_sINR;

	SI_S1AP_DT_InterSystemMeasurementParameters * interSystemMeasurementParameters;

} SI_S1AP_DT_IntersystemMeasurementConfiguration;


// InterSystemMeasurementItem_freqBandIndicatorNR
// INTEGER,INTEGER(1..1024),MIN=1,MAX=1024  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_freqBandIndicatorNR
{
	unsigned long long int data;
} SI_S1AP_DT_InterSystemMeasurementItem_freqBandIndicatorNR;

// InterSystemMeasurementItem_sSBfrequencies
// INTEGER,INTEGER(0..maxNARFCN),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_sSBfrequencies
{
	unsigned long long int data;
} SI_S1AP_DT_InterSystemMeasurementItem_sSBfrequencies;

// InterSystemMeasurementItem_subcarrierSpacingSSB
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_InterSystemMeasurementItem_subcarrierSpacingSSB
{
	__si_s1ap__InterSystemMeasurementItem_subcarrierSpacingSSB_kHz15_val,
	__si_s1ap__InterSystemMeasurementItem_subcarrierSpacingSSB_kHz30_val,
	__si_s1ap__InterSystemMeasurementItem_subcarrierSpacingSSB_kHz60_val,
	__si_s1ap__InterSystemMeasurementItem_subcarrierSpacingSSB_kHz120_val,
	__si_s1ap__InterSystemMeasurementItem_subcarrierSpacingSSB_kHz240_val,
	__si_s1ap__InterSystemMeasurementItem_subcarrierSpacingSSB_kHz480_val_ext,
	__si_s1ap__InterSystemMeasurementItem_subcarrierSpacingSSB_kHz960_val_ext
} SI_S1AP_DT_InterSystemMeasurementItem_subcarrierSpacingSSB;


// L:2561
typedef enum __si_s1ap_dt_InterSystemMeasurementItem_subcarrierSpacingSSB2
{
	InterSystemMeasurementItem_subcarrierSpacingSSB_kHz15_val,
	InterSystemMeasurementItem_subcarrierSpacingSSB_kHz30_val,
	InterSystemMeasurementItem_subcarrierSpacingSSB_kHz60_val,
	InterSystemMeasurementItem_subcarrierSpacingSSB_kHz120_val,
	InterSystemMeasurementItem_subcarrierSpacingSSB_kHz240_val,
	InterSystemMeasurementItem_subcarrierSpacingSSB_kHz480_val_ext,
	InterSystemMeasurementItem_subcarrierSpacingSSB_kHz960_val_ext
} SI_S1AP_DT_InterSystemMeasurementItem_subcarrierSpacingSSB2;


// L:2588
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_subcarrierSpacingSSB_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_InterSystemMeasurementItem_subcarrierSpacingSSB_EnumProxy;


// InterSystemMeasurementItem_maxRSIndexCellQual
// INTEGER,INTEGER(1..maxRS-IndexCellQual),MIN=1,MAX=NaN  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_maxRSIndexCellQual
{
	unsigned long long int data;
} SI_S1AP_DT_InterSystemMeasurementItem_maxRSIndexCellQual;

// InterSystemMeasurementItem_sMTC
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_sMTC
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_InterSystemMeasurementItem_sMTC;

// InterSystemMeasurementItem_threshRS-Index-r15
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_threshRS_Index_r15
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_InterSystemMeasurementItem_threshRS_Index_r15;

// InterSystemMeasurementItem_sSBToMeasure
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_sSBToMeasure
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_InterSystemMeasurementItem_sSBToMeasure;

// InterSystemMeasurementItem_sSRSSIMeasurement
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_sSRSSIMeasurement
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_InterSystemMeasurementItem_sSRSSIMeasurement;

// InterSystemMeasurementItem_quantityConfigNR-R15
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_quantityConfigNR_R15
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_InterSystemMeasurementItem_quantityConfigNR_R15;

// InterSystemMeasurementItem_excludedCellsToAddModList
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_excludedCellsToAddModList
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_InterSystemMeasurementItem_excludedCellsToAddModList;

// InterSystemMeasurementItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_InterSystemMeasurementItem
{
	unsigned long long int freqBandIndicatorNR;

	unsigned long long int sSBfrequencies;

	uint8_t selected_esubcarrierSpacingSSB;
	int extSelected_esubcarrierSpacingSSB;

	unsigned long long int maxRSIndexCellQual;
	int isPresent_maxRSIndexCellQual;

	SI_S1AP_DT_InterSystemMeasurementItem_sMTC * sMTC;
	int isPresent_sMTC;

	SI_S1AP_DT_InterSystemMeasurementItem_threshRS_Index_r15 * threshRS_Index_r15;
	int isPresent_threshRS_Index_r15;

	SI_S1AP_DT_InterSystemMeasurementItem_sSBToMeasure * sSBToMeasure;
	int isPresent_sSBToMeasure;

	SI_S1AP_DT_InterSystemMeasurementItem_sSRSSIMeasurement * sSRSSIMeasurement;
	int isPresent_sSRSSIMeasurement;

	SI_S1AP_DT_InterSystemMeasurementItem_quantityConfigNR_R15 * quantityConfigNR_R15;
	int isPresent_quantityConfigNR_R15;

	SI_S1AP_DT_InterSystemMeasurementItem_excludedCellsToAddModList * excludedCellsToAddModList;
	int isPresent_excludedCellsToAddModList;

} SI_S1AP_DT_InterSystemMeasurementItem;


// IntersystemSONConfigurationTransfer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_IntersystemSONConfigurationTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_IntersystemSONConfigurationTransfer;

// IMSvoiceEPSfallbackfrom5G
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_IMSvoiceEPSfallbackfrom5G
{
	__si_s1ap__IMSvoiceEPSfallbackfrom5G_true_val
} SI_S1AP_DT_IMSvoiceEPSfallbackfrom5G;


// L:2561
typedef enum __si_s1ap_dt_IMSvoiceEPSfallbackfrom5G2
{
	IMSvoiceEPSfallbackfrom5G_true_val
} SI_S1AP_DT_IMSvoiceEPSfallbackfrom5G2;


// L:2588
typedef struct __si_s1ap_dt_IMSvoiceEPSfallbackfrom5G_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_IMSvoiceEPSfallbackfrom5G_EnumProxy;


// IAB-Authorized
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_IAB_Authorized
{
	__si_s1ap__IAB_Authorized_authorized_val,
	__si_s1ap__IAB_Authorized_not_authorized_val
} SI_S1AP_DT_IAB_Authorized;


// L:2561
typedef enum __si_s1ap_dt_IAB_Authorized2
{
	IAB_Authorized_authorized_val,
	IAB_Authorized_not_authorized_val
} SI_S1AP_DT_IAB_Authorized2;


// L:2588
typedef struct __si_s1ap_dt_IAB_Authorized_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_IAB_Authorized_EnumProxy;


// IAB-Node-Indication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_IAB_Node_Indication
{
	__si_s1ap__IAB_Node_Indication_true_val
} SI_S1AP_DT_IAB_Node_Indication;


// L:2561
typedef enum __si_s1ap_dt_IAB_Node_Indication2
{
	IAB_Node_Indication_true_val
} SI_S1AP_DT_IAB_Node_Indication2;


// L:2588
typedef struct __si_s1ap_dt_IAB_Node_Indication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_IAB_Node_Indication_EnumProxy;


// IAB-Supported
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_IAB_Supported
{
	__si_s1ap__IAB_Supported_true_val
} SI_S1AP_DT_IAB_Supported;


// L:2561
typedef enum __si_s1ap_dt_IAB_Supported2
{
	IAB_Supported_true_val
} SI_S1AP_DT_IAB_Supported2;


// L:2588
typedef struct __si_s1ap_dt_IAB_Supported_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_IAB_Supported_EnumProxy;


// KillAllWarningMessages
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_KillAllWarningMessages
{
	__si_s1ap__KillAllWarningMessages_true_val
} SI_S1AP_DT_KillAllWarningMessages;


// L:2561
typedef enum __si_s1ap_dt_KillAllWarningMessages2
{
	KillAllWarningMessages_true_val
} SI_S1AP_DT_KillAllWarningMessages2;


// L:2588
typedef struct __si_s1ap_dt_KillAllWarningMessages_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_KillAllWarningMessages_EnumProxy;


// Time-UE-StayedInCell
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_Time_UE_StayedInCell
{
	unsigned long long int data;
} SI_S1AP_DT_Time_UE_StayedInCell;

// LastVisitedEUTRANCellInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_LastVisitedEUTRANCellInformation
{
	SI_S1AP_DT_EUTRAN_CGI * global_Cell_ID;

	SI_S1AP_DT_CellType * cellType;

	unsigned long long int time_UE_StayedInCell;

} SI_S1AP_DT_LastVisitedEUTRANCellInformation;


// LastVisitedUTRANCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_LastVisitedUTRANCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_LastVisitedUTRANCellInformation;

// LastVisitedGERANCellInformation
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_LastVisitedGERANCellInformation
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int undefined;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_LastVisitedGERANCellInformation;


// LastVisitedNGRANCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_LastVisitedNGRANCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_LastVisitedNGRANCellInformation;

// LastVisitedCell-Item
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_LastVisitedCell_Item
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_LastVisitedEUTRANCellInformation * e_UTRAN_Cell;

		// ParserName = OCTETSTRING - NonEP false;
		SI_S1AP_DT_LastVisitedUTRANCellInformation * uTRAN_Cell;

		// ParserName = CHOICE - NonEP false;
		SI_S1AP_DT_LastVisitedGERANCellInformation * gERAN_Cell;

		// ParserName = OCTETSTRING - NonEP false;
		SI_S1AP_DT_LastVisitedNGRANCellInformation * nG_RAN_Cell_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_LastVisitedCell_Item;


// LastVisitedPSCellList
//SEQUENCE OF LastVisitedPSCellInformation, MIN=1, MAX= maxnoofPSCellsPerPrimaryCellinUEHistoryInfo  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_LastVisitedPSCellList
{
	SI_LinkedList * LastVisitedPSCellInformation;
} SI_S1AP_DT_LastVisitedPSCellList;


// LastVisitedPSCellInformation_timeStay
// INTEGER,INTEGER(0..40950),MIN=0,MAX=40950  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_LastVisitedPSCellInformation_timeStay
{
	unsigned long long int data;
} SI_S1AP_DT_LastVisitedPSCellInformation_timeStay;

// NRCellIdentity
// BITSTRING,BIT STRING(SIZE(36))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_NRCellIdentity
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_NRCellIdentity;

// NR-CGI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_NR_CGI
{
	SI_S1AP_DT_PLMNidentity * pLMNIdentity;

	SI_S1AP_DT_NRCellIdentity * nRCellIdentity;

} SI_S1AP_DT_NR_CGI;


// PSCellInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_PSCellInformation
{
	SI_S1AP_DT_NR_CGI * nCGI;

} SI_S1AP_DT_PSCellInformation;


// LastVisitedPSCellInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_LastVisitedPSCellInformation
{
	SI_S1AP_DT_PSCellInformation * pSCellID;
	int isPresent_pSCellID;

	unsigned long long int timeStay;

} SI_S1AP_DT_LastVisitedPSCellInformation;


// L3-Information
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_L3_Information
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_L3_Information;

// LPPa-PDU
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_LPPa_PDU
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_LPPa_PDU;

// LHN-ID
// OCTETSTRING,OCTET STRING(SIZE(32..256))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_LHN_ID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_LHN_ID;

// Links-to-log
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Links_to_log
{
	__si_s1ap__Links_to_log_uplink_val,
	__si_s1ap__Links_to_log_downlink_val,
	__si_s1ap__Links_to_log_both_uplink_and_downlink_val
} SI_S1AP_DT_Links_to_log;


// L:2561
typedef enum __si_s1ap_dt_Links_to_log2
{
	Links_to_log_uplink_val,
	Links_to_log_downlink_val,
	Links_to_log_both_uplink_and_downlink_val
} SI_S1AP_DT_Links_to_log2;


// L:2588
typedef struct __si_s1ap_dt_Links_to_log_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Links_to_log_EnumProxy;


// ListeningSubframePattern_pattern-period
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ListeningSubframePattern_pattern_period
{
	__si_s1ap__ListeningSubframePattern_pattern_period_ms1280_val,
	__si_s1ap__ListeningSubframePattern_pattern_period_ms2560_val,
	__si_s1ap__ListeningSubframePattern_pattern_period_ms5120_val,
	__si_s1ap__ListeningSubframePattern_pattern_period_ms10240_val
} SI_S1AP_DT_ListeningSubframePattern_pattern_period;


// L:2561
typedef enum __si_s1ap_dt_ListeningSubframePattern_pattern_period2
{
	ListeningSubframePattern_pattern_period_ms1280_val,
	ListeningSubframePattern_pattern_period_ms2560_val,
	ListeningSubframePattern_pattern_period_ms5120_val,
	ListeningSubframePattern_pattern_period_ms10240_val
} SI_S1AP_DT_ListeningSubframePattern_pattern_period2;


// L:2588
typedef struct __si_s1ap_dt_ListeningSubframePattern_pattern_period_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ListeningSubframePattern_pattern_period_EnumProxy;


// ListeningSubframePattern_pattern-offset
// INTEGER,INTEGER(0..10239,...),MIN=0,MAX=10239  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ListeningSubframePattern_pattern_offset
{
	unsigned long long int data;
} SI_S1AP_DT_ListeningSubframePattern_pattern_offset;

// ListeningSubframePattern
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ListeningSubframePattern
{
	uint8_t selected_epattern_period;
	int extSelected_epattern_period;

	unsigned long long int pattern_offset;

} SI_S1AP_DT_ListeningSubframePattern;


// LoggingInterval
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_LoggingInterval
{
	__si_s1ap__LoggingInterval_ms1280_val,
	__si_s1ap__LoggingInterval_ms2560_val,
	__si_s1ap__LoggingInterval_ms5120_val,
	__si_s1ap__LoggingInterval_ms10240_val,
	__si_s1ap__LoggingInterval_ms20480_val,
	__si_s1ap__LoggingInterval_ms30720_val,
	__si_s1ap__LoggingInterval_ms40960_val,
	__si_s1ap__LoggingInterval_ms61440_val
} SI_S1AP_DT_LoggingInterval;


// L:2561
typedef enum __si_s1ap_dt_LoggingInterval2
{
	LoggingInterval_ms1280_val,
	LoggingInterval_ms2560_val,
	LoggingInterval_ms5120_val,
	LoggingInterval_ms10240_val,
	LoggingInterval_ms20480_val,
	LoggingInterval_ms30720_val,
	LoggingInterval_ms40960_val,
	LoggingInterval_ms61440_val
} SI_S1AP_DT_LoggingInterval2;


// L:2588
typedef struct __si_s1ap_dt_LoggingInterval_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_LoggingInterval_EnumProxy;


// LoggingDuration
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_LoggingDuration
{
	__si_s1ap__LoggingDuration_m10_val,
	__si_s1ap__LoggingDuration_m20_val,
	__si_s1ap__LoggingDuration_m40_val,
	__si_s1ap__LoggingDuration_m60_val,
	__si_s1ap__LoggingDuration_m90_val,
	__si_s1ap__LoggingDuration_m120_val
} SI_S1AP_DT_LoggingDuration;


// L:2561
typedef enum __si_s1ap_dt_LoggingDuration2
{
	LoggingDuration_m10_val,
	LoggingDuration_m20_val,
	LoggingDuration_m40_val,
	LoggingDuration_m60_val,
	LoggingDuration_m90_val,
	LoggingDuration_m120_val
} SI_S1AP_DT_LoggingDuration2;


// L:2588
typedef struct __si_s1ap_dt_LoggingDuration_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_LoggingDuration_EnumProxy;


// LoggedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_LoggedMDT
{
	uint8_t selected_eloggingInterval;
	int extSelected_eloggingInterval;

	uint8_t selected_eloggingDuration;
	int extSelected_eloggingDuration;

} SI_S1AP_DT_LoggedMDT;


// MBSFN-ResultToLog
//SEQUENCE OF MBSFN-ResultToLogInfo, MIN=1, MAX=maxnoofMBSFNAreaMDT  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_MBSFN_ResultToLog
{
	SI_LinkedList * MBSFN_ResultToLogInfo;
} SI_S1AP_DT_MBSFN_ResultToLog;


// LoggedMBSFNMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_LoggedMBSFNMDT
{
	uint8_t selected_eloggingInterval;
	int extSelected_eloggingInterval;

	uint8_t selected_eloggingDuration;
	int extSelected_eloggingDuration;

	SI_S1AP_DT_MBSFN_ResultToLog * mBSFN_ResultToLog;
	int isPresent_mBSFN_ResultToLog;

} SI_S1AP_DT_LoggedMBSFNMDT;


// LoggedMDTTrigger
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_LoggedMDTTrigger
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int periodical;

		// ParserName = CHOICE - NonEP false;
		SI_S1AP_DT_EventTrigger * eventTrigger;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_LoggedMDTTrigger;


// LTE-M-Indication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_LTE_M_Indication
{
	__si_s1ap__LTE_M_Indication_lte_m_val
} SI_S1AP_DT_LTE_M_Indication;


// L:2561
typedef enum __si_s1ap_dt_LTE_M_Indication2
{
	LTE_M_Indication_lte_m_val
} SI_S1AP_DT_LTE_M_Indication2;


// L:2588
typedef struct __si_s1ap_dt_LTE_M_Indication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_LTE_M_Indication_EnumProxy;


// TACList-In-LTE-NTN
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofTACsInNTN  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TACList_In_LTE_NTN
{
	SI_LinkedList * TAC;
} SI_S1AP_DT_TACList_In_LTE_NTN;


// LTE-NTN-TAI-Information
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_LTE_NTN_TAI_Information
{
	SI_S1AP_DT_PLMNidentity * servingPLMN;

	SI_S1AP_DT_TACList_In_LTE_NTN * tACList_In_LTE_NTN;

	SI_S1AP_DT_TAC * uE_Location_Derived_TAC;
	int isPresent_uE_Location_Derived_TAC;

} SI_S1AP_DT_LTE_NTN_TAI_Information;


// M3period
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M3period
{
	__si_s1ap__M3period_ms100_val,
	__si_s1ap__M3period_ms1000_val,
	__si_s1ap__M3period_ms10000_val,
	__si_s1ap__M3period_ms1024_val_ext,
	__si_s1ap__M3period_ms1280_val_ext,
	__si_s1ap__M3period_ms2048_val_ext,
	__si_s1ap__M3period_ms2560_val_ext,
	__si_s1ap__M3period_ms5120_val_ext,
	__si_s1ap__M3period_ms10240_val_ext,
	__si_s1ap__M3period_min1_val_ext
} SI_S1AP_DT_M3period;


// L:2561
typedef enum __si_s1ap_dt_M3period2
{
	M3period_ms100_val,
	M3period_ms1000_val,
	M3period_ms10000_val,
	M3period_ms1024_val_ext,
	M3period_ms1280_val_ext,
	M3period_ms2048_val_ext,
	M3period_ms2560_val_ext,
	M3period_ms5120_val_ext,
	M3period_ms10240_val_ext,
	M3period_min1_val_ext
} SI_S1AP_DT_M3period2;


// L:2588
typedef struct __si_s1ap_dt_M3period_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M3period_EnumProxy;


// M3Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_M3Configuration
{
	uint8_t selected_em3period;
	int extSelected_em3period;

} SI_S1AP_DT_M3Configuration;


// M4period
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M4period
{
	__si_s1ap__M4period_ms1024_val,
	__si_s1ap__M4period_ms2048_val,
	__si_s1ap__M4period_ms5120_val,
	__si_s1ap__M4period_ms10240_val,
	__si_s1ap__M4period_min1_val
} SI_S1AP_DT_M4period;


// L:2561
typedef enum __si_s1ap_dt_M4period2
{
	M4period_ms1024_val,
	M4period_ms2048_val,
	M4period_ms5120_val,
	M4period_ms10240_val,
	M4period_min1_val
} SI_S1AP_DT_M4period2;


// L:2588
typedef struct __si_s1ap_dt_M4period_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M4period_EnumProxy;


// M4Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_M4Configuration
{
	uint8_t selected_em4period;
	int extSelected_em4period;

	uint8_t selected_em4_links_to_log;
	int extSelected_em4_links_to_log;

} SI_S1AP_DT_M4Configuration;


// M4ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M4ReportAmountMDT
{
	__si_s1ap__M4ReportAmountMDT_r1_val,
	__si_s1ap__M4ReportAmountMDT_r2_val,
	__si_s1ap__M4ReportAmountMDT_r4_val,
	__si_s1ap__M4ReportAmountMDT_r8_val,
	__si_s1ap__M4ReportAmountMDT_r16_val,
	__si_s1ap__M4ReportAmountMDT_r32_val,
	__si_s1ap__M4ReportAmountMDT_r64_val,
	__si_s1ap__M4ReportAmountMDT_infinity_val
} SI_S1AP_DT_M4ReportAmountMDT;


// L:2561
typedef enum __si_s1ap_dt_M4ReportAmountMDT2
{
	M4ReportAmountMDT_r1_val,
	M4ReportAmountMDT_r2_val,
	M4ReportAmountMDT_r4_val,
	M4ReportAmountMDT_r8_val,
	M4ReportAmountMDT_r16_val,
	M4ReportAmountMDT_r32_val,
	M4ReportAmountMDT_r64_val,
	M4ReportAmountMDT_infinity_val
} SI_S1AP_DT_M4ReportAmountMDT2;


// L:2588
typedef struct __si_s1ap_dt_M4ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M4ReportAmountMDT_EnumProxy;


// M5period
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M5period
{
	__si_s1ap__M5period_ms1024_val,
	__si_s1ap__M5period_ms2048_val,
	__si_s1ap__M5period_ms5120_val,
	__si_s1ap__M5period_ms10240_val,
	__si_s1ap__M5period_min1_val
} SI_S1AP_DT_M5period;


// L:2561
typedef enum __si_s1ap_dt_M5period2
{
	M5period_ms1024_val,
	M5period_ms2048_val,
	M5period_ms5120_val,
	M5period_ms10240_val,
	M5period_min1_val
} SI_S1AP_DT_M5period2;


// L:2588
typedef struct __si_s1ap_dt_M5period_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M5period_EnumProxy;


// M5Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_M5Configuration
{
	uint8_t selected_em5period;
	int extSelected_em5period;

	uint8_t selected_em5_links_to_log;
	int extSelected_em5_links_to_log;

} SI_S1AP_DT_M5Configuration;


// M5ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M5ReportAmountMDT
{
	__si_s1ap__M5ReportAmountMDT_r1_val,
	__si_s1ap__M5ReportAmountMDT_r2_val,
	__si_s1ap__M5ReportAmountMDT_r4_val,
	__si_s1ap__M5ReportAmountMDT_r8_val,
	__si_s1ap__M5ReportAmountMDT_r16_val,
	__si_s1ap__M5ReportAmountMDT_r32_val,
	__si_s1ap__M5ReportAmountMDT_r64_val,
	__si_s1ap__M5ReportAmountMDT_infinity_val
} SI_S1AP_DT_M5ReportAmountMDT;


// L:2561
typedef enum __si_s1ap_dt_M5ReportAmountMDT2
{
	M5ReportAmountMDT_r1_val,
	M5ReportAmountMDT_r2_val,
	M5ReportAmountMDT_r4_val,
	M5ReportAmountMDT_r8_val,
	M5ReportAmountMDT_r16_val,
	M5ReportAmountMDT_r32_val,
	M5ReportAmountMDT_r64_val,
	M5ReportAmountMDT_infinity_val
} SI_S1AP_DT_M5ReportAmountMDT2;


// L:2588
typedef struct __si_s1ap_dt_M5ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M5ReportAmountMDT_EnumProxy;


// M6report-Interval
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M6report_Interval
{
	__si_s1ap__M6report_Interval_ms1024_val,
	__si_s1ap__M6report_Interval_ms2048_val,
	__si_s1ap__M6report_Interval_ms5120_val,
	__si_s1ap__M6report_Interval_ms10240_val
} SI_S1AP_DT_M6report_Interval;


// L:2561
typedef enum __si_s1ap_dt_M6report_Interval2
{
	M6report_Interval_ms1024_val,
	M6report_Interval_ms2048_val,
	M6report_Interval_ms5120_val,
	M6report_Interval_ms10240_val
} SI_S1AP_DT_M6report_Interval2;


// L:2588
typedef struct __si_s1ap_dt_M6report_Interval_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M6report_Interval_EnumProxy;


// M6delay-threshold
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M6delay_threshold
{
	__si_s1ap__M6delay_threshold_ms30_val,
	__si_s1ap__M6delay_threshold_ms40_val,
	__si_s1ap__M6delay_threshold_ms50_val,
	__si_s1ap__M6delay_threshold_ms60_val,
	__si_s1ap__M6delay_threshold_ms70_val,
	__si_s1ap__M6delay_threshold_ms80_val,
	__si_s1ap__M6delay_threshold_ms90_val,
	__si_s1ap__M6delay_threshold_ms100_val,
	__si_s1ap__M6delay_threshold_ms150_val,
	__si_s1ap__M6delay_threshold_ms300_val,
	__si_s1ap__M6delay_threshold_ms500_val,
	__si_s1ap__M6delay_threshold_ms750_val
} SI_S1AP_DT_M6delay_threshold;


// L:2561
typedef enum __si_s1ap_dt_M6delay_threshold2
{
	M6delay_threshold_ms30_val,
	M6delay_threshold_ms40_val,
	M6delay_threshold_ms50_val,
	M6delay_threshold_ms60_val,
	M6delay_threshold_ms70_val,
	M6delay_threshold_ms80_val,
	M6delay_threshold_ms90_val,
	M6delay_threshold_ms100_val,
	M6delay_threshold_ms150_val,
	M6delay_threshold_ms300_val,
	M6delay_threshold_ms500_val,
	M6delay_threshold_ms750_val
} SI_S1AP_DT_M6delay_threshold2;


// L:2588
typedef struct __si_s1ap_dt_M6delay_threshold_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M6delay_threshold_EnumProxy;


// M6Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_M6Configuration
{
	uint8_t selected_em6report_Interval;
	int extSelected_em6report_Interval;

	uint8_t selected_em6delay_threshold;
	int extSelected_em6delay_threshold;
	int isPresent_m6delay_threshold;

	uint8_t selected_em6_links_to_log;
	int extSelected_em6_links_to_log;

} SI_S1AP_DT_M6Configuration;


// M6ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M6ReportAmountMDT
{
	__si_s1ap__M6ReportAmountMDT_r1_val,
	__si_s1ap__M6ReportAmountMDT_r2_val,
	__si_s1ap__M6ReportAmountMDT_r4_val,
	__si_s1ap__M6ReportAmountMDT_r8_val,
	__si_s1ap__M6ReportAmountMDT_r16_val,
	__si_s1ap__M6ReportAmountMDT_r32_val,
	__si_s1ap__M6ReportAmountMDT_r64_val,
	__si_s1ap__M6ReportAmountMDT_infinity_val
} SI_S1AP_DT_M6ReportAmountMDT;


// L:2561
typedef enum __si_s1ap_dt_M6ReportAmountMDT2
{
	M6ReportAmountMDT_r1_val,
	M6ReportAmountMDT_r2_val,
	M6ReportAmountMDT_r4_val,
	M6ReportAmountMDT_r8_val,
	M6ReportAmountMDT_r16_val,
	M6ReportAmountMDT_r32_val,
	M6ReportAmountMDT_r64_val,
	M6ReportAmountMDT_infinity_val
} SI_S1AP_DT_M6ReportAmountMDT2;


// L:2588
typedef struct __si_s1ap_dt_M6ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M6ReportAmountMDT_EnumProxy;


// M7period
// INTEGER,INTEGER(1..60,...),MIN=1,MAX=60  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_M7period
{
	unsigned long long int data;
} SI_S1AP_DT_M7period;

// M7Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_M7Configuration
{
	unsigned long long int m7period;

	uint8_t selected_em7_links_to_log;
	int extSelected_em7_links_to_log;

} SI_S1AP_DT_M7Configuration;


// M7ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_M7ReportAmountMDT
{
	__si_s1ap__M7ReportAmountMDT_r1_val,
	__si_s1ap__M7ReportAmountMDT_r2_val,
	__si_s1ap__M7ReportAmountMDT_r4_val,
	__si_s1ap__M7ReportAmountMDT_r8_val,
	__si_s1ap__M7ReportAmountMDT_r16_val,
	__si_s1ap__M7ReportAmountMDT_r32_val,
	__si_s1ap__M7ReportAmountMDT_r64_val,
	__si_s1ap__M7ReportAmountMDT_infinity_val
} SI_S1AP_DT_M7ReportAmountMDT;


// L:2561
typedef enum __si_s1ap_dt_M7ReportAmountMDT2
{
	M7ReportAmountMDT_r1_val,
	M7ReportAmountMDT_r2_val,
	M7ReportAmountMDT_r4_val,
	M7ReportAmountMDT_r8_val,
	M7ReportAmountMDT_r16_val,
	M7ReportAmountMDT_r32_val,
	M7ReportAmountMDT_r64_val,
	M7ReportAmountMDT_infinity_val
} SI_S1AP_DT_M7ReportAmountMDT2;


// L:2588
typedef struct __si_s1ap_dt_M7ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_M7ReportAmountMDT_EnumProxy;


// MDT-Activation
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_MDT_Activation
{
	__si_s1ap__MDT_Activation_immediate_MDT_only_val,
	__si_s1ap__MDT_Activation_immediate_MDT_and_Trace_val,
	__si_s1ap__MDT_Activation_logged_MDT_only_val,
	__si_s1ap__MDT_Activation_logged_MBSFN_MDT_val_ext
} SI_S1AP_DT_MDT_Activation;


// L:2561
typedef enum __si_s1ap_dt_MDT_Activation2
{
	MDT_Activation_immediate_MDT_only_val,
	MDT_Activation_immediate_MDT_and_Trace_val,
	MDT_Activation_logged_MDT_only_val,
	MDT_Activation_logged_MBSFN_MDT_val_ext
} SI_S1AP_DT_MDT_Activation2;


// L:2588
typedef struct __si_s1ap_dt_MDT_Activation_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_MDT_Activation_EnumProxy;


// MDT-Location-Info
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_MDT_Location_Info
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_MDT_Location_Info;

//TODO: DataType ->MDTMode-ExtensionIE<- Got NULL  L:7941

// MDTMode-Extension
// ADT=0  DT=1 Container
// L:4288
typedef struct __si_s1ap_dt_MDTMode_Extension
{
	// Got SingleContainer L:4310
	//SI_S1AP_DT_MDTMode_ExtensionIE * mDTModeExtensionIE;
} SI_S1AP_DT_MDTMode_Extension;


// MDTMode
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_MDTMode
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_ImmediateMDT * immediateMDT;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_LoggedMDT * loggedMDT;

		// ParserName = CONTAINER - NonEP false;
		SI_S1AP_DT_MDTMode_Extension * mDTMode_Extension_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_MDTMode;


// MDT-Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_MDT_Configuration
{
	uint8_t selected_emdt_Activation;
	int extSelected_emdt_Activation;

	SI_S1AP_DT_AreaScopeOfMDT * areaScopeOfMDT;

	SI_S1AP_DT_MDTMode * mDTMode;

} SI_S1AP_DT_MDT_Configuration;


// ManagementBasedMDTAllowed
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ManagementBasedMDTAllowed
{
	__si_s1ap__ManagementBasedMDTAllowed_allowed_val
} SI_S1AP_DT_ManagementBasedMDTAllowed;


// L:2561
typedef enum __si_s1ap_dt_ManagementBasedMDTAllowed2
{
	ManagementBasedMDTAllowed_allowed_val
} SI_S1AP_DT_ManagementBasedMDTAllowed2;


// L:2588
typedef struct __si_s1ap_dt_ManagementBasedMDTAllowed_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ManagementBasedMDTAllowed_EnumProxy;


// MBSFNResultToLogInfo_mBSFN-AreaId
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_MBSFNResultToLogInfo_mBSFN_AreaId
{
	unsigned long long int data;
} SI_S1AP_DT_MBSFNResultToLogInfo_mBSFN_AreaId;

// MBSFN-ResultToLogInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_MBSFN_ResultToLogInfo
{
	unsigned long long int mBSFN_AreaId;
	int isPresent_mBSFN_AreaId;

	unsigned long long int carrierFreq;

} SI_S1AP_DT_MBSFN_ResultToLogInfo;


// MDTPLMNList
//SEQUENCE OF PLMNidentity, MIN=1, MAX=maxnoofMDTPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_MDTPLMNList
{
	SI_LinkedList * PLMNidentity;
} SI_S1AP_DT_MDTPLMNList;


// PrivacyIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_PrivacyIndicator
{
	__si_s1ap__PrivacyIndicator_immediate_MDT_val,
	__si_s1ap__PrivacyIndicator_logged_MDT_val
} SI_S1AP_DT_PrivacyIndicator;


// L:2561
typedef enum __si_s1ap_dt_PrivacyIndicator2
{
	PrivacyIndicator_immediate_MDT_val,
	PrivacyIndicator_logged_MDT_val
} SI_S1AP_DT_PrivacyIndicator2;


// L:2588
typedef struct __si_s1ap_dt_PrivacyIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_PrivacyIndicator_EnumProxy;


// MessageIdentifier
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_MessageIdentifier
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_MessageIdentifier;

// MobilityInformation
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_MobilityInformation
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_MobilityInformation;

// MMEname
// PrintableString,PrintableString(SIZE(1..150,...))
// ADT=0  DT=2
// L:6261
typedef struct __si_s1ap_dt_MMEname
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_MMEname;

// MMEPagingTarget
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_MMEPagingTarget
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_Global_ENB_ID * global_ENB_ID;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_TAI * tAI;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_MMEPagingTarget;


// MMERelaySupportIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_MMERelaySupportIndicator
{
	__si_s1ap__MMERelaySupportIndicator_true_val
} SI_S1AP_DT_MMERelaySupportIndicator;


// L:2561
typedef enum __si_s1ap_dt_MMERelaySupportIndicator2
{
	MMERelaySupportIndicator_true_val
} SI_S1AP_DT_MMERelaySupportIndicator2;


// L:2588
typedef struct __si_s1ap_dt_MMERelaySupportIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_MMERelaySupportIndicator_EnumProxy;


// MME-UE-S1AP-ID
// INTEGER,INTEGER(0..4294967295),MIN=0,MAX=4294967295  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_MME_UE_S1AP_ID
{
	unsigned long long int data;
} SI_S1AP_DT_MME_UE_S1AP_ID;

// MSClassmark2
// OCTETSTRING,OCTET STRING MSClassmark3 ::= OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_MSClassmark2
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_MSClassmark2;

// MutingAvailabilityIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_MutingAvailabilityIndication
{
	__si_s1ap__MutingAvailabilityIndication_available_val,
	__si_s1ap__MutingAvailabilityIndication_unavailable_val
} SI_S1AP_DT_MutingAvailabilityIndication;


// L:2561
typedef enum __si_s1ap_dt_MutingAvailabilityIndication2
{
	MutingAvailabilityIndication_available_val,
	MutingAvailabilityIndication_unavailable_val
} SI_S1AP_DT_MutingAvailabilityIndication2;


// L:2588
typedef struct __si_s1ap_dt_MutingAvailabilityIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_MutingAvailabilityIndication_EnumProxy;


// MutingPatternInformation_muting-pattern-period
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_MutingPatternInformation_muting_pattern_period
{
	__si_s1ap__MutingPatternInformation_muting_pattern_period_ms0_val,
	__si_s1ap__MutingPatternInformation_muting_pattern_period_ms1280_val,
	__si_s1ap__MutingPatternInformation_muting_pattern_period_ms2560_val,
	__si_s1ap__MutingPatternInformation_muting_pattern_period_ms5120_val,
	__si_s1ap__MutingPatternInformation_muting_pattern_period_ms10240_val
} SI_S1AP_DT_MutingPatternInformation_muting_pattern_period;


// L:2561
typedef enum __si_s1ap_dt_MutingPatternInformation_muting_pattern_period2
{
	MutingPatternInformation_muting_pattern_period_ms0_val,
	MutingPatternInformation_muting_pattern_period_ms1280_val,
	MutingPatternInformation_muting_pattern_period_ms2560_val,
	MutingPatternInformation_muting_pattern_period_ms5120_val,
	MutingPatternInformation_muting_pattern_period_ms10240_val
} SI_S1AP_DT_MutingPatternInformation_muting_pattern_period2;


// L:2588
typedef struct __si_s1ap_dt_MutingPatternInformation_muting_pattern_period_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_MutingPatternInformation_muting_pattern_period_EnumProxy;


// MutingPatternInformation_muting-pattern-offset
// INTEGER,INTEGER(0..10239,...),MIN=0,MAX=10239  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_MutingPatternInformation_muting_pattern_offset
{
	unsigned long long int data;
} SI_S1AP_DT_MutingPatternInformation_muting_pattern_offset;

// MutingPatternInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_MutingPatternInformation
{
	uint8_t selected_emuting_pattern_period;
	int extSelected_emuting_pattern_period;

	unsigned long long int muting_pattern_offset;
	int isPresent_muting_pattern_offset;

} SI_S1AP_DT_MutingPatternInformation;


// MDT-ConfigurationNR
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_MDT_ConfigurationNR
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_MDT_ConfigurationNR;

// NAS-PDU
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_NAS_PDU
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_NAS_PDU;

// NASSecurityParametersfromE-UTRAN
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_NASSecurityParametersfromE_UTRAN
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_NASSecurityParametersfromE_UTRAN;

// NASSecurityParameterstoE-UTRAN
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_NASSecurityParameterstoE_UTRAN
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_NASSecurityParameterstoE_UTRAN;

// NB-IoT-DefaultPagingDRX
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_NB_IoT_DefaultPagingDRX
{
	__si_s1ap__NB_IoT_DefaultPagingDRX_v128_val,
	__si_s1ap__NB_IoT_DefaultPagingDRX_v256_val,
	__si_s1ap__NB_IoT_DefaultPagingDRX_v512_val,
	__si_s1ap__NB_IoT_DefaultPagingDRX_v1024_val
} SI_S1AP_DT_NB_IoT_DefaultPagingDRX;


// L:2561
typedef enum __si_s1ap_dt_NB_IoT_DefaultPagingDRX2
{
	NB_IoT_DefaultPagingDRX_v128_val,
	NB_IoT_DefaultPagingDRX_v256_val,
	NB_IoT_DefaultPagingDRX_v512_val,
	NB_IoT_DefaultPagingDRX_v1024_val
} SI_S1AP_DT_NB_IoT_DefaultPagingDRX2;


// L:2588
typedef struct __si_s1ap_dt_NB_IoT_DefaultPagingDRX_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_NB_IoT_DefaultPagingDRX_EnumProxy;


// NB-IoT-PagingDRX
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_NB_IoT_PagingDRX
{
	__si_s1ap__NB_IoT_PagingDRX_v32_val,
	__si_s1ap__NB_IoT_PagingDRX_v64_val,
	__si_s1ap__NB_IoT_PagingDRX_v128_val,
	__si_s1ap__NB_IoT_PagingDRX_v256_val,
	__si_s1ap__NB_IoT_PagingDRX_v512_val,
	__si_s1ap__NB_IoT_PagingDRX_v1024_val
} SI_S1AP_DT_NB_IoT_PagingDRX;


// L:2561
typedef enum __si_s1ap_dt_NB_IoT_PagingDRX2
{
	NB_IoT_PagingDRX_v32_val,
	NB_IoT_PagingDRX_v64_val,
	NB_IoT_PagingDRX_v128_val,
	NB_IoT_PagingDRX_v256_val,
	NB_IoT_PagingDRX_v512_val,
	NB_IoT_PagingDRX_v1024_val
} SI_S1AP_DT_NB_IoT_PagingDRX2;


// L:2588
typedef struct __si_s1ap_dt_NB_IoT_PagingDRX_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_NB_IoT_PagingDRX_EnumProxy;


// NB-IoT-Paging-eDRX-Cycle
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_NB_IoT_Paging_eDRX_Cycle
{
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf2_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf4_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf6_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf8_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf10_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf12_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf14_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf16_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf32_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf64_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf128_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf256_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf512_val,
	__si_s1ap__NB_IoT_Paging_eDRX_Cycle_hf1024_val
} SI_S1AP_DT_NB_IoT_Paging_eDRX_Cycle;


// L:2561
typedef enum __si_s1ap_dt_NB_IoT_Paging_eDRX_Cycle2
{
	NB_IoT_Paging_eDRX_Cycle_hf2_val,
	NB_IoT_Paging_eDRX_Cycle_hf4_val,
	NB_IoT_Paging_eDRX_Cycle_hf6_val,
	NB_IoT_Paging_eDRX_Cycle_hf8_val,
	NB_IoT_Paging_eDRX_Cycle_hf10_val,
	NB_IoT_Paging_eDRX_Cycle_hf12_val,
	NB_IoT_Paging_eDRX_Cycle_hf14_val,
	NB_IoT_Paging_eDRX_Cycle_hf16_val,
	NB_IoT_Paging_eDRX_Cycle_hf32_val,
	NB_IoT_Paging_eDRX_Cycle_hf64_val,
	NB_IoT_Paging_eDRX_Cycle_hf128_val,
	NB_IoT_Paging_eDRX_Cycle_hf256_val,
	NB_IoT_Paging_eDRX_Cycle_hf512_val,
	NB_IoT_Paging_eDRX_Cycle_hf1024_val
} SI_S1AP_DT_NB_IoT_Paging_eDRX_Cycle2;


// L:2588
typedef struct __si_s1ap_dt_NB_IoT_Paging_eDRX_Cycle_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_NB_IoT_Paging_eDRX_Cycle_EnumProxy;


// NB-IoT-PagingTimeWindow
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_NB_IoT_PagingTimeWindow
{
	__si_s1ap__NB_IoT_PagingTimeWindow_s1_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s2_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s3_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s4_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s5_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s6_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s7_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s8_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s9_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s10_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s11_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s12_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s13_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s14_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s15_val,
	__si_s1ap__NB_IoT_PagingTimeWindow_s16_val
} SI_S1AP_DT_NB_IoT_PagingTimeWindow;


// L:2561
typedef enum __si_s1ap_dt_NB_IoT_PagingTimeWindow2
{
	NB_IoT_PagingTimeWindow_s1_val,
	NB_IoT_PagingTimeWindow_s2_val,
	NB_IoT_PagingTimeWindow_s3_val,
	NB_IoT_PagingTimeWindow_s4_val,
	NB_IoT_PagingTimeWindow_s5_val,
	NB_IoT_PagingTimeWindow_s6_val,
	NB_IoT_PagingTimeWindow_s7_val,
	NB_IoT_PagingTimeWindow_s8_val,
	NB_IoT_PagingTimeWindow_s9_val,
	NB_IoT_PagingTimeWindow_s10_val,
	NB_IoT_PagingTimeWindow_s11_val,
	NB_IoT_PagingTimeWindow_s12_val,
	NB_IoT_PagingTimeWindow_s13_val,
	NB_IoT_PagingTimeWindow_s14_val,
	NB_IoT_PagingTimeWindow_s15_val,
	NB_IoT_PagingTimeWindow_s16_val
} SI_S1AP_DT_NB_IoT_PagingTimeWindow2;


// L:2588
typedef struct __si_s1ap_dt_NB_IoT_PagingTimeWindow_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_NB_IoT_PagingTimeWindow_EnumProxy;


// NB-IoT-Paging-eDRXInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_NB_IoT_Paging_eDRXInformation
{
	uint8_t selected_enB_IoT_paging_eDRX_Cycle;
	int extSelected_enB_IoT_paging_eDRX_Cycle;

	uint8_t selected_enB_IoT_pagingTimeWindow;
	int extSelected_enB_IoT_pagingTimeWindow;
	int isPresent_nB_IoT_pagingTimeWindow;

} SI_S1AP_DT_NB_IoT_Paging_eDRXInformation;


// NB-IoT-RLF-Report-Container
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_NB_IoT_RLF_Report_Container
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_NB_IoT_RLF_Report_Container;

// NB-IoT-UEIdentityIndexValue
// BITSTRING,BIT STRING(SIZE(12))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_NB_IoT_UEIdentityIndexValue
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_NB_IoT_UEIdentityIndexValue;

// NotifySourceeNB
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_NotifySourceeNB
{
	__si_s1ap__NotifySourceeNB_notifySource_val
} SI_S1AP_DT_NotifySourceeNB;


// L:2561
typedef enum __si_s1ap_dt_NotifySourceeNB2
{
	NotifySourceeNB_notifySource_val
} SI_S1AP_DT_NotifySourceeNB2;


// L:2588
typedef struct __si_s1ap_dt_NotifySourceeNB_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_NotifySourceeNB_EnumProxy;


// NRencryptionAlgorithms
// BITSTRING,BIT STRING(SIZE(16,...)) NRintegrityProtectionAlgorithms ::= BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_NRencryptionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_NRencryptionAlgorithms;

// NRrestrictioninEPSasSecondaryRAT
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_NRrestrictioninEPSasSecondaryRAT
{
	__si_s1ap__NRrestrictioninEPSasSecondaryRAT_nRrestrictedinEPSasSecondaryRAT_val
} SI_S1AP_DT_NRrestrictioninEPSasSecondaryRAT;


// L:2561
typedef enum __si_s1ap_dt_NRrestrictioninEPSasSecondaryRAT2
{
	NRrestrictioninEPSasSecondaryRAT_nRrestrictedinEPSasSecondaryRAT_val
} SI_S1AP_DT_NRrestrictioninEPSasSecondaryRAT2;


// L:2588
typedef struct __si_s1ap_dt_NRrestrictioninEPSasSecondaryRAT_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_NRrestrictioninEPSasSecondaryRAT_EnumProxy;


// NRrestrictionin5GS
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_NRrestrictionin5GS
{
	__si_s1ap__NRrestrictionin5GS_nRrestrictedin5GS_val
} SI_S1AP_DT_NRrestrictionin5GS;


// L:2561
typedef enum __si_s1ap_dt_NRrestrictionin5GS2
{
	NRrestrictionin5GS_nRrestrictedin5GS_val
} SI_S1AP_DT_NRrestrictionin5GS2;


// L:2588
typedef struct __si_s1ap_dt_NRrestrictionin5GS_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_NRrestrictionin5GS_EnumProxy;


//TODO: DataType ->NRintegrityProtectionAlgorithms<- Got NULL  L:7941

// NRUESecurityCapabilities
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_NRUESecurityCapabilities
{
	SI_S1AP_DT_NRencryptionAlgorithms * nRencryptionAlgorithms;

	//SI_S1AP_DT_NRintegrityProtectionAlgorithms * nRintegrityProtectionAlgorithms;

} SI_S1AP_DT_NRUESecurityCapabilities;


// NumberofBroadcastRequest
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_NumberofBroadcastRequest
{
	unsigned long long int data;
} SI_S1AP_DT_NumberofBroadcastRequest;

// VehicleUE
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_VehicleUE
{
	__si_s1ap__VehicleUE_authorized_val,
	__si_s1ap__VehicleUE_not_authorized_val
} SI_S1AP_DT_VehicleUE;


// L:2561
typedef enum __si_s1ap_dt_VehicleUE2
{
	VehicleUE_authorized_val,
	VehicleUE_not_authorized_val
} SI_S1AP_DT_VehicleUE2;


// L:2588
typedef struct __si_s1ap_dt_VehicleUE_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_VehicleUE_EnumProxy;


// PedestrianUE
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_PedestrianUE
{
	__si_s1ap__PedestrianUE_authorized_val,
	__si_s1ap__PedestrianUE_not_authorized_val
} SI_S1AP_DT_PedestrianUE;


// L:2561
typedef enum __si_s1ap_dt_PedestrianUE2
{
	PedestrianUE_authorized_val,
	PedestrianUE_not_authorized_val
} SI_S1AP_DT_PedestrianUE2;


// L:2588
typedef struct __si_s1ap_dt_PedestrianUE_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_PedestrianUE_EnumProxy;


// NRV2XServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_NRV2XServicesAuthorized
{
	uint8_t selected_evehicleUE;
	int extSelected_evehicleUE;
	int isPresent_vehicleUE;

	uint8_t selected_epedestrianUE;
	int extSelected_epedestrianUE;
	int isPresent_pedestrianUE;

} SI_S1AP_DT_NRV2XServicesAuthorized;


// NRUESidelinkAggregateMaximumBitrate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_NRUESidelinkAggregateMaximumBitrate
{
	unsigned long long int uEaggregateMaximumBitRate;

} SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate;


// OldBSS-ToNewBSS-Information
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_OldBSS_ToNewBSS_Information
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_OldBSS_ToNewBSS_Information;

// OverloadAction
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_OverloadAction
{
	__si_s1ap__OverloadAction_reject_non_emergency_mo_dt_val,
	__si_s1ap__OverloadAction_reject_rrc_cr_signalling_val,
	__si_s1ap__OverloadAction_permit_emergency_sessions_and_mobile_terminated_services_only_val,
	__si_s1ap__OverloadAction_permit_high_priority_sessions_and_mobile_terminated_services_only_val_ext,
	__si_s1ap__OverloadAction_reject_delay_tolerant_access_val_ext,
	__si_s1ap__OverloadAction_permit_high_priority_sessions_and_exception_reporting_and_mobile_terminated_services_only_val_ext,
	__si_s1ap__OverloadAction_not_accept_mo_data_or_delay_tolerant_access_from_CP_CIoT_val_ext
} SI_S1AP_DT_OverloadAction;


// L:2561
typedef enum __si_s1ap_dt_OverloadAction2
{
	OverloadAction_reject_non_emergency_mo_dt_val,
	OverloadAction_reject_rrc_cr_signalling_val,
	OverloadAction_permit_emergency_sessions_and_mobile_terminated_services_only_val,
	OverloadAction_permit_high_priority_sessions_and_mobile_terminated_services_only_val_ext,
	OverloadAction_reject_delay_tolerant_access_val_ext,
	OverloadAction_permit_high_priority_sessions_and_exception_reporting_and_mobile_terminated_services_only_val_ext,
	OverloadAction_not_accept_mo_data_or_delay_tolerant_access_from_CP_CIoT_val_ext
} SI_S1AP_DT_OverloadAction2;


// L:2588
typedef struct __si_s1ap_dt_OverloadAction_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_OverloadAction_EnumProxy;


// OverloadResponse
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_OverloadResponse
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t overloadAction;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_OverloadResponse;


// Packet-LossRate
// INTEGER,INTEGER(0..1000),MIN=0,MAX=1000  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_Packet_LossRate
{
	unsigned long long int data;
} SI_S1AP_DT_Packet_LossRate;

// Paging-eDRX-Cycle
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Paging_eDRX_Cycle
{
	__si_s1ap__Paging_eDRX_Cycle_hfhalf_val,
	__si_s1ap__Paging_eDRX_Cycle_hf1_val,
	__si_s1ap__Paging_eDRX_Cycle_hf2_val,
	__si_s1ap__Paging_eDRX_Cycle_hf4_val,
	__si_s1ap__Paging_eDRX_Cycle_hf6_val,
	__si_s1ap__Paging_eDRX_Cycle_hf8_val,
	__si_s1ap__Paging_eDRX_Cycle_hf10_val,
	__si_s1ap__Paging_eDRX_Cycle_hf12_val,
	__si_s1ap__Paging_eDRX_Cycle_hf14_val,
	__si_s1ap__Paging_eDRX_Cycle_hf16_val,
	__si_s1ap__Paging_eDRX_Cycle_hf32_val,
	__si_s1ap__Paging_eDRX_Cycle_hf64_val,
	__si_s1ap__Paging_eDRX_Cycle_hf128_val,
	__si_s1ap__Paging_eDRX_Cycle_hf256_val
} SI_S1AP_DT_Paging_eDRX_Cycle;


// L:2561
typedef enum __si_s1ap_dt_Paging_eDRX_Cycle2
{
	Paging_eDRX_Cycle_hfhalf_val,
	Paging_eDRX_Cycle_hf1_val,
	Paging_eDRX_Cycle_hf2_val,
	Paging_eDRX_Cycle_hf4_val,
	Paging_eDRX_Cycle_hf6_val,
	Paging_eDRX_Cycle_hf8_val,
	Paging_eDRX_Cycle_hf10_val,
	Paging_eDRX_Cycle_hf12_val,
	Paging_eDRX_Cycle_hf14_val,
	Paging_eDRX_Cycle_hf16_val,
	Paging_eDRX_Cycle_hf32_val,
	Paging_eDRX_Cycle_hf64_val,
	Paging_eDRX_Cycle_hf128_val,
	Paging_eDRX_Cycle_hf256_val
} SI_S1AP_DT_Paging_eDRX_Cycle2;


// L:2588
typedef struct __si_s1ap_dt_Paging_eDRX_Cycle_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Paging_eDRX_Cycle_EnumProxy;


// PagingTimeWindow
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_PagingTimeWindow
{
	__si_s1ap__PagingTimeWindow_s1_val,
	__si_s1ap__PagingTimeWindow_s2_val,
	__si_s1ap__PagingTimeWindow_s3_val,
	__si_s1ap__PagingTimeWindow_s4_val,
	__si_s1ap__PagingTimeWindow_s5_val,
	__si_s1ap__PagingTimeWindow_s6_val,
	__si_s1ap__PagingTimeWindow_s7_val,
	__si_s1ap__PagingTimeWindow_s8_val,
	__si_s1ap__PagingTimeWindow_s9_val,
	__si_s1ap__PagingTimeWindow_s10_val,
	__si_s1ap__PagingTimeWindow_s11_val,
	__si_s1ap__PagingTimeWindow_s12_val,
	__si_s1ap__PagingTimeWindow_s13_val,
	__si_s1ap__PagingTimeWindow_s14_val,
	__si_s1ap__PagingTimeWindow_s15_val,
	__si_s1ap__PagingTimeWindow_s16_val
} SI_S1AP_DT_PagingTimeWindow;


// L:2561
typedef enum __si_s1ap_dt_PagingTimeWindow2
{
	PagingTimeWindow_s1_val,
	PagingTimeWindow_s2_val,
	PagingTimeWindow_s3_val,
	PagingTimeWindow_s4_val,
	PagingTimeWindow_s5_val,
	PagingTimeWindow_s6_val,
	PagingTimeWindow_s7_val,
	PagingTimeWindow_s8_val,
	PagingTimeWindow_s9_val,
	PagingTimeWindow_s10_val,
	PagingTimeWindow_s11_val,
	PagingTimeWindow_s12_val,
	PagingTimeWindow_s13_val,
	PagingTimeWindow_s14_val,
	PagingTimeWindow_s15_val,
	PagingTimeWindow_s16_val
} SI_S1AP_DT_PagingTimeWindow2;


// L:2588
typedef struct __si_s1ap_dt_PagingTimeWindow_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_PagingTimeWindow_EnumProxy;


// Paging-eDRXInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Paging_eDRXInformation
{
	uint8_t selected_epaging_eDRX_Cycle;
	int extSelected_epaging_eDRX_Cycle;

	uint8_t selected_epagingTimeWindow;
	int extSelected_epagingTimeWindow;
	int isPresent_pagingTimeWindow;

} SI_S1AP_DT_Paging_eDRXInformation;


// PagingDRX
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_PagingDRX
{
	__si_s1ap__PagingDRX_v32_val,
	__si_s1ap__PagingDRX_v64_val,
	__si_s1ap__PagingDRX_v128_val,
	__si_s1ap__PagingDRX_v256_val
} SI_S1AP_DT_PagingDRX;


// L:2561
typedef enum __si_s1ap_dt_PagingDRX2
{
	PagingDRX_v32_val,
	PagingDRX_v64_val,
	PagingDRX_v128_val,
	PagingDRX_v256_val
} SI_S1AP_DT_PagingDRX2;


// L:2588
typedef struct __si_s1ap_dt_PagingDRX_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_PagingDRX_EnumProxy;


// PagingPriority
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_PagingPriority
{
	__si_s1ap__PagingPriority_priolevel1_val,
	__si_s1ap__PagingPriority_priolevel2_val,
	__si_s1ap__PagingPriority_priolevel3_val,
	__si_s1ap__PagingPriority_priolevel4_val,
	__si_s1ap__PagingPriority_priolevel5_val,
	__si_s1ap__PagingPriority_priolevel6_val,
	__si_s1ap__PagingPriority_priolevel7_val,
	__si_s1ap__PagingPriority_priolevel8_val
} SI_S1AP_DT_PagingPriority;


// L:2561
typedef enum __si_s1ap_dt_PagingPriority2
{
	PagingPriority_priolevel1_val,
	PagingPriority_priolevel2_val,
	PagingPriority_priolevel3_val,
	PagingPriority_priolevel4_val,
	PagingPriority_priolevel5_val,
	PagingPriority_priolevel6_val,
	PagingPriority_priolevel7_val,
	PagingPriority_priolevel8_val
} SI_S1AP_DT_PagingPriority2;


// L:2588
typedef struct __si_s1ap_dt_PagingPriority_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_PagingPriority_EnumProxy;


// PagingProbabilityInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_PagingProbabilityInformation
{
	__si_s1ap__PagingProbabilityInformation_p00_val,
	__si_s1ap__PagingProbabilityInformation_p05_val,
	__si_s1ap__PagingProbabilityInformation_p10_val,
	__si_s1ap__PagingProbabilityInformation_p15_val,
	__si_s1ap__PagingProbabilityInformation_p20_val,
	__si_s1ap__PagingProbabilityInformation_p25_val,
	__si_s1ap__PagingProbabilityInformation_p30_val,
	__si_s1ap__PagingProbabilityInformation_p35_val,
	__si_s1ap__PagingProbabilityInformation_p40_val,
	__si_s1ap__PagingProbabilityInformation_p45_val,
	__si_s1ap__PagingProbabilityInformation_p50_val,
	__si_s1ap__PagingProbabilityInformation_p55_val,
	__si_s1ap__PagingProbabilityInformation_p60_val,
	__si_s1ap__PagingProbabilityInformation_p65_val,
	__si_s1ap__PagingProbabilityInformation_p70_val,
	__si_s1ap__PagingProbabilityInformation_p75_val,
	__si_s1ap__PagingProbabilityInformation_p80_val,
	__si_s1ap__PagingProbabilityInformation_p85_val,
	__si_s1ap__PagingProbabilityInformation_p90_val,
	__si_s1ap__PagingProbabilityInformation_p95_val,
	__si_s1ap__PagingProbabilityInformation_p100_val
} SI_S1AP_DT_PagingProbabilityInformation;


// L:2561
typedef enum __si_s1ap_dt_PagingProbabilityInformation2
{
	PagingProbabilityInformation_p00_val,
	PagingProbabilityInformation_p05_val,
	PagingProbabilityInformation_p10_val,
	PagingProbabilityInformation_p15_val,
	PagingProbabilityInformation_p20_val,
	PagingProbabilityInformation_p25_val,
	PagingProbabilityInformation_p30_val,
	PagingProbabilityInformation_p35_val,
	PagingProbabilityInformation_p40_val,
	PagingProbabilityInformation_p45_val,
	PagingProbabilityInformation_p50_val,
	PagingProbabilityInformation_p55_val,
	PagingProbabilityInformation_p60_val,
	PagingProbabilityInformation_p65_val,
	PagingProbabilityInformation_p70_val,
	PagingProbabilityInformation_p75_val,
	PagingProbabilityInformation_p80_val,
	PagingProbabilityInformation_p85_val,
	PagingProbabilityInformation_p90_val,
	PagingProbabilityInformation_p95_val,
	PagingProbabilityInformation_p100_val
} SI_S1AP_DT_PagingProbabilityInformation2;


// L:2588
typedef struct __si_s1ap_dt_PagingProbabilityInformation_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_PagingProbabilityInformation_EnumProxy;


// PagingCause
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_PagingCause
{
	__si_s1ap__PagingCause_voice_val
} SI_S1AP_DT_PagingCause;


// L:2561
typedef enum __si_s1ap_dt_PagingCause2
{
	PagingCause_voice_val
} SI_S1AP_DT_PagingCause2;


// L:2588
typedef struct __si_s1ap_dt_PagingCause_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_PagingCause_EnumProxy;


// PC5QoSFlowList
//SEQUENCE OF PC5QoSFlowItem, MIN=1, MAX=maxnoofPC5QoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_PC5QoSFlowList
{
	SI_LinkedList * PC5QoSFlowItem;
} SI_S1AP_DT_PC5QoSFlowList;


// PC5QoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_PC5QoSParameters
{
	SI_S1AP_DT_PC5QoSFlowList * pc5QoSFlowList;

	unsigned long long int pc5LinkAggregatedBitRates;
	int isPresent_pc5LinkAggregatedBitRates;

} SI_S1AP_DT_PC5QoSParameters;


// PC5FlowBitRates
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_PC5FlowBitRates
{
	unsigned long long int guaranteedFlowBitRate;

	unsigned long long int maximumFlowBitRate;

} SI_S1AP_DT_PC5FlowBitRates;


// Range
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_Range
{
	__si_s1ap__Range_m50_val,
	__si_s1ap__Range_m80_val,
	__si_s1ap__Range_m180_val,
	__si_s1ap__Range_m200_val,
	__si_s1ap__Range_m350_val,
	__si_s1ap__Range_m400_val,
	__si_s1ap__Range_m500_val,
	__si_s1ap__Range_m700_val,
	__si_s1ap__Range_m1000_val
} SI_S1AP_DT_Range;


// L:2561
typedef enum __si_s1ap_dt_Range2
{
	Range_m50_val,
	Range_m80_val,
	Range_m180_val,
	Range_m200_val,
	Range_m350_val,
	Range_m400_val,
	Range_m500_val,
	Range_m700_val,
	Range_m1000_val
} SI_S1AP_DT_Range2;


// L:2588
typedef struct __si_s1ap_dt_Range_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_Range_EnumProxy;


// PC5QoSFlowItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_PC5QoSFlowItem
{
	unsigned long long int pQI;

	SI_S1AP_DT_PC5FlowBitRates * pc5FlowBitRates;
	int isPresent_pc5FlowBitRates;

	uint8_t selected_erange;
	int extSelected_erange;
	int isPresent_range;

} SI_S1AP_DT_PC5QoSFlowItem;


// PendingDataIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_PendingDataIndication
{
	__si_s1ap__PendingDataIndication_true_val
} SI_S1AP_DT_PendingDataIndication;


// L:2561
typedef enum __si_s1ap_dt_PendingDataIndication2
{
	PendingDataIndication_true_val
} SI_S1AP_DT_PendingDataIndication2;


// L:2588
typedef struct __si_s1ap_dt_PendingDataIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_PendingDataIndication_EnumProxy;


// Port-Number
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Port_Number
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Port_Number;

// ProSeDirectDiscovery
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ProSeDirectDiscovery
{
	__si_s1ap__ProSeDirectDiscovery_authorized_val,
	__si_s1ap__ProSeDirectDiscovery_not_authorized_val
} SI_S1AP_DT_ProSeDirectDiscovery;


// L:2561
typedef enum __si_s1ap_dt_ProSeDirectDiscovery2
{
	ProSeDirectDiscovery_authorized_val,
	ProSeDirectDiscovery_not_authorized_val
} SI_S1AP_DT_ProSeDirectDiscovery2;


// L:2588
typedef struct __si_s1ap_dt_ProSeDirectDiscovery_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ProSeDirectDiscovery_EnumProxy;


// ProSeDirectCommunication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ProSeDirectCommunication
{
	__si_s1ap__ProSeDirectCommunication_authorized_val,
	__si_s1ap__ProSeDirectCommunication_not_authorized_val
} SI_S1AP_DT_ProSeDirectCommunication;


// L:2561
typedef enum __si_s1ap_dt_ProSeDirectCommunication2
{
	ProSeDirectCommunication_authorized_val,
	ProSeDirectCommunication_not_authorized_val
} SI_S1AP_DT_ProSeDirectCommunication2;


// L:2588
typedef struct __si_s1ap_dt_ProSeDirectCommunication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ProSeDirectCommunication_EnumProxy;


// ProSeAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ProSeAuthorized
{
	uint8_t selected_eproSeDirectDiscovery;
	int extSelected_eproSeDirectDiscovery;
	int isPresent_proSeDirectDiscovery;

	uint8_t selected_eproSeDirectCommunication;
	int extSelected_eproSeDirectCommunication;
	int isPresent_proSeDirectCommunication;

} SI_S1AP_DT_ProSeAuthorized;


// ProSeUEtoNetworkRelaying
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ProSeUEtoNetworkRelaying
{
	__si_s1ap__ProSeUEtoNetworkRelaying_authorized_val,
	__si_s1ap__ProSeUEtoNetworkRelaying_not_authorized_val
} SI_S1AP_DT_ProSeUEtoNetworkRelaying;


// L:2561
typedef enum __si_s1ap_dt_ProSeUEtoNetworkRelaying2
{
	ProSeUEtoNetworkRelaying_authorized_val,
	ProSeUEtoNetworkRelaying_not_authorized_val
} SI_S1AP_DT_ProSeUEtoNetworkRelaying2;


// L:2588
typedef struct __si_s1ap_dt_ProSeUEtoNetworkRelaying_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ProSeUEtoNetworkRelaying_EnumProxy;


// PS-ServiceNotAvailable
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_PS_ServiceNotAvailable
{
	__si_s1ap__PS_ServiceNotAvailable_ps_service_not_available_val
} SI_S1AP_DT_PS_ServiceNotAvailable;


// L:2561
typedef enum __si_s1ap_dt_PS_ServiceNotAvailable2
{
	PS_ServiceNotAvailable_ps_service_not_available_val
} SI_S1AP_DT_PS_ServiceNotAvailable2;


// L:2588
typedef struct __si_s1ap_dt_PS_ServiceNotAvailable_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_PS_ServiceNotAvailable_EnumProxy;


// RACSIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_RACSIndication
{
	__si_s1ap__RACSIndication_true_val
} SI_S1AP_DT_RACSIndication;


// L:2561
typedef enum __si_s1ap_dt_RACSIndication2
{
	RACSIndication_true_val
} SI_S1AP_DT_RACSIndication2;


// L:2588
typedef struct __si_s1ap_dt_RACSIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_RACSIndication_EnumProxy;


// ReceiveStatusOfULPDCPSDUsExtended
// BITSTRING,BIT STRING(SIZE(1..16384))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_ReceiveStatusOfULPDCPSDUsExtended
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsExtended;

// ReceiveStatusOfULPDCPSDUsPDCP-SNlength18
// BITSTRING,BIT STRING(SIZE(1..131072))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18;

// RecommendedCellItem_timeStayedInCell
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_RecommendedCellItem_timeStayedInCell
{
	unsigned long long int data;
} SI_S1AP_DT_RecommendedCellItem_timeStayedInCell;

// RecommendedCellItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_RecommendedCellItem
{
	SI_S1AP_DT_EUTRAN_CGI * eUTRAN_CGI;

	unsigned long long int timeStayedInCell;
	int isPresent_timeStayedInCell;

} SI_S1AP_DT_RecommendedCellItem;


// RecommendedENBItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_RecommendedENBItem
{
	SI_S1AP_DT_MMEPagingTarget * mMEPagingTarget;

} SI_S1AP_DT_RecommendedENBItem;


// RelayNode-Indicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_RelayNode_Indicator
{
	__si_s1ap__RelayNode_Indicator_true_val
} SI_S1AP_DT_RelayNode_Indicator;


// L:2561
typedef enum __si_s1ap_dt_RelayNode_Indicator2
{
	RelayNode_Indicator_true_val
} SI_S1AP_DT_RelayNode_Indicator2;


// L:2588
typedef struct __si_s1ap_dt_RelayNode_Indicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_RelayNode_Indicator_EnumProxy;


// RAT-Restrictions
//SEQUENCE OF RAT-RestrictionsItem, MIN=1, MAX=maxnoofEPLMNsPlusOne  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_RAT_Restrictions
{
	SI_LinkedList * RAT_RestrictionsItem;
} SI_S1AP_DT_RAT_Restrictions;


// RATRestrictionsItem_rAT-RestrictionInformation
// BITSTRING,BIT STRING(SIZE(8,...))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_RATRestrictionsItem_rAT_RestrictionInformation
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_RATRestrictionsItem_rAT_RestrictionInformation;

// RAT-RestrictionsItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_RAT_RestrictionsItem
{
	SI_S1AP_DT_PLMNidentity * pLMNidentity;

	SI_S1AP_DT_RATRestrictionsItem_rAT_RestrictionInformation * rAT_RestrictionInformation;

} SI_S1AP_DT_RAT_RestrictionsItem;


// RAT-Type
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_RAT_Type
{
	__si_s1ap__RAT_Type_nbiot_val,
	__si_s1ap__RAT_Type_nbiot_leo_val_ext,
	__si_s1ap__RAT_Type_nbiot_meo_val_ext,
	__si_s1ap__RAT_Type_nbiot_geo_val_ext,
	__si_s1ap__RAT_Type_nbiot_othersat_val_ext,
	__si_s1ap__RAT_Type_eutran_leo_val_ext,
	__si_s1ap__RAT_Type_eutran_meo_val_ext,
	__si_s1ap__RAT_Type_eutran_geo_val_ext,
	__si_s1ap__RAT_Type_eutran_othersat_val_ext
} SI_S1AP_DT_RAT_Type;


// L:2561
typedef enum __si_s1ap_dt_RAT_Type2
{
	RAT_Type_nbiot_val,
	RAT_Type_nbiot_leo_val_ext,
	RAT_Type_nbiot_meo_val_ext,
	RAT_Type_nbiot_geo_val_ext,
	RAT_Type_nbiot_othersat_val_ext,
	RAT_Type_eutran_leo_val_ext,
	RAT_Type_eutran_meo_val_ext,
	RAT_Type_eutran_geo_val_ext,
	RAT_Type_eutran_othersat_val_ext
} SI_S1AP_DT_RAT_Type2;


// L:2588
typedef struct __si_s1ap_dt_RAT_Type_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_RAT_Type_EnumProxy;


// ReportArea
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ReportArea
{
	__si_s1ap__ReportArea_ecgi_val
} SI_S1AP_DT_ReportArea;


// L:2561
typedef enum __si_s1ap_dt_ReportArea2
{
	ReportArea_ecgi_val
} SI_S1AP_DT_ReportArea2;


// L:2588
typedef struct __si_s1ap_dt_ReportArea_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ReportArea_EnumProxy;


// RequestType
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_RequestType
{
	uint8_t selected_eeventType;
	int extSelected_eeventType;

	uint8_t selected_ereportArea;
	int extSelected_ereportArea;

} SI_S1AP_DT_RequestType;


// RequestTypeAdditionalInfo
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_RequestTypeAdditionalInfo
{
	__si_s1ap__RequestTypeAdditionalInfo_includePSCell_val
} SI_S1AP_DT_RequestTypeAdditionalInfo;


// L:2561
typedef enum __si_s1ap_dt_RequestTypeAdditionalInfo2
{
	RequestTypeAdditionalInfo_includePSCell_val
} SI_S1AP_DT_RequestTypeAdditionalInfo2;


// L:2588
typedef struct __si_s1ap_dt_RequestTypeAdditionalInfo_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_RequestTypeAdditionalInfo_EnumProxy;


// RIMInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_RIMInformation
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_RIMInformation;

// RNC-ID
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_RNC_ID
{
	unsigned long long int data;
} SI_S1AP_DT_RNC_ID;

// TargetRNC-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TargetRNC_ID
{
	SI_S1AP_DT_LAI * lAI;

	SI_S1AP_DT_RAC * rAC;
	int isPresent_rAC;

	unsigned long long int rNC_ID;

	unsigned long long int extendedRNC_ID;
	int isPresent_extendedRNC_ID;

} SI_S1AP_DT_TargetRNC_ID;


// RIMRoutingAddress_eHRPD-Sector-ID
// OCTETSTRING,OCTET STRING(SIZE(16))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_RIMRoutingAddress_eHRPD_Sector_ID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_RIMRoutingAddress_eHRPD_Sector_ID;

// RIMRoutingAddress
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_RIMRoutingAddress
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_GERAN_Cell_ID * gERAN_Cell_ID;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_TargetRNC_ID * targetRNC_ID_ext;

		// ParserName = OCTETSTRING - NonEP false;
		SI_S1AP_DT_RIMRoutingAddress_eHRPD_Sector_ID * eHRPD_Sector_ID_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_RIMRoutingAddress;


// RIMTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_RIMTransfer
{
	SI_S1AP_DT_RIMInformation * rIMInformation;

	SI_S1AP_DT_RIMRoutingAddress * rIMRoutingAddress;
	int isPresent_rIMRoutingAddress;

} SI_S1AP_DT_RIMTransfer;


// RepetitionPeriod
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_RepetitionPeriod
{
	unsigned long long int data;
} SI_S1AP_DT_RepetitionPeriod;

// UE-RLF-Report-Container
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_UE_RLF_Report_Container
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_UE_RLF_Report_Container;

// UE-RLF-Report-Container-for-extended-bands
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_UE_RLF_Report_Container_for_extended_bands
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_UE_RLF_Report_Container_for_extended_bands;

// RLFReportInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_RLFReportInformation
{
	SI_S1AP_DT_UE_RLF_Report_Container * uE_RLF_Report_Container;

	SI_S1AP_DT_UE_RLF_Report_Container_for_extended_bands * uE_RLF_Report_Container_for_extended_bands;
	int isPresent_uE_RLF_Report_Container_for_extended_bands;

} SI_S1AP_DT_RLFReportInformation;


// RRC-Container
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_RRC_Container
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_RRC_Container;

// RRC-Establishment-Cause
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_RRC_Establishment_Cause
{
	__si_s1ap__RRC_Establishment_Cause_emergency_val,
	__si_s1ap__RRC_Establishment_Cause_highPriorityAccess_val,
	__si_s1ap__RRC_Establishment_Cause_mt_Access_val,
	__si_s1ap__RRC_Establishment_Cause_mo_Signalling_val,
	__si_s1ap__RRC_Establishment_Cause_mo_Data_val,
	__si_s1ap__RRC_Establishment_Cause_delay_TolerantAccess_val_ext,
	__si_s1ap__RRC_Establishment_Cause_mo_VoiceCall_val_ext,
	__si_s1ap__RRC_Establishment_Cause_mo_ExceptionData_val_ext
} SI_S1AP_DT_RRC_Establishment_Cause;


// L:2561
typedef enum __si_s1ap_dt_RRC_Establishment_Cause2
{
	RRC_Establishment_Cause_emergency_val,
	RRC_Establishment_Cause_highPriorityAccess_val,
	RRC_Establishment_Cause_mt_Access_val,
	RRC_Establishment_Cause_mo_Signalling_val,
	RRC_Establishment_Cause_mo_Data_val,
	RRC_Establishment_Cause_delay_TolerantAccess_val_ext,
	RRC_Establishment_Cause_mo_VoiceCall_val_ext,
	RRC_Establishment_Cause_mo_ExceptionData_val_ext
} SI_S1AP_DT_RRC_Establishment_Cause2;


// L:2588
typedef struct __si_s1ap_dt_RRC_Establishment_Cause_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_RRC_Establishment_Cause_EnumProxy;


// ECGIListForRestart
//SEQUENCE OF EUTRAN-CGI, MIN=1, MAX=maxnoofCellsforRestart  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ECGIListForRestart
{
	SI_LinkedList * EUTRAN_CGI;
} SI_S1AP_DT_ECGIListForRestart;


// Routing-ID
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_Routing_ID
{
	unsigned long long int data;
} SI_S1AP_DT_Routing_ID;

// SecurityKey
// BITSTRING,BIT STRING(SIZE(256))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_SecurityKey
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_SecurityKey;

// SecurityContext_nextHopChainingCount
// INTEGER,INTEGER(0..7),MIN=0,MAX=7  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_SecurityContext_nextHopChainingCount
{
	unsigned long long int data;
} SI_S1AP_DT_SecurityContext_nextHopChainingCount;

// SecurityContext
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SecurityContext
{
	unsigned long long int nextHopChainingCount;

	SI_S1AP_DT_SecurityKey * nextHopParameter;

} SI_S1AP_DT_SecurityContext;


// SecondaryRATType
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SecondaryRATType
{
	__si_s1ap__SecondaryRATType_nR_val,
	__si_s1ap__SecondaryRATType_unlicensed_val_ext
} SI_S1AP_DT_SecondaryRATType;


// L:2561
typedef enum __si_s1ap_dt_SecondaryRATType2
{
	SecondaryRATType_nR_val,
	SecondaryRATType_unlicensed_val_ext
} SI_S1AP_DT_SecondaryRATType2;


// L:2588
typedef struct __si_s1ap_dt_SecondaryRATType_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SecondaryRATType_EnumProxy;


// SecondaryRATDataUsageRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SecondaryRATDataUsageRequest
{
	__si_s1ap__SecondaryRATDataUsageRequest_requested_val
} SI_S1AP_DT_SecondaryRATDataUsageRequest;


// L:2561
typedef enum __si_s1ap_dt_SecondaryRATDataUsageRequest2
{
	SecondaryRATDataUsageRequest_requested_val
} SI_S1AP_DT_SecondaryRATDataUsageRequest2;


// L:2588
typedef struct __si_s1ap_dt_SecondaryRATDataUsageRequest_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SecondaryRATDataUsageRequest_EnumProxy;


// SecondaryRATDataUsageReportList
//SEQUENCE OF ProtocolIE-SingleContainer{{SecondaryRATDataUsageReportItemIEs} }, MIN=1, MAX= maxnoofE-RABs  ADT=3  DT=1
// L:2200
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReportList
{
	SI_LinkedList * list;
} SI_S1AP_DT_SecondaryRATDataUsageReportList;


// SecondaryRATDataUsageReportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReportItem
{
	unsigned long long int e_RAB_ID;

	uint8_t selected_esecondaryRATType;
	int extSelected_esecondaryRATType;

	SI_S1AP_DT_E_RABUsageReportList * e_RABUsageReportList;

} SI_S1AP_DT_SecondaryRATDataUsageReportItem;


// SecurityIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SecurityIndication
{
	uint8_t selected_eintegrityProtectionIndication;
	int extSelected_eintegrityProtectionIndication;

} SI_S1AP_DT_SecurityIndication;


// SensorMeasConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SensorMeasConfig
{
	__si_s1ap__SensorMeasConfig_setup_val
} SI_S1AP_DT_SensorMeasConfig;


// L:2561
typedef enum __si_s1ap_dt_SensorMeasConfig2
{
	SensorMeasConfig_setup_val
} SI_S1AP_DT_SensorMeasConfig2;


// L:2588
typedef struct __si_s1ap_dt_SensorMeasConfig_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SensorMeasConfig_EnumProxy;


// SensorNameConfig_uncompensatedBarometricConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SensorNameConfig_uncompensatedBarometricConfig
{
	__si_s1ap__SensorNameConfig_uncompensatedBarometricConfig_true_val
} SI_S1AP_DT_SensorNameConfig_uncompensatedBarometricConfig;


// L:2561
typedef enum __si_s1ap_dt_SensorNameConfig_uncompensatedBarometricConfig2
{
	SensorNameConfig_uncompensatedBarometricConfig_true_val
} SI_S1AP_DT_SensorNameConfig_uncompensatedBarometricConfig2;


// L:2588
typedef struct __si_s1ap_dt_SensorNameConfig_uncompensatedBarometricConfig_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SensorNameConfig_uncompensatedBarometricConfig_EnumProxy;


// SensorNameConfig
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_SensorNameConfig
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t uncompensatedBarometricConfig;

		// ParserName =  - NonEP true;
		SI_S1AP_DT_PDU_SensorNameConfig_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_SensorNameConfig;


// SensorMeasConfigNameItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SensorMeasConfigNameItem
{
	SI_S1AP_DT_SensorNameConfig * sensorNameConfig;

} SI_S1AP_DT_SensorMeasConfigNameItem;


// SensorMeasConfigNameList
//SEQUENCE OF SensorMeasConfigNameItem, MIN=1, MAX=maxnoofSensorName  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_SensorMeasConfigNameList
{
	SI_LinkedList * SensorMeasConfigNameItem;
} SI_S1AP_DT_SensorMeasConfigNameList;


// SensorMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SensorMeasurementConfiguration
{
	uint8_t selected_esensorMeasConfig;
	int extSelected_esensorMeasConfig;

	SI_S1AP_DT_SensorMeasConfigNameList * sensorMeasConfigNameList;
	int isPresent_sensorMeasConfigNameList;

} SI_S1AP_DT_SensorMeasurementConfiguration;


// SerialNumber
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_SerialNumber
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_SerialNumber;

// ServiceType
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ServiceType
{
	__si_s1ap__ServiceType_qMC_for_streaming_service_val,
	__si_s1ap__ServiceType_qMC_for_MTSI_service_val
} SI_S1AP_DT_ServiceType;


// L:2561
typedef enum __si_s1ap_dt_ServiceType2
{
	ServiceType_qMC_for_streaming_service_val,
	ServiceType_qMC_for_MTSI_service_val
} SI_S1AP_DT_ServiceType2;


// L:2588
typedef struct __si_s1ap_dt_ServiceType_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ServiceType_EnumProxy;


// SONInformationReport
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_SONInformationReport
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_RLFReportInformation * rLFReportInformation;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_SONInformationReport;


// TargeteNB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TargeteNB_ID
{
	SI_S1AP_DT_Global_ENB_ID * global_ENB_ID;

	SI_S1AP_DT_TAI * selected_TAI;

} SI_S1AP_DT_TargeteNB_ID;


// SourceeNB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SourceeNB_ID
{
	SI_S1AP_DT_Global_ENB_ID * global_ENB_ID;

	SI_S1AP_DT_TAI * selected_TAI;

} SI_S1AP_DT_SourceeNB_ID;


// SONConfigurationTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SONConfigurationTransfer
{
	SI_S1AP_DT_TargeteNB_ID * targeteNB_ID;

	SI_S1AP_DT_SourceeNB_ID * sourceeNB_ID;

	SI_S1AP_DT_SONInformation * sONInformation;

} SI_S1AP_DT_SONConfigurationTransfer;


// StratumLevel
// INTEGER,INTEGER(0..3,...),MIN=0,MAX=3  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_StratumLevel
{
	unsigned long long int data;
} SI_S1AP_DT_StratumLevel;

// SynchronisationInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SynchronisationInformation
{
	unsigned long long int sourceStratumLevel;
	int isPresent_sourceStratumLevel;

	SI_S1AP_DT_ListeningSubframePattern * listeningSubframePattern;
	int isPresent_listeningSubframePattern;

	SI_S1AP_DT_ECGI_List * aggressoreCGI_List;
	int isPresent_aggressoreCGI_List;

} SI_S1AP_DT_SynchronisationInformation;


// Source-ToTarget-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Source_ToTarget_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Source_ToTarget_TransparentContainer;

// SourceBSS-ToTargetBSS-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_SourceBSS_ToTargetBSS_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_SourceBSS_ToTargetBSS_TransparentContainer;

// SRVCCOperationNotPossible
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SRVCCOperationNotPossible
{
	__si_s1ap__SRVCCOperationNotPossible_notPossible_val
} SI_S1AP_DT_SRVCCOperationNotPossible;


// L:2561
typedef enum __si_s1ap_dt_SRVCCOperationNotPossible2
{
	SRVCCOperationNotPossible_notPossible_val
} SI_S1AP_DT_SRVCCOperationNotPossible2;


// L:2588
typedef struct __si_s1ap_dt_SRVCCOperationNotPossible_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SRVCCOperationNotPossible_EnumProxy;


// SRVCCOperationPossible
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SRVCCOperationPossible
{
	__si_s1ap__SRVCCOperationPossible_possible_val
} SI_S1AP_DT_SRVCCOperationPossible;


// L:2561
typedef enum __si_s1ap_dt_SRVCCOperationPossible2
{
	SRVCCOperationPossible_possible_val
} SI_S1AP_DT_SRVCCOperationPossible2;


// L:2588
typedef struct __si_s1ap_dt_SRVCCOperationPossible_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SRVCCOperationPossible_EnumProxy;


// SRVCCHOIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SRVCCHOIndication
{
	__si_s1ap__SRVCCHOIndication_pSandCS_val,
	__si_s1ap__SRVCCHOIndication_cSonly_val
} SI_S1AP_DT_SRVCCHOIndication;


// L:2561
typedef enum __si_s1ap_dt_SRVCCHOIndication2
{
	SRVCCHOIndication_pSandCS_val,
	SRVCCHOIndication_cSonly_val
} SI_S1AP_DT_SRVCCHOIndication2;


// L:2588
typedef struct __si_s1ap_dt_SRVCCHOIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SRVCCHOIndication_EnumProxy;


// SourceNgRanNode-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SourceNgRanNode_ID
{
	SI_S1AP_DT_Global_RAN_NODE_ID * global_RAN_NODE_ID;

	SI_S1AP_DT_FiveGSTAI * selected_TAI;

} SI_S1AP_DT_SourceNgRanNode_ID;


//TODO: DataType ->SourceNodeID-ExtensionIE<- Got NULL  L:7941

// SourceNodeID-Extension
// ADT=0  DT=1 Container
// L:4288
typedef struct __si_s1ap_dt_SourceNodeID_Extension
{
	// Got SingleContainer L:4310
	//SI_S1AP_DT_SourceNodeID_ExtensionIE * sourceNodeIDExtensionIE;
} SI_S1AP_DT_SourceNodeID_Extension;


// SourceNodeID
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_SourceNodeID
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_SourceNgRanNode_ID * sourceNgRanNode_ID;

		// ParserName = CONTAINER - NonEP false;
		SI_S1AP_DT_SourceNodeID_Extension * sourceNodeID_Extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_SourceNodeID;


// SubscriberProfileIDforRFP
// INTEGER,INTEGER(1..256),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_SubscriberProfileIDforRFP
{
	unsigned long long int data;
} SI_S1AP_DT_SubscriberProfileIDforRFP;

// UE-HistoryInformation
//SEQUENCE OF LastVisitedCell-Item, MIN=1, MAX=maxnoofCellsinUEHistoryInfo  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_UE_HistoryInformation
{
	SI_LinkedList * LastVisitedCell_Item;
} SI_S1AP_DT_UE_HistoryInformation;


// SourceeNB-ToTargeteNB-TransparentContainer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SourceeNB_ToTargeteNB_TransparentContainer
{
	SI_S1AP_DT_RRC_Container * rRC_Container;

	SI_S1AP_DT_E_RABInformationList * e_RABInformationList;
	int isPresent_e_RABInformationList;

	SI_S1AP_DT_EUTRAN_CGI * targetCell_ID;

	unsigned long long int subscriberProfileIDforRFP;
	int isPresent_subscriberProfileIDforRFP;

	SI_S1AP_DT_UE_HistoryInformation * uE_HistoryInformation;

} SI_S1AP_DT_SourceeNB_ToTargeteNB_TransparentContainer;


// SourceRNC-ToTargetRNC-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_SourceRNC_ToTargetRNC_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_SourceRNC_ToTargetRNC_TransparentContainer;

// SourceNgRanNode-ToTargetNgRanNode-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer;

// ServedGUMMEIs
//SEQUENCE OF ServedGUMMEIsItem, MIN=1, MAX= maxnoofRATs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ServedGUMMEIs
{
	SI_LinkedList * ServedGUMMEIsItem;
} SI_S1AP_DT_ServedGUMMEIs;


// ServedPLMNs
//SEQUENCE OF PLMNidentity, MIN=1, MAX= maxnoofPLMNsPerMME  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ServedPLMNs
{
	SI_LinkedList * PLMNidentity;
} SI_S1AP_DT_ServedPLMNs;


// ServedGroupIDs
//SEQUENCE OF MME-Group-ID, MIN=1, MAX= maxnoofGroupIDs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ServedGroupIDs
{
	SI_LinkedList * MME_Group_ID;
} SI_S1AP_DT_ServedGroupIDs;


// ServedMMECs
//SEQUENCE OF MME-Code, MIN=1, MAX= maxnoofMMECs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ServedMMECs
{
	SI_LinkedList * MME_Code;
} SI_S1AP_DT_ServedMMECs;


// ServedGUMMEIsItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ServedGUMMEIsItem
{
	SI_S1AP_DT_ServedPLMNs * servedPLMNs;

	SI_S1AP_DT_ServedGroupIDs * servedGroupIDs;

	SI_S1AP_DT_ServedMMECs * servedMMECs;

} SI_S1AP_DT_ServedGUMMEIsItem;


// SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator
{
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator_periodically_val,
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator_ondemand_val
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator;


// L:2561
typedef enum __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator2
{
	SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator_periodically_val,
	SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator_ondemand_val
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator2;


// L:2588
typedef struct __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator_EnumProxy;


// SubscriptionBasedUEDifferentiationInfo_periodicTime
// INTEGER,INTEGER(1..3600,...),MIN=1,MAX=3600  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_periodicTime
{
	unsigned long long int data;
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_periodicTime;

// SubscriptionBasedUEDifferentiationInfo_stationaryIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_stationaryIndication
{
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_stationaryIndication_stationary_val,
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_stationaryIndication_mobile_val
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_stationaryIndication;


// L:2561
typedef enum __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_stationaryIndication2
{
	SubscriptionBasedUEDifferentiationInfo_stationaryIndication_stationary_val,
	SubscriptionBasedUEDifferentiationInfo_stationaryIndication_mobile_val
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_stationaryIndication2;


// L:2588
typedef struct __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_stationaryIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_stationaryIndication_EnumProxy;


// SubscriptionBasedUEDifferentiationInfo_trafficProfile
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_trafficProfile
{
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_trafficProfile_single_packet_val,
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_trafficProfile_dual_packets_val,
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_trafficProfile_multiple_packets_val
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_trafficProfile;


// L:2561
typedef enum __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_trafficProfile2
{
	SubscriptionBasedUEDifferentiationInfo_trafficProfile_single_packet_val,
	SubscriptionBasedUEDifferentiationInfo_trafficProfile_dual_packets_val,
	SubscriptionBasedUEDifferentiationInfo_trafficProfile_multiple_packets_val
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_trafficProfile2;


// L:2588
typedef struct __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_trafficProfile_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_trafficProfile_EnumProxy;


// SubscriptionBasedUEDifferentiationInfo_batteryIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_batteryIndication
{
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_batteryIndication_battery_powered_val,
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_batteryIndication_battery_powered_not_rechargeable_or_replaceable_val,
	__si_s1ap__SubscriptionBasedUEDifferentiationInfo_batteryIndication_not_battery_powered_val
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_batteryIndication;


// L:2561
typedef enum __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_batteryIndication2
{
	SubscriptionBasedUEDifferentiationInfo_batteryIndication_battery_powered_val,
	SubscriptionBasedUEDifferentiationInfo_batteryIndication_battery_powered_not_rechargeable_or_replaceable_val,
	SubscriptionBasedUEDifferentiationInfo_batteryIndication_not_battery_powered_val
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_batteryIndication2;


// L:2588
typedef struct __si_s1ap_dt_SubscriptionBasedUEDifferentiationInfo_batteryIndication_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_batteryIndication_EnumProxy;


// ScheduledCommunicationTime_dayofWeek
// BITSTRING,BIT STRING(SIZE(7))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_ScheduledCommunicationTime_dayofWeek
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_ScheduledCommunicationTime_dayofWeek;

// ScheduledCommunicationTime_timeofDayStart
// INTEGER,INTEGER(0..86399,...),MIN=0,MAX=86399  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ScheduledCommunicationTime_timeofDayStart
{
	unsigned long long int data;
} SI_S1AP_DT_ScheduledCommunicationTime_timeofDayStart;

// ScheduledCommunicationTime_timeofDayEnd
// INTEGER,INTEGER(0..86399,...),MIN=0,MAX=86399  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_ScheduledCommunicationTime_timeofDayEnd
{
	unsigned long long int data;
} SI_S1AP_DT_ScheduledCommunicationTime_timeofDayEnd;

// ScheduledCommunicationTime
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ScheduledCommunicationTime
{
	SI_S1AP_DT_ScheduledCommunicationTime_dayofWeek * dayofWeek;
	int isPresent_dayofWeek;

	unsigned long long int timeofDayStart;
	int isPresent_timeofDayStart;

	unsigned long long int timeofDayEnd;
	int isPresent_timeofDayEnd;

} SI_S1AP_DT_ScheduledCommunicationTime;


// Subscription-Based-UE-DifferentiationInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_Subscription_Based_UE_DifferentiationInfo
{
	uint8_t selected_eperiodicCommunicationIndicator;
	int extSelected_eperiodicCommunicationIndicator;
	int isPresent_periodicCommunicationIndicator;

	unsigned long long int periodicTime;
	int isPresent_periodicTime;

	SI_S1AP_DT_ScheduledCommunicationTime * scheduledCommunicationTime;
	int isPresent_scheduledCommunicationTime;

	uint8_t selected_estationaryIndication;
	int extSelected_estationaryIndication;
	int isPresent_stationaryIndication;

	uint8_t selected_etrafficProfile;
	int extSelected_etrafficProfile;
	int isPresent_trafficProfile;

	uint8_t selected_ebatteryIndication;
	int extSelected_ebatteryIndication;
	int isPresent_batteryIndication;

} SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo;


// SupportedTAs-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_SupportedTAs_Item
{
	SI_S1AP_DT_TAC * tAC;

	SI_S1AP_DT_BPLMNs * broadcastPLMNs;

} SI_S1AP_DT_SupportedTAs_Item;


// SynchronisationStatus
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_SynchronisationStatus
{
	__si_s1ap__SynchronisationStatus_synchronous_val,
	__si_s1ap__SynchronisationStatus_asynchronous_val
} SI_S1AP_DT_SynchronisationStatus;


// L:2561
typedef enum __si_s1ap_dt_SynchronisationStatus2
{
	SynchronisationStatus_synchronous_val,
	SynchronisationStatus_asynchronous_val
} SI_S1AP_DT_SynchronisationStatus2;


// L:2588
typedef struct __si_s1ap_dt_SynchronisationStatus_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_SynchronisationStatus_EnumProxy;


// TimeSynchronisationInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TimeSynchronisationInfo
{
	unsigned long long int stratumLevel;

	uint8_t selected_esynchronisationStatus;
	int extSelected_esynchronisationStatus;

} SI_S1AP_DT_TimeSynchronisationInfo;


// S-TMSI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_S_TMSI
{
	SI_S1AP_DT_MME_Code * mMEC;

	SI_S1AP_DT_M_TMSI * m_TMSI;

} SI_S1AP_DT_S_TMSI;


// TAIListforWarning
//SEQUENCE OF TAI, MIN=1, MAX=maxnoofTAIforWarning  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TAIListforWarning
{
	SI_LinkedList * TAI;
} SI_S1AP_DT_TAIListforWarning;


// CompletedCellinTAI
//SEQUENCE OF CompletedCellinTAI-Item, MIN=1, MAX=maxnoofCellinTAI  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_CompletedCellinTAI
{
	SI_LinkedList * CompletedCellinTAI_Item;
} SI_S1AP_DT_CompletedCellinTAI;


// TAI-Broadcast-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TAI_Broadcast_Item
{
	SI_S1AP_DT_TAI * tAI;

	SI_S1AP_DT_CompletedCellinTAI * completedCellinTAI;

} SI_S1AP_DT_TAI_Broadcast_Item;


// TAI-Cancelled-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TAI_Cancelled_Item
{
	SI_S1AP_DT_TAI * tAI;

	SI_S1AP_DT_CancelledCellinTAI * cancelledCellinTAI;

} SI_S1AP_DT_TAI_Cancelled_Item;


// CompletedCellinTAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CompletedCellinTAI_Item
{
	SI_S1AP_DT_EUTRAN_CGI * eCGI;

} SI_S1AP_DT_CompletedCellinTAI_Item;


// TBCD-STRING
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_TBCD_STRING
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_TBCD_STRING;

// TargetNgRanNode-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TargetNgRanNode_ID
{
	SI_S1AP_DT_Global_RAN_NODE_ID * global_RAN_NODE_ID;

	SI_S1AP_DT_FiveGSTAI * selected_TAI;

} SI_S1AP_DT_TargetNgRanNode_ID;


// TargetID
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_TargetID
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_TargeteNB_ID * targeteNB_ID;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_TargetRNC_ID * targetRNC_ID;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_CGI * cGI;

		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_TargetNgRanNode_ID * targetgNgRanNode_ID_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_TargetID;


// TargeteNB-ToSourceeNB-TransparentContainer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TargeteNB_ToSourceeNB_TransparentContainer
{
	SI_S1AP_DT_RRC_Container * rRC_Container;

} SI_S1AP_DT_TargeteNB_ToSourceeNB_TransparentContainer;


// Target-ToSource-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_Target_ToSource_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_Target_ToSource_TransparentContainer;

// TargetRNC-ToSourceRNC-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_TargetRNC_ToSourceRNC_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_TargetRNC_ToSourceRNC_TransparentContainer;

// TargetBSS-ToSourceBSS-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_TargetBSS_ToSourceBSS_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_TargetBSS_ToSourceBSS_TransparentContainer;

// TargetNgRanNode-ToSourceNgRanNode-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer;

// HandoverWindowStart
// INTEGER,INTEGER(0.. 1048575),MIN=0,MAX=1048575  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_HandoverWindowStart
{
	unsigned long long int data;
} SI_S1AP_DT_HandoverWindowStart;

// HandoverWindowDuration
// INTEGER,INTEGER(1..6000),MIN=1,MAX=6000  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_HandoverWindowDuration
{
	unsigned long long int data;
} SI_S1AP_DT_HandoverWindowDuration;

// TimeBasedHandoverInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TimeBasedHandoverInformation
{
	unsigned long long int hOWindowStart;

	unsigned long long int hOWindowDuration;

} SI_S1AP_DT_TimeBasedHandoverInformation;


// TimeToWait
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_TimeToWait
{
	__si_s1ap__TimeToWait_v1s_val,
	__si_s1ap__TimeToWait_v2s_val,
	__si_s1ap__TimeToWait_v5s_val,
	__si_s1ap__TimeToWait_v10s_val,
	__si_s1ap__TimeToWait_v20s_val,
	__si_s1ap__TimeToWait_v60s_val
} SI_S1AP_DT_TimeToWait;


// L:2561
typedef enum __si_s1ap_dt_TimeToWait2
{
	TimeToWait_v1s_val,
	TimeToWait_v2s_val,
	TimeToWait_v5s_val,
	TimeToWait_v10s_val,
	TimeToWait_v20s_val,
	TimeToWait_v60s_val
} SI_S1AP_DT_TimeToWait2;


// L:2588
typedef struct __si_s1ap_dt_TimeToWait_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_TimeToWait_EnumProxy;


// Time-UE-StayedInCell-EnhancedGranularity
// INTEGER,INTEGER(0..40950),MIN=0,MAX=40950  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_Time_UE_StayedInCell_EnhancedGranularity
{
	unsigned long long int data;
} SI_S1AP_DT_Time_UE_StayedInCell_EnhancedGranularity;

// TimeSinceSecondaryNodeRelease
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_TimeSinceSecondaryNodeRelease
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_TimeSinceSecondaryNodeRelease;

// TransportLayerAddress
// BITSTRING,BIT STRING(SIZE(1..160,...))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_TransportLayerAddress
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_TransportLayerAddress;

// TransportInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TransportInformation
{
	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * uL_GTP_TEID;

} SI_S1AP_DT_TransportInformation;


// E-UTRAN-Trace-ID
// OCTETSTRING,OCTET STRING(SIZE(8))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_E_UTRAN_Trace_ID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_E_UTRAN_Trace_ID;

// TraceDepth
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_TraceDepth
{
	__si_s1ap__TraceDepth_minimum_val,
	__si_s1ap__TraceDepth_medium_val,
	__si_s1ap__TraceDepth_maximum_val,
	__si_s1ap__TraceDepth_minimumWithoutVendorSpecificExtension_val,
	__si_s1ap__TraceDepth_mediumWithoutVendorSpecificExtension_val,
	__si_s1ap__TraceDepth_maximumWithoutVendorSpecificExtension_val
} SI_S1AP_DT_TraceDepth;


// L:2561
typedef enum __si_s1ap_dt_TraceDepth2
{
	TraceDepth_minimum_val,
	TraceDepth_medium_val,
	TraceDepth_maximum_val,
	TraceDepth_minimumWithoutVendorSpecificExtension_val,
	TraceDepth_mediumWithoutVendorSpecificExtension_val,
	TraceDepth_maximumWithoutVendorSpecificExtension_val
} SI_S1AP_DT_TraceDepth2;


// L:2588
typedef struct __si_s1ap_dt_TraceDepth_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_TraceDepth_EnumProxy;


// TraceActivation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TraceActivation
{
	SI_S1AP_DT_E_UTRAN_Trace_ID * e_UTRAN_Trace_ID;

	SI_S1AP_DT_InterfacesToTrace * interfacesToTrace;

	uint8_t selected_etraceDepth;
	int extSelected_etraceDepth;

	SI_S1AP_DT_TransportLayerAddress * traceCollectionEntityIPAddress;

} SI_S1AP_DT_TraceActivation;


// TrafficLoadReductionIndication
// INTEGER,INTEGER(1..99),MIN=1,MAX=99  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_TrafficLoadReductionIndication
{
	unsigned long long int data;
} SI_S1AP_DT_TrafficLoadReductionIndication;

// TunnelInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TunnelInformation
{
	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_Port_Number * uDP_Port_Number;
	int isPresent_uDP_Port_Number;

} SI_S1AP_DT_TunnelInformation;


// TAIListForRestart
//SEQUENCE OF TAI, MIN=1, MAX=maxnoofRestartTAIs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TAIListForRestart
{
	SI_LinkedList * TAI;
} SI_S1AP_DT_TAIListForRestart;


// UEAggregateMaximumBitrate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_UEAggregateMaximumBitrate
{
	unsigned long long int uEaggregateMaximumBitRateDL;

	unsigned long long int uEaggregateMaximumBitRateUL;

} SI_S1AP_DT_UEAggregateMaximumBitrate;


// UEAppLayerMeasConfig_containerForAppLayerMeasConfig
// OCTETSTRING,OCTET STRING(SIZE(1..1000))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_UEAppLayerMeasConfig_containerForAppLayerMeasConfig
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_UEAppLayerMeasConfig_containerForAppLayerMeasConfig;

// UEAppLayerMeasConfig
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_UEAppLayerMeasConfig
{
	SI_S1AP_DT_UEAppLayerMeasConfig_containerForAppLayerMeasConfig * containerForAppLayerMeasConfig;

	SI_S1AP_DT_AreaScopeOfQMC * areaScopeOfQMC;

} SI_S1AP_DT_UEAppLayerMeasConfig;


// UECapabilityInfoRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_UECapabilityInfoRequest
{
	__si_s1ap__UECapabilityInfoRequest_requested_val
} SI_S1AP_DT_UECapabilityInfoRequest;


// L:2561
typedef enum __si_s1ap_dt_UECapabilityInfoRequest2
{
	UECapabilityInfoRequest_requested_val
} SI_S1AP_DT_UECapabilityInfoRequest2;


// L:2588
typedef struct __si_s1ap_dt_UECapabilityInfoRequest_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_UECapabilityInfoRequest_EnumProxy;


// UE-RetentionInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_UE_RetentionInformation
{
	__si_s1ap__UE_RetentionInformation_ues_retained_val
} SI_S1AP_DT_UE_RetentionInformation;


// L:2561
typedef enum __si_s1ap_dt_UE_RetentionInformation2
{
	UE_RetentionInformation_ues_retained_val
} SI_S1AP_DT_UE_RetentionInformation2;


// L:2588
typedef struct __si_s1ap_dt_UE_RetentionInformation_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_UE_RetentionInformation_EnumProxy;


// UE-S1AP-ID-pair
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_UE_S1AP_ID_pair
{
	unsigned long long int mME_UE_S1AP_ID;

	unsigned long long int eNB_UE_S1AP_ID;

} SI_S1AP_DT_UE_S1AP_ID_pair;


// UE-S1AP-IDs
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_UE_S1AP_IDs
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_UE_S1AP_ID_pair * uE_S1AP_ID_pair;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int mME_UE_S1AP_ID;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_UE_S1AP_IDs;


//TODO: DataType ->ProtocolExtensionContainer{{UE-associatedLogicalS1-ConnectionItemExtIEs}}<- Got NULL  L:7941

// UE-associatedLogicalS1-ConnectionItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionItem
{
	unsigned long long int mME_UE_S1AP_ID;
	int isPresent_mME_UE_S1AP_ID;

	unsigned long long int eNB_UE_S1AP_ID;
	int isPresent_eNB_UE_S1AP_ID;

} SI_S1AP_DT_UE_associatedLogicalS1_ConnectionItem;


// UEIdentityIndexValue
// BITSTRING,BIT STRING(SIZE(10))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_UEIdentityIndexValue
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_UEIdentityIndexValue;

// UE-HistoryInformationFromTheUE
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_UE_HistoryInformationFromTheUE
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_UE_HistoryInformationFromTheUE;

// UEPagingID
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_UEPagingID
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_S_TMSI * s_TMSI;

		// ParserName = OCTETSTRING - NonEP false;
		SI_S1AP_DT_IMSI * iMSI;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_UEPagingID;


// UERadioCapability
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_UERadioCapability
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_UERadioCapability;

// UERadioCapabilityForPaging
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_UERadioCapabilityForPaging
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_UERadioCapabilityForPaging;

// UERadioCapabilityID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_UERadioCapabilityID
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_UERadioCapabilityID;

// UESecurityCapabilities
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_UESecurityCapabilities
{
	SI_S1AP_DT_EncryptionAlgorithms * encryptionAlgorithms;

	SI_S1AP_DT_IntegrityProtectionAlgorithms * integrityProtectionAlgorithms;

} SI_S1AP_DT_UESecurityCapabilities;


// UESidelinkAggregateMaximumBitrate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_UESidelinkAggregateMaximumBitrate
{
	unsigned long long int uESidelinkAggregateMaximumBitRate;

} SI_S1AP_DT_UESidelinkAggregateMaximumBitrate;


// UE-Usage-Type
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5795
typedef struct __si_s1ap_dt_UE_Usage_Type
{
	unsigned long long int data;
} SI_S1AP_DT_UE_Usage_Type;

// UL-NAS-MAC
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_UL_NAS_MAC
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_UL_NAS_MAC;

// UL-NAS-Count
// BITSTRING,BIT STRING(SIZE(5))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_UL_NAS_Count
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_UL_NAS_Count;

// UL-CP-SecurityInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_UL_CP_SecurityInformation
{
	SI_S1AP_DT_UL_NAS_MAC * ul_NAS_MAC;

	SI_S1AP_DT_UL_NAS_Count * ul_NAS_Count;

} SI_S1AP_DT_UL_CP_SecurityInformation;


// UnlicensedSpectrumRestriction
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_UnlicensedSpectrumRestriction
{
	__si_s1ap__UnlicensedSpectrumRestriction_unlicensed_restricted_val
} SI_S1AP_DT_UnlicensedSpectrumRestriction;


// L:2561
typedef enum __si_s1ap_dt_UnlicensedSpectrumRestriction2
{
	UnlicensedSpectrumRestriction_unlicensed_restricted_val
} SI_S1AP_DT_UnlicensedSpectrumRestriction2;


// L:2588
typedef struct __si_s1ap_dt_UnlicensedSpectrumRestriction_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_UnlicensedSpectrumRestriction_EnumProxy;


// URI-Address
// PrintableString,VisibleString
// ADT=0  DT=2
// L:6261
typedef struct __si_s1ap_dt_URI_Address
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_URI_Address;

// UserLocationInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_UserLocationInformation
{
	SI_S1AP_DT_EUTRAN_CGI * eutran_cgi;

	SI_S1AP_DT_TAI * tai;

} SI_S1AP_DT_UserLocationInformation;


// UEUserPlaneCIoTSupportIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_UEUserPlaneCIoTSupportIndicator
{
	__si_s1ap__UEUserPlaneCIoTSupportIndicator_supported_val
} SI_S1AP_DT_UEUserPlaneCIoTSupportIndicator;


// L:2561
typedef enum __si_s1ap_dt_UEUserPlaneCIoTSupportIndicator2
{
	UEUserPlaneCIoTSupportIndicator_supported_val
} SI_S1AP_DT_UEUserPlaneCIoTSupportIndicator2;


// L:2588
typedef struct __si_s1ap_dt_UEUserPlaneCIoTSupportIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_UEUserPlaneCIoTSupportIndicator_EnumProxy;


// UE-Application-Layer-Measurement-Capability
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5379
typedef struct __si_s1ap_dt_UE_Application_Layer_Measurement_Capability
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_S1AP_DT_UE_Application_Layer_Measurement_Capability;

// VoiceSupportMatchIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_VoiceSupportMatchIndicator
{
	__si_s1ap__VoiceSupportMatchIndicator_supported_val,
	__si_s1ap__VoiceSupportMatchIndicator_not_supported_val
} SI_S1AP_DT_VoiceSupportMatchIndicator;


// L:2561
typedef enum __si_s1ap_dt_VoiceSupportMatchIndicator2
{
	VoiceSupportMatchIndicator_supported_val,
	VoiceSupportMatchIndicator_not_supported_val
} SI_S1AP_DT_VoiceSupportMatchIndicator2;


// L:2588
typedef struct __si_s1ap_dt_VoiceSupportMatchIndicator_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_VoiceSupportMatchIndicator_EnumProxy;


// V2XServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_V2XServicesAuthorized
{
	uint8_t selected_evehicleUE;
	int extSelected_evehicleUE;
	int isPresent_vehicleUE;

	uint8_t selected_epedestrianUE;
	int extSelected_epedestrianUE;
	int isPresent_pedestrianUE;

} SI_S1AP_DT_V2XServicesAuthorized;


// WarningAreaCoordinates
// OCTETSTRING,OCTET STRING(SIZE(1..1024))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_WarningAreaCoordinates
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_WarningAreaCoordinates;

// WarningAreaList
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_WarningAreaList
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_ECGIList * cellIDList;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_TAIListforWarning * trackingAreaListforWarning;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_EmergencyAreaIDList * emergencyAreaIDList;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_WarningAreaList;


// WarningType
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_WarningType
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_WarningType;

// WarningSecurityInfo
// OCTETSTRING,OCTET STRING(SIZE(50))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_WarningSecurityInfo
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_WarningSecurityInfo;

// WarningMessageContents
// OCTETSTRING,OCTET STRING(SIZE(1..9600))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_WarningMessageContents
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_WarningMessageContents;

// WLANMeasurementConfiguration_wlan-rssi
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_WLANMeasurementConfiguration_wlan_rssi
{
	__si_s1ap__WLANMeasurementConfiguration_wlan_rssi_true_val
} SI_S1AP_DT_WLANMeasurementConfiguration_wlan_rssi;


// L:2561
typedef enum __si_s1ap_dt_WLANMeasurementConfiguration_wlan_rssi2
{
	WLANMeasurementConfiguration_wlan_rssi_true_val
} SI_S1AP_DT_WLANMeasurementConfiguration_wlan_rssi2;


// L:2588
typedef struct __si_s1ap_dt_WLANMeasurementConfiguration_wlan_rssi_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_WLANMeasurementConfiguration_wlan_rssi_EnumProxy;


// WLANMeasurementConfiguration_wlan-rtt
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_WLANMeasurementConfiguration_wlan_rtt
{
	__si_s1ap__WLANMeasurementConfiguration_wlan_rtt_true_val
} SI_S1AP_DT_WLANMeasurementConfiguration_wlan_rtt;


// L:2561
typedef enum __si_s1ap_dt_WLANMeasurementConfiguration_wlan_rtt2
{
	WLANMeasurementConfiguration_wlan_rtt_true_val
} SI_S1AP_DT_WLANMeasurementConfiguration_wlan_rtt2;


// L:2588
typedef struct __si_s1ap_dt_WLANMeasurementConfiguration_wlan_rtt_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_WLANMeasurementConfiguration_wlan_rtt_EnumProxy;


// WLANMeasConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_WLANMeasConfig
{
	__si_s1ap__WLANMeasConfig_setup_val
} SI_S1AP_DT_WLANMeasConfig;


// L:2561
typedef enum __si_s1ap_dt_WLANMeasConfig2
{
	WLANMeasConfig_setup_val
} SI_S1AP_DT_WLANMeasConfig2;


// L:2588
typedef struct __si_s1ap_dt_WLANMeasConfig_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_WLANMeasConfig_EnumProxy;


// WLANMeasConfigNameList
//SEQUENCE OF WLANName, MIN=1, MAX=maxnoofWLANName  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_WLANMeasConfigNameList
{
	SI_LinkedList * WLANName;
} SI_S1AP_DT_WLANMeasConfigNameList;


// WLANMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_WLANMeasurementConfiguration
{
	uint8_t selected_ewlanMeasConfig;
	int extSelected_ewlanMeasConfig;

	SI_S1AP_DT_WLANMeasConfigNameList * wlanMeasConfigNameList;
	int isPresent_wlanMeasConfigNameList;

	uint8_t selected_ewlan_rssi;
	int extSelected_ewlan_rssi;
	int isPresent_wlan_rssi;

	uint8_t selected_ewlan_rtt;
	int extSelected_ewlan_rtt;
	int isPresent_wlan_rtt;

} SI_S1AP_DT_WLANMeasurementConfiguration;


// WLANName
// OCTETSTRING,OCTET STRING(SIZE(1..32))
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_WLANName
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_WLANName;

// WUS-Assistance-Information
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_WUS_Assistance_Information
{
	uint8_t selected_epagingProbabilityInformation;
	int extSelected_epagingProbabilityInformation;

} SI_S1AP_DT_WUS_Assistance_Information;


// ENBX2ExtTLAs
//SEQUENCE OF ENBX2ExtTLA, MIN=1, MAX= maxnoofeNBX2ExtTLAs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ENBX2ExtTLAs
{
	SI_LinkedList * ENBX2ExtTLA;
} SI_S1AP_DT_ENBX2ExtTLAs;


// ENBX2GTPTLAs
//SEQUENCE OF TransportLayerAddress, MIN=1, MAX= maxnoofeNBX2GTPTLAs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ENBX2GTPTLAs
{
	SI_LinkedList * TransportLayerAddress;
} SI_S1AP_DT_ENBX2GTPTLAs;


// ENBX2ExtTLA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_ENBX2ExtTLA
{
	SI_S1AP_DT_TransportLayerAddress * iPsecTLA;
	int isPresent_iPsecTLA;

	SI_S1AP_DT_ENBX2GTPTLAs * gTPTLAa;
	int isPresent_gTPTLAa;

} SI_S1AP_DT_ENBX2ExtTLA;


// ENBIndirectX2TransportLayerAddresses
//SEQUENCE OF TransportLayerAddress, MIN=1, MAX=maxnoofeNBX2TLAs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_ENBIndirectX2TransportLayerAddresses
{
	SI_LinkedList * TransportLayerAddress;
} SI_S1AP_DT_ENBIndirectX2TransportLayerAddresses;


// ResetAll
// ADT=0  DT=1
// L:2535
typedef enum __si_s1ap_dt_ResetAll
{
	__si_s1ap__ResetAll_reset_all_val
} SI_S1AP_DT_ResetAll;


// L:2561
typedef enum __si_s1ap_dt_ResetAll2
{
	ResetAll_reset_all_val
} SI_S1AP_DT_ResetAll2;


// L:2588
typedef struct __si_s1ap_dt_ResetAll_EnumProxy
{
	uint8_t data;
} SI_S1AP_DT_ResetAll_EnumProxy;


// UE-associatedLogicalS1-ConnectionListRes
//SEQUENCE OF UE-associatedLogicalS1-ConnectionItemRes, MIN=1, MAX= maxnoofIndividualS1ConnectionsToReset  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionListRes
{
	SI_LinkedList * UE_associatedLogicalS1_ConnectionItemRes;
} SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListRes;


// ResetType
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_ResetType
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t s1_Interface;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListRes * partOfS1_Interface;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_ResetType;


// Inter-SystemInformationTransferType
// ADT=0  DT=1
// L:3805
typedef struct __si_s1ap_dt_Inter_SystemInformationTransferType
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_S1AP_DT_RIMTransfer * rIMTransfer;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_S1AP_DT_Inter_SystemInformationTransferType;


// E-RABDataForwardingItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABDataForwardingItem
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_TransportLayerAddress * dL_transportLayerAddress;
	int isPresent_dL_transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * dL_gTP_TEID;
	int isPresent_dL_gTP_TEID;

	SI_S1AP_DT_TransportLayerAddress * uL_TransportLayerAddress;
	int isPresent_uL_TransportLayerAddress;

	SI_S1AP_DT_GTP_TEID * uL_GTP_TEID;
	int isPresent_uL_GTP_TEID;

} SI_S1AP_DT_E_RABDataForwardingItem;


// E-RABToBeSetupItemHOReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABToBeSetupItemHOReq
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * gTP_TEID;

	SI_S1AP_DT_E_RABLevelQoSParameters * e_RABlevelQosParameters;

} SI_S1AP_DT_E_RABToBeSetupItemHOReq;


// E-RABAdmittedItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABAdmittedItem
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * gTP_TEID;

	SI_S1AP_DT_TransportLayerAddress * dL_transportLayerAddress;
	int isPresent_dL_transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * dL_gTP_TEID;
	int isPresent_dL_gTP_TEID;

	SI_S1AP_DT_TransportLayerAddress * uL_TransportLayerAddress;
	int isPresent_uL_TransportLayerAddress;

	SI_S1AP_DT_GTP_TEID * uL_GTP_TEID;
	int isPresent_uL_GTP_TEID;

} SI_S1AP_DT_E_RABAdmittedItem;


//TODO: DataType ->ProtocolExtensionContainer{{E-RABFailedToSetupItemHOReqAckExtIEs}}<- Got NULL  L:7941

// E-RABFailedToSetupItemHOReqAck
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABFailedToSetupItemHOReqAck
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_Cause * cause;

} SI_S1AP_DT_E_RABFailedToSetupItemHOReqAck;


// E-RABToBeSwitchedDLItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABToBeSwitchedDLItem
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * gTP_TEID;

} SI_S1AP_DT_E_RABToBeSwitchedDLItem;


// E-RABToBeSwitchedULItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABToBeSwitchedULItem
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * gTP_TEID;

} SI_S1AP_DT_E_RABToBeSwitchedULItem;


// E-RABToBeUpdatedItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABToBeUpdatedItem
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_SecurityIndication * securityIndication;
	int isPresent_securityIndication;

} SI_S1AP_DT_E_RABToBeUpdatedItem;


// E-RABToBeSetupListBearerSUReq
//SEQUENCE OF E-RABToBeSetupItemBearerSUReqIEs, MIN=1, MAX= maxnoofE-RABs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_E_RABToBeSetupListBearerSUReq
{
	SI_LinkedList * E_RABToBeSetupItemBearerSUReqIEs;
} SI_S1AP_DT_E_RABToBeSetupListBearerSUReq;


//TODO: DataType ->ProtocolExtensionContainer{{E-RABToBeSetupItemBearerSUReqExtIEs}}<- Got NULL  L:7941

// E-RABToBeSetupItemBearerSUReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABToBeSetupItemBearerSUReq
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_E_RABLevelQoSParameters * e_RABlevelQoSParameters;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * gTP_TEID;

	SI_S1AP_DT_NAS_PDU * nAS_PDU;

} SI_S1AP_DT_E_RABToBeSetupItemBearerSUReq;


// E-RABSetupListBearerSURes
//SEQUENCE OF E-RABSetupItemBearerSUResIEs, MIN=1, MAX= maxnoofE-RABs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_E_RABSetupListBearerSURes
{
	SI_LinkedList * E_RABSetupItemBearerSUResIEs;
} SI_S1AP_DT_E_RABSetupListBearerSURes;


//TODO: DataType ->ProtocolExtensionContainer{{E-RABSetupItemBearerSUResExtIEs}}<- Got NULL  L:7941

// E-RABSetupItemBearerSURes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABSetupItemBearerSURes
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * gTP_TEID;

} SI_S1AP_DT_E_RABSetupItemBearerSURes;


// E-RABToBeModifiedListBearerModReq
//SEQUENCE OF E-RABToBeModifiedItemBearerModReqIEs, MIN=1, MAX= maxnoofE-RABs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_E_RABToBeModifiedListBearerModReq
{
	SI_LinkedList * E_RABToBeModifiedItemBearerModReqIEs;
} SI_S1AP_DT_E_RABToBeModifiedListBearerModReq;


//TODO: DataType ->ProtocolExtensionContainer{{E-RABToBeModifyItemBearerModReqExtIEs}}<- Got NULL  L:7941

// E-RABToBeModifiedItemBearerModReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABToBeModifiedItemBearerModReq
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_E_RABLevelQoSParameters * e_RABLevelQoSParameters;

	SI_S1AP_DT_NAS_PDU * nAS_PDU;

} SI_S1AP_DT_E_RABToBeModifiedItemBearerModReq;


// E-RABModifyListBearerModRes
//SEQUENCE OF E-RABModifyItemBearerModResIEs, MIN=1, MAX= maxnoofE-RABs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_E_RABModifyListBearerModRes
{
	SI_LinkedList * E_RABModifyItemBearerModResIEs;
} SI_S1AP_DT_E_RABModifyListBearerModRes;


//TODO: DataType ->ProtocolExtensionContainer{{E-RABModifyItemBearerModResExtIEs}}<- Got NULL  L:7941

// E-RABModifyItemBearerModRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModRes
{
	unsigned long long int e_RAB_ID;

} SI_S1AP_DT_E_RABModifyItemBearerModRes;


// E-RABReleaseListBearerRelComp
//SEQUENCE OF E-RABReleaseItemBearerRelCompIEs, MIN=1, MAX= maxnoofE-RABs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_E_RABReleaseListBearerRelComp
{
	SI_LinkedList * E_RABReleaseItemBearerRelCompIEs;
} SI_S1AP_DT_E_RABReleaseListBearerRelComp;


//TODO: DataType ->ProtocolExtensionContainer{{E-RABReleaseItemBearerRelCompExtIEs}}<- Got NULL  L:7941

// E-RABReleaseItemBearerRelComp
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABReleaseItemBearerRelComp
{
	unsigned long long int e_RAB_ID;

} SI_S1AP_DT_E_RABReleaseItemBearerRelComp;


// E-RABToBeSetupListCtxtSUReq
//SEQUENCE OF E-RABToBeSetupItemCtxtSUReqIEs, MIN=1, MAX= maxnoofE-RABs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_E_RABToBeSetupListCtxtSUReq
{
	SI_LinkedList * E_RABToBeSetupItemCtxtSUReqIEs;
} SI_S1AP_DT_E_RABToBeSetupListCtxtSUReq;


//TODO: DataType ->ProtocolExtensionContainer{{E-RABToBeSetupItemCtxtSUReqExtIEs}}<- Got NULL  L:7941

// E-RABToBeSetupItemCtxtSUReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABToBeSetupItemCtxtSUReq
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_E_RABLevelQoSParameters * e_RABlevelQoSParameters;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * gTP_TEID;

	SI_S1AP_DT_NAS_PDU * nAS_PDU;
	int isPresent_nAS_PDU;

} SI_S1AP_DT_E_RABToBeSetupItemCtxtSUReq;


// E-RABSetupListCtxtSURes
//SEQUENCE OF E-RABSetupItemCtxtSUResIEs, MIN=1, MAX= maxnoofE-RABs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_E_RABSetupListCtxtSURes
{
	SI_LinkedList * E_RABSetupItemCtxtSUResIEs;
} SI_S1AP_DT_E_RABSetupListCtxtSURes;


//TODO: DataType ->ProtocolExtensionContainer{{E-RABSetupItemCtxtSUResExtIEs}}<- Got NULL  L:7941

// E-RABSetupItemCtxtSURes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABSetupItemCtxtSURes
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * gTP_TEID;

} SI_S1AP_DT_E_RABSetupItemCtxtSURes;


// TAIList
//SEQUENCE OF TAIItemIEs, MIN=1, MAX= maxnoofTAIs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_TAIList
{
	SI_LinkedList * TAIItemIEs;
} SI_S1AP_DT_TAIList;


//TODO: DataType ->ProtocolExtensionContainer{{TAIItemExtIEs}}<- Got NULL  L:7941

// TAIItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_TAIItem
{
	SI_S1AP_DT_TAI * tAI;

} SI_S1AP_DT_TAIItem;


// UE-associatedLogicalS1-ConnectionListResAck
//SEQUENCE OF UE-associatedLogicalS1-ConnectionItemResAck, MIN=1, MAX= maxnoofIndividualS1ConnectionsToReset  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionListResAck
{
	SI_LinkedList * UE_associatedLogicalS1_ConnectionItemResAck;
} SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListResAck;


// E-RABToBeModifiedItemBearerModInd
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABToBeModifiedItemBearerModInd
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * dL_GTP_TEID;

} SI_S1AP_DT_E_RABToBeModifiedItemBearerModInd;


// E-RABNotToBeModifiedItemBearerModInd
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABNotToBeModifiedItemBearerModInd
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_TransportLayerAddress * transportLayerAddress;

	SI_S1AP_DT_GTP_TEID * dL_GTP_TEID;

} SI_S1AP_DT_E_RABNotToBeModifiedItemBearerModInd;


// CSGMembershipInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_CSGMembershipInfo
{
	uint8_t selected_ecSGMembershipStatus;
	int extSelected_ecSGMembershipStatus;

	SI_S1AP_DT_CSG_Id * cSG_Id;

	uint8_t selected_ecellAccessMode;
	int extSelected_ecellAccessMode;
	int isPresent_cellAccessMode;

	SI_S1AP_DT_PLMNidentity * pLMNidentity;
	int isPresent_pLMNidentity;

} SI_S1AP_DT_CSGMembershipInfo;


// E-RABModifyListBearerModConf
//SEQUENCE OF E-RABModifyItemBearerModConfIEs, MIN=1, MAX= maxnoofE-RABs  ADT=0  DT=2
// L:2207
typedef struct __si_s1ap_dt_E_RABModifyListBearerModConf
{
	SI_LinkedList * E_RABModifyItemBearerModConfIEs;
} SI_S1AP_DT_E_RABModifyListBearerModConf;


//TODO: DataType ->ProtocolExtensionContainer{{E-RABModifyItemBearerModConfExtIEs}}<- Got NULL  L:7941

// E-RABModifyItemBearerModConf
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModConf
{
	unsigned long long int e_RAB_ID;

} SI_S1AP_DT_E_RABModifyItemBearerModConf;


// E-RABFailedToResumeItemResumeReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABFailedToResumeItemResumeReq
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_Cause * cause;

} SI_S1AP_DT_E_RABFailedToResumeItemResumeReq;


// E-RABFailedToResumeItemResumeRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_s1ap_dt_E_RABFailedToResumeItemResumeRes
{
	unsigned long long int e_RAB_ID;

	SI_S1AP_DT_Cause * cause;

} SI_S1AP_DT_E_RABFailedToResumeItemResumeRes;


// DefaultOctetString
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4911
typedef struct __si_s1ap_dt_DefaultOctetString
{
	unsigned char * data;
	unsigned int length;
} SI_S1AP_DT_DefaultOctetString;

//TODO: DataType -><- Got NULL  L:7577

void __si_s1ap_debug_Criticality( char * key, uint8_t eCriticality, int lvl);

int __si_s1ap_Encode_Criticality( uint8_t eCriticality, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Presence( char * key, uint8_t ePresence, int lvl);

int __si_s1ap_Encode_Presence( uint8_t ePresence, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PrivateIEID_local( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_PrivateIEID_local( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_PrivateIEID_local( SI_S1AP_DT_PrivateIEID_local * data);


void __si_s1ap_init_PrivateIE_ID( SI_S1AP_DT_PrivateIE_ID ** data);

void __si_s1ap_debug_PrivateIE_ID( char * key, SI_S1AP_DT_PrivateIE_ID * data, int lvl);

void __si_s1ap_memfree_PrivateIE_ID( SI_S1AP_DT_PrivateIE_ID * data);

int __si_s1ap_Encode_PrivateIE_ID( SI_S1AP_DT_PrivateIE_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ProcedureCode( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ProcedureCode( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ProcedureCode( SI_S1AP_DT_ProcedureCode * data);


void __si_s1ap_debug_ProtocolExtensionID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ProtocolExtensionID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ProtocolExtensionID( SI_S1AP_DT_ProtocolExtensionID * data);


void __si_s1ap_debug_ProtocolIE_ID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ProtocolIE_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ProtocolIE_ID( SI_S1AP_DT_ProtocolIE_ID * data);


void __si_s1ap_debug_TriggeringMessage( char * key, uint8_t eTriggeringMessage, int lvl);

int __si_s1ap_Encode_TriggeringMessage( uint8_t eTriggeringMessage, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NULL( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_NULL( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_NULL( SI_S1AP_DT_NULL * data);


void __si_s1ap_init_PLMNidentity( SI_S1AP_DT_PLMNidentity ** data);

void __si_s1ap_init_PLMNidentity2( SI_S1AP_DT_PLMNidentity ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_PLMNidentity( char * key, SI_S1AP_DT_PLMNidentity * data, int lvl);

void __si_s1ap_memfree_PLMNidentity( SI_S1AP_DT_PLMNidentity * data);

int __si_s1ap_Encode_PLMNidentity( SI_S1AP_DT_PLMNidentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MME_Group_ID( SI_S1AP_DT_MME_Group_ID ** data);

void __si_s1ap_init_MME_Group_ID2( SI_S1AP_DT_MME_Group_ID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_MME_Group_ID( char * key, SI_S1AP_DT_MME_Group_ID * data, int lvl);

void __si_s1ap_memfree_MME_Group_ID( SI_S1AP_DT_MME_Group_ID * data);

int __si_s1ap_Encode_MME_Group_ID( SI_S1AP_DT_MME_Group_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MME_Code( SI_S1AP_DT_MME_Code ** data);

void __si_s1ap_init_MME_Code2( SI_S1AP_DT_MME_Code ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_MME_Code( char * key, SI_S1AP_DT_MME_Code * data, int lvl);

void __si_s1ap_memfree_MME_Code( SI_S1AP_DT_MME_Code * data);

int __si_s1ap_Encode_MME_Code( SI_S1AP_DT_MME_Code * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_GUMMEI( SI_S1AP_DT_GUMMEI ** data);

void __si_s1ap_debug_GUMMEI( char * key, SI_S1AP_DT_GUMMEI * data, int lvl);

void __si_s1ap_memfree_GUMMEI( SI_S1AP_DT_GUMMEI * data);

int __si_s1ap_Encode_GUMMEI( SI_S1AP_DT_GUMMEI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_M_TMSI( SI_S1AP_DT_M_TMSI ** data);

void __si_s1ap_init_M_TMSI2( SI_S1AP_DT_M_TMSI ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_M_TMSI( char * key, SI_S1AP_DT_M_TMSI * data, int lvl);

void __si_s1ap_memfree_M_TMSI( SI_S1AP_DT_M_TMSI * data);

int __si_s1ap_Encode_M_TMSI( SI_S1AP_DT_M_TMSI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Additional_GUTI( SI_S1AP_DT_Additional_GUTI ** data);

void __si_s1ap_debug_Additional_GUTI( char * key, SI_S1AP_DT_Additional_GUTI * data, int lvl);

void __si_s1ap_memfree_Additional_GUTI( SI_S1AP_DT_Additional_GUTI * data);

int __si_s1ap_Encode_Additional_GUTI( SI_S1AP_DT_Additional_GUTI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_AdditionalRRMPriorityIndex( SI_S1AP_DT_AdditionalRRMPriorityIndex ** data);

void __si_s1ap_init_AdditionalRRMPriorityIndex2( SI_S1AP_DT_AdditionalRRMPriorityIndex ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_AdditionalRRMPriorityIndex( char * key, SI_S1AP_DT_AdditionalRRMPriorityIndex * data, int lvl);

void __si_s1ap_memfree_AdditionalRRMPriorityIndex( SI_S1AP_DT_AdditionalRRMPriorityIndex * data);

int __si_s1ap_Encode_AdditionalRRMPriorityIndex( SI_S1AP_DT_AdditionalRRMPriorityIndex * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_AerialUEsubscriptionInformation( char * key, uint8_t eAerialUEsubscriptionInformation, int lvl);

int __si_s1ap_Encode_AerialUEsubscriptionInformation( uint8_t eAerialUEsubscriptionInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellIdListforMDT( SI_S1AP_DT_CellIdListforMDT ** data);

void __si_s1ap_debug_CellIdListforMDT( char * key, SI_S1AP_DT_CellIdListforMDT * data, int lvl);

void __si_s1ap_memfree_CellIdListforMDT( SI_S1AP_DT_CellIdListforMDT * data);

int __si_s1ap_Encode_CellIdListforMDT( SI_S1AP_DT_CellIdListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellBasedMDT( SI_S1AP_DT_CellBasedMDT ** data);

void __si_s1ap_debug_CellBasedMDT( char * key, SI_S1AP_DT_CellBasedMDT * data, int lvl);

void __si_s1ap_memfree_CellBasedMDT( SI_S1AP_DT_CellBasedMDT * data);

int __si_s1ap_Encode_CellBasedMDT( SI_S1AP_DT_CellBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAListforMDT( SI_S1AP_DT_TAListforMDT ** data);

void __si_s1ap_debug_TAListforMDT( char * key, SI_S1AP_DT_TAListforMDT * data, int lvl);

void __si_s1ap_memfree_TAListforMDT( SI_S1AP_DT_TAListforMDT * data);

int __si_s1ap_Encode_TAListforMDT( SI_S1AP_DT_TAListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TABasedMDT( SI_S1AP_DT_TABasedMDT ** data);

void __si_s1ap_debug_TABasedMDT( char * key, SI_S1AP_DT_TABasedMDT * data, int lvl);

void __si_s1ap_memfree_TABasedMDT( SI_S1AP_DT_TABasedMDT * data);

int __si_s1ap_Encode_TABasedMDT( SI_S1AP_DT_TABasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAIListforMDT( SI_S1AP_DT_TAIListforMDT ** data);

void __si_s1ap_debug_TAIListforMDT( char * key, SI_S1AP_DT_TAIListforMDT * data, int lvl);

void __si_s1ap_memfree_TAIListforMDT( SI_S1AP_DT_TAIListforMDT * data);

int __si_s1ap_Encode_TAIListforMDT( SI_S1AP_DT_TAIListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAIBasedMDT( SI_S1AP_DT_TAIBasedMDT ** data);

void __si_s1ap_debug_TAIBasedMDT( char * key, SI_S1AP_DT_TAIBasedMDT * data, int lvl);

void __si_s1ap_memfree_TAIBasedMDT( SI_S1AP_DT_TAIBasedMDT * data);

int __si_s1ap_Encode_TAIBasedMDT( SI_S1AP_DT_TAIBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_AreaScopeOfMDT( SI_S1AP_DT_AreaScopeOfMDT ** data);

void __si_s1ap_debug_AreaScopeOfMDT( char * key, SI_S1AP_DT_AreaScopeOfMDT * data, int lvl);

void __si_s1ap_memfree_AreaScopeOfMDT( SI_S1AP_DT_AreaScopeOfMDT * data);

int __si_s1ap_Encode_AreaScopeOfMDT( SI_S1AP_DT_AreaScopeOfMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellIdListforQMC( SI_S1AP_DT_CellIdListforQMC ** data);

void __si_s1ap_debug_CellIdListforQMC( char * key, SI_S1AP_DT_CellIdListforQMC * data, int lvl);

void __si_s1ap_memfree_CellIdListforQMC( SI_S1AP_DT_CellIdListforQMC * data);

int __si_s1ap_Encode_CellIdListforQMC( SI_S1AP_DT_CellIdListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellBasedQMC( SI_S1AP_DT_CellBasedQMC ** data);

void __si_s1ap_debug_CellBasedQMC( char * key, SI_S1AP_DT_CellBasedQMC * data, int lvl);

void __si_s1ap_memfree_CellBasedQMC( SI_S1AP_DT_CellBasedQMC * data);

int __si_s1ap_Encode_CellBasedQMC( SI_S1AP_DT_CellBasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAListforQMC( SI_S1AP_DT_TAListforQMC ** data);

void __si_s1ap_debug_TAListforQMC( char * key, SI_S1AP_DT_TAListforQMC * data, int lvl);

void __si_s1ap_memfree_TAListforQMC( SI_S1AP_DT_TAListforQMC * data);

int __si_s1ap_Encode_TAListforQMC( SI_S1AP_DT_TAListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TABasedQMC( SI_S1AP_DT_TABasedQMC ** data);

void __si_s1ap_debug_TABasedQMC( char * key, SI_S1AP_DT_TABasedQMC * data, int lvl);

void __si_s1ap_memfree_TABasedQMC( SI_S1AP_DT_TABasedQMC * data);

int __si_s1ap_Encode_TABasedQMC( SI_S1AP_DT_TABasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAIListforQMC( SI_S1AP_DT_TAIListforQMC ** data);

void __si_s1ap_debug_TAIListforQMC( char * key, SI_S1AP_DT_TAIListforQMC * data, int lvl);

void __si_s1ap_memfree_TAIListforQMC( SI_S1AP_DT_TAIListforQMC * data);

int __si_s1ap_Encode_TAIListforQMC( SI_S1AP_DT_TAIListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAIBasedQMC( SI_S1AP_DT_TAIBasedQMC ** data);

void __si_s1ap_debug_TAIBasedQMC( char * key, SI_S1AP_DT_TAIBasedQMC * data, int lvl);

void __si_s1ap_memfree_TAIBasedQMC( SI_S1AP_DT_TAIBasedQMC * data);

int __si_s1ap_Encode_TAIBasedQMC( SI_S1AP_DT_TAIBasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_PLMNListforQMC( SI_S1AP_DT_PLMNListforQMC ** data);

void __si_s1ap_debug_PLMNListforQMC( char * key, SI_S1AP_DT_PLMNListforQMC * data, int lvl);

void __si_s1ap_memfree_PLMNListforQMC( SI_S1AP_DT_PLMNListforQMC * data);

int __si_s1ap_Encode_PLMNListforQMC( SI_S1AP_DT_PLMNListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_PLMNAreaBasedQMC( SI_S1AP_DT_PLMNAreaBasedQMC ** data);

void __si_s1ap_debug_PLMNAreaBasedQMC( char * key, SI_S1AP_DT_PLMNAreaBasedQMC * data, int lvl);

void __si_s1ap_memfree_PLMNAreaBasedQMC( SI_S1AP_DT_PLMNAreaBasedQMC * data);

int __si_s1ap_Encode_PLMNAreaBasedQMC( SI_S1AP_DT_PLMNAreaBasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_AreaScopeOfQMC( SI_S1AP_DT_AreaScopeOfQMC ** data);

void __si_s1ap_debug_AreaScopeOfQMC( char * key, SI_S1AP_DT_AreaScopeOfQMC * data, int lvl);

void __si_s1ap_memfree_AreaScopeOfQMC( SI_S1AP_DT_AreaScopeOfQMC * data);

int __si_s1ap_Encode_AreaScopeOfQMC( SI_S1AP_DT_AreaScopeOfQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PriorityLevel( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_PriorityLevel( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_PriorityLevel( SI_S1AP_DT_PriorityLevel * data);


void __si_s1ap_debug_Pre_emptionCapability( char * key, uint8_t ePre_emptionCapability, int lvl);

int __si_s1ap_Encode_Pre_emptionCapability( uint8_t ePre_emptionCapability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Pre_emptionVulnerability( char * key, uint8_t ePre_emptionVulnerability, int lvl);

int __si_s1ap_Encode_Pre_emptionVulnerability( uint8_t ePre_emptionVulnerability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_AllocationAndRetentionPriority( SI_S1AP_DT_AllocationAndRetentionPriority ** data);

void __si_s1ap_debug_AllocationAndRetentionPriority( char * key, SI_S1AP_DT_AllocationAndRetentionPriority * data, int lvl);

void __si_s1ap_memfree_AllocationAndRetentionPriority( SI_S1AP_DT_AllocationAndRetentionPriority * data);

int __si_s1ap_Encode_AllocationAndRetentionPriority( SI_S1AP_DT_AllocationAndRetentionPriority * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellIdentity( SI_S1AP_DT_CellIdentity ** data);

void __si_s1ap_init_CellIdentity2( SI_S1AP_DT_CellIdentity ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_CellIdentity( char * key, SI_S1AP_DT_CellIdentity * data, int lvl);

void __si_s1ap_memfree_CellIdentity( SI_S1AP_DT_CellIdentity * data);

int __si_s1ap_Encode_CellIdentity( SI_S1AP_DT_CellIdentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EUTRAN_CGI( SI_S1AP_DT_EUTRAN_CGI ** data);

void __si_s1ap_debug_EUTRAN_CGI( char * key, SI_S1AP_DT_EUTRAN_CGI * data, int lvl);

void __si_s1ap_memfree_EUTRAN_CGI( SI_S1AP_DT_EUTRAN_CGI * data);

int __si_s1ap_Encode_EUTRAN_CGI( SI_S1AP_DT_EUTRAN_CGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CELevel( SI_S1AP_DT_CELevel ** data);

void __si_s1ap_init_CELevel2( SI_S1AP_DT_CELevel ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_CELevel( char * key, SI_S1AP_DT_CELevel * data, int lvl);

void __si_s1ap_memfree_CELevel( SI_S1AP_DT_CELevel * data);

int __si_s1ap_Encode_CELevel( SI_S1AP_DT_CELevel * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellIdentifierAndCELevelForCECapableUEs( SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs ** data);

void __si_s1ap_debug_CellIdentifierAndCELevelForCECapableUEs( char * key, SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs * data, int lvl);

void __si_s1ap_memfree_CellIdentifierAndCELevelForCECapableUEs( SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs * data);

int __si_s1ap_Encode_CellIdentifierAndCELevelForCECapableUEs( SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_AssistanceDataForCECapableUEs( SI_S1AP_DT_AssistanceDataForCECapableUEs ** data);

void __si_s1ap_debug_AssistanceDataForCECapableUEs( char * key, SI_S1AP_DT_AssistanceDataForCECapableUEs * data, int lvl);

void __si_s1ap_memfree_AssistanceDataForCECapableUEs( SI_S1AP_DT_AssistanceDataForCECapableUEs * data);

int __si_s1ap_Encode_AssistanceDataForCECapableUEs( SI_S1AP_DT_AssistanceDataForCECapableUEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RecommendedCellList( SI_S1AP_DT_RecommendedCellList ** data);

void __si_s1ap_debug_RecommendedCellList( char * key, SI_S1AP_DT_RecommendedCellList * data, int lvl);

void __si_s1ap_memfree_RecommendedCellList( SI_S1AP_DT_RecommendedCellList * data);

int __si_s1ap_Encode_RecommendedCellList( SI_S1AP_DT_RecommendedCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RecommendedCellsForPaging( SI_S1AP_DT_RecommendedCellsForPaging ** data);

void __si_s1ap_debug_RecommendedCellsForPaging( char * key, SI_S1AP_DT_RecommendedCellsForPaging * data, int lvl);

void __si_s1ap_memfree_RecommendedCellsForPaging( SI_S1AP_DT_RecommendedCellsForPaging * data);

int __si_s1ap_Encode_RecommendedCellsForPaging( SI_S1AP_DT_RecommendedCellsForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_AssistanceDataForRecommendedCells( SI_S1AP_DT_AssistanceDataForRecommendedCells ** data);

void __si_s1ap_debug_AssistanceDataForRecommendedCells( char * key, SI_S1AP_DT_AssistanceDataForRecommendedCells * data, int lvl);

void __si_s1ap_memfree_AssistanceDataForRecommendedCells( SI_S1AP_DT_AssistanceDataForRecommendedCells * data);

int __si_s1ap_Encode_AssistanceDataForRecommendedCells( SI_S1AP_DT_AssistanceDataForRecommendedCells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PagingAttemptCount( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_PagingAttemptCount( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_PagingAttemptCount( SI_S1AP_DT_PagingAttemptCount * data);


void __si_s1ap_debug_IntendedNumberOfPagingAttempts( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_IntendedNumberOfPagingAttempts( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_IntendedNumberOfPagingAttempts( SI_S1AP_DT_IntendedNumberOfPagingAttempts * data);


void __si_s1ap_debug_NextPagingAreaScope( char * key, uint8_t eNextPagingAreaScope, int lvl);

int __si_s1ap_Encode_NextPagingAreaScope( uint8_t eNextPagingAreaScope, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_PagingAttemptInformation( SI_S1AP_DT_PagingAttemptInformation ** data);

void __si_s1ap_debug_PagingAttemptInformation( char * key, SI_S1AP_DT_PagingAttemptInformation * data, int lvl);

void __si_s1ap_memfree_PagingAttemptInformation( SI_S1AP_DT_PagingAttemptInformation * data);

int __si_s1ap_Encode_PagingAttemptInformation( SI_S1AP_DT_PagingAttemptInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_AssistanceDataForPaging( SI_S1AP_DT_AssistanceDataForPaging ** data);

void __si_s1ap_debug_AssistanceDataForPaging( char * key, SI_S1AP_DT_AssistanceDataForPaging * data, int lvl);

void __si_s1ap_memfree_AssistanceDataForPaging( SI_S1AP_DT_AssistanceDataForPaging * data);

int __si_s1ap_Encode_AssistanceDataForPaging( SI_S1AP_DT_AssistanceDataForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Bearers_SubjectToStatusTransferList( SI_S1AP_DT_Bearers_SubjectToStatusTransferList ** data);

void __si_s1ap_debug_Bearers_SubjectToStatusTransferList( char * key, SI_S1AP_DT_Bearers_SubjectToStatusTransferList * data, int lvl);

void __si_s1ap_memfree_Bearers_SubjectToStatusTransferList( SI_S1AP_DT_Bearers_SubjectToStatusTransferList * data);

int __si_s1ap_Encode_Bearers_SubjectToStatusTransferList( SI_S1AP_DT_Bearers_SubjectToStatusTransferList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_E_RAB_ID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_E_RAB_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_E_RAB_ID( SI_S1AP_DT_E_RAB_ID * data);


void __si_s1ap_debug_PDCP_SN( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_PDCP_SN( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_PDCP_SN( SI_S1AP_DT_PDCP_SN * data);


void __si_s1ap_debug_HFN( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_HFN( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_HFN( SI_S1AP_DT_HFN * data);


void __si_s1ap_init_COUNTvalue( SI_S1AP_DT_COUNTvalue ** data);

void __si_s1ap_debug_COUNTvalue( char * key, SI_S1AP_DT_COUNTvalue * data, int lvl);

void __si_s1ap_memfree_COUNTvalue( SI_S1AP_DT_COUNTvalue * data);

int __si_s1ap_Encode_COUNTvalue( SI_S1AP_DT_COUNTvalue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ReceiveStatusofULPDCPSDUs( SI_S1AP_DT_ReceiveStatusofULPDCPSDUs ** data);

void __si_s1ap_init_ReceiveStatusofULPDCPSDUs2( SI_S1AP_DT_ReceiveStatusofULPDCPSDUs ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_ReceiveStatusofULPDCPSDUs( char * key, SI_S1AP_DT_ReceiveStatusofULPDCPSDUs * data, int lvl);

void __si_s1ap_memfree_ReceiveStatusofULPDCPSDUs( SI_S1AP_DT_ReceiveStatusofULPDCPSDUs * data);

int __si_s1ap_Encode_ReceiveStatusofULPDCPSDUs( SI_S1AP_DT_ReceiveStatusofULPDCPSDUs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{Bearers-SubjectToStatusTransfer-ItemExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_Bearers_SubjectToStatusTransfer_Item( SI_S1AP_DT_Bearers_SubjectToStatusTransfer_Item ** data);

void __si_s1ap_debug_Bearers_SubjectToStatusTransfer_Item( char * key, SI_S1AP_DT_Bearers_SubjectToStatusTransfer_Item * data, int lvl);

void __si_s1ap_memfree_Bearers_SubjectToStatusTransfer_Item( SI_S1AP_DT_Bearers_SubjectToStatusTransfer_Item * data);

int __si_s1ap_Encode_Bearers_SubjectToStatusTransfer_Item( SI_S1AP_DT_Bearers_SubjectToStatusTransfer_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Bearers_SubjectToEarlyStatusTransferList( SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransferList ** data);

void __si_s1ap_debug_Bearers_SubjectToEarlyStatusTransferList( char * key, SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransferList * data, int lvl);

void __si_s1ap_memfree_Bearers_SubjectToEarlyStatusTransferList( SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransferList * data);

int __si_s1ap_Encode_Bearers_SubjectToEarlyStatusTransferList( SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransferList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PDCP_SNExtended( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_PDCP_SNExtended( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_PDCP_SNExtended( SI_S1AP_DT_PDCP_SNExtended * data);


void __si_s1ap_debug_HFNModified( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_HFNModified( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_HFNModified( SI_S1AP_DT_HFNModified * data);


void __si_s1ap_init_COUNTValueExtended( SI_S1AP_DT_COUNTValueExtended ** data);

void __si_s1ap_debug_COUNTValueExtended( char * key, SI_S1AP_DT_COUNTValueExtended * data, int lvl);

void __si_s1ap_memfree_COUNTValueExtended( SI_S1AP_DT_COUNTValueExtended * data);

int __si_s1ap_Encode_COUNTValueExtended( SI_S1AP_DT_COUNTValueExtended * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PDCP_SNlength18( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_PDCP_SNlength18( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_PDCP_SNlength18( SI_S1AP_DT_PDCP_SNlength18 * data);


void __si_s1ap_debug_HFNforPDCP_SNlength18( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_HFNforPDCP_SNlength18( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_HFNforPDCP_SNlength18( SI_S1AP_DT_HFNforPDCP_SNlength18 * data);


void __si_s1ap_init_COUNTvaluePDCP_SNlength18( SI_S1AP_DT_COUNTvaluePDCP_SNlength18 ** data);

void __si_s1ap_debug_COUNTvaluePDCP_SNlength18( char * key, SI_S1AP_DT_COUNTvaluePDCP_SNlength18 * data, int lvl);

void __si_s1ap_memfree_COUNTvaluePDCP_SNlength18( SI_S1AP_DT_COUNTvaluePDCP_SNlength18 * data);

int __si_s1ap_Encode_COUNTvaluePDCP_SNlength18( SI_S1AP_DT_COUNTvaluePDCP_SNlength18 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DLCOUNT_PDCP_SNlength( SI_S1AP_DT_DLCOUNT_PDCP_SNlength ** data);

void __si_s1ap_debug_DLCOUNT_PDCP_SNlength( char * key, SI_S1AP_DT_DLCOUNT_PDCP_SNlength * data, int lvl);

void __si_s1ap_memfree_DLCOUNT_PDCP_SNlength( SI_S1AP_DT_DLCOUNT_PDCP_SNlength * data);

int __si_s1ap_Encode_DLCOUNT_PDCP_SNlength( SI_S1AP_DT_DLCOUNT_PDCP_SNlength * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{Bearers-SubjectToEarlyStatusTransfer-ItemExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_Bearers_SubjectToEarlyStatusTransfer_Item( SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransfer_Item ** data);

void __si_s1ap_debug_Bearers_SubjectToEarlyStatusTransfer_Item( char * key, SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransfer_Item * data, int lvl);

void __si_s1ap_memfree_Bearers_SubjectToEarlyStatusTransfer_Item( SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransfer_Item * data);

int __si_s1ap_Encode_Bearers_SubjectToEarlyStatusTransfer_Item( SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransfer_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Bearers_SubjectToDLDiscardingList( SI_S1AP_DT_Bearers_SubjectToDLDiscardingList ** data);

void __si_s1ap_debug_Bearers_SubjectToDLDiscardingList( char * key, SI_S1AP_DT_Bearers_SubjectToDLDiscardingList * data, int lvl);

void __si_s1ap_memfree_Bearers_SubjectToDLDiscardingList( SI_S1AP_DT_Bearers_SubjectToDLDiscardingList * data);

int __si_s1ap_Encode_Bearers_SubjectToDLDiscardingList( SI_S1AP_DT_Bearers_SubjectToDLDiscardingList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DLDiscarding( SI_S1AP_DT_DLDiscarding ** data);

void __si_s1ap_debug_DLDiscarding( char * key, SI_S1AP_DT_DLDiscarding * data, int lvl);

void __si_s1ap_memfree_DLDiscarding( SI_S1AP_DT_DLDiscarding * data);

int __si_s1ap_Encode_DLDiscarding( SI_S1AP_DT_DLDiscarding * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{Bearers-SubjectToDLDiscarding-ItemExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_Bearers_SubjectToDLDiscarding_Item( SI_S1AP_DT_Bearers_SubjectToDLDiscarding_Item ** data);

void __si_s1ap_debug_Bearers_SubjectToDLDiscarding_Item( char * key, SI_S1AP_DT_Bearers_SubjectToDLDiscarding_Item * data, int lvl);

void __si_s1ap_memfree_Bearers_SubjectToDLDiscarding_Item( SI_S1AP_DT_Bearers_SubjectToDLDiscarding_Item * data);

int __si_s1ap_Encode_Bearers_SubjectToDLDiscarding_Item( SI_S1AP_DT_Bearers_SubjectToDLDiscarding_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_BearerType( char * key, uint8_t eBearerType, int lvl);

int __si_s1ap_Encode_BearerType( uint8_t eBearerType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_BitRate( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_BitRate( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_BitRate( SI_S1AP_DT_BitRate * data);


void __si_s1ap_debug_BluetoothMeasurementConfiguration_bt_rssi( char * key, uint8_t eBluetoothMeasurementConfiguration_bt_rssi, int lvl);

int __si_s1ap_Encode_BluetoothMeasurementConfiguration_bt_rssi( uint8_t eBluetoothMeasurementConfiguration_bt_rssi, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_BluetoothMeasConfig( char * key, uint8_t eBluetoothMeasConfig, int lvl);

int __si_s1ap_Encode_BluetoothMeasConfig( uint8_t eBluetoothMeasConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_BluetoothMeasConfigNameList( SI_S1AP_DT_BluetoothMeasConfigNameList ** data);

void __si_s1ap_debug_BluetoothMeasConfigNameList( char * key, SI_S1AP_DT_BluetoothMeasConfigNameList * data, int lvl);

void __si_s1ap_memfree_BluetoothMeasConfigNameList( SI_S1AP_DT_BluetoothMeasConfigNameList * data);

int __si_s1ap_Encode_BluetoothMeasConfigNameList( SI_S1AP_DT_BluetoothMeasConfigNameList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_BluetoothMeasurementConfiguration( SI_S1AP_DT_BluetoothMeasurementConfiguration ** data);

void __si_s1ap_debug_BluetoothMeasurementConfiguration( char * key, SI_S1AP_DT_BluetoothMeasurementConfiguration * data, int lvl);

void __si_s1ap_memfree_BluetoothMeasurementConfiguration( SI_S1AP_DT_BluetoothMeasurementConfiguration * data);

int __si_s1ap_Encode_BluetoothMeasurementConfiguration( SI_S1AP_DT_BluetoothMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_BluetoothName( SI_S1AP_DT_BluetoothName ** data);

void __si_s1ap_init_BluetoothName2( SI_S1AP_DT_BluetoothName ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_BluetoothName( char * key, SI_S1AP_DT_BluetoothName * data, int lvl);

void __si_s1ap_memfree_BluetoothName( SI_S1AP_DT_BluetoothName * data);

int __si_s1ap_Encode_BluetoothName( SI_S1AP_DT_BluetoothName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_BPLMNs( SI_S1AP_DT_BPLMNs ** data);

void __si_s1ap_debug_BPLMNs( char * key, SI_S1AP_DT_BPLMNs * data, int lvl);

void __si_s1ap_memfree_BPLMNs( SI_S1AP_DT_BPLMNs * data);

int __si_s1ap_Encode_BPLMNs( SI_S1AP_DT_BPLMNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellID_Cancelled( SI_S1AP_DT_CellID_Cancelled ** data);

void __si_s1ap_debug_CellID_Cancelled( char * key, SI_S1AP_DT_CellID_Cancelled * data, int lvl);

void __si_s1ap_memfree_CellID_Cancelled( SI_S1AP_DT_CellID_Cancelled * data);

int __si_s1ap_Encode_CellID_Cancelled( SI_S1AP_DT_CellID_Cancelled * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAI_Cancelled( SI_S1AP_DT_TAI_Cancelled ** data);

void __si_s1ap_debug_TAI_Cancelled( char * key, SI_S1AP_DT_TAI_Cancelled * data, int lvl);

void __si_s1ap_memfree_TAI_Cancelled( SI_S1AP_DT_TAI_Cancelled * data);

int __si_s1ap_Encode_TAI_Cancelled( SI_S1AP_DT_TAI_Cancelled * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EmergencyAreaID_Cancelled( SI_S1AP_DT_EmergencyAreaID_Cancelled ** data);

void __si_s1ap_debug_EmergencyAreaID_Cancelled( char * key, SI_S1AP_DT_EmergencyAreaID_Cancelled * data, int lvl);

void __si_s1ap_memfree_EmergencyAreaID_Cancelled( SI_S1AP_DT_EmergencyAreaID_Cancelled * data);

int __si_s1ap_Encode_EmergencyAreaID_Cancelled( SI_S1AP_DT_EmergencyAreaID_Cancelled * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_BroadcastCancelledAreaList( SI_S1AP_DT_BroadcastCancelledAreaList ** data);

void __si_s1ap_debug_BroadcastCancelledAreaList( char * key, SI_S1AP_DT_BroadcastCancelledAreaList * data, int lvl);

void __si_s1ap_memfree_BroadcastCancelledAreaList( SI_S1AP_DT_BroadcastCancelledAreaList * data);

int __si_s1ap_Encode_BroadcastCancelledAreaList( SI_S1AP_DT_BroadcastCancelledAreaList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellID_Broadcast( SI_S1AP_DT_CellID_Broadcast ** data);

void __si_s1ap_debug_CellID_Broadcast( char * key, SI_S1AP_DT_CellID_Broadcast * data, int lvl);

void __si_s1ap_memfree_CellID_Broadcast( SI_S1AP_DT_CellID_Broadcast * data);

int __si_s1ap_Encode_CellID_Broadcast( SI_S1AP_DT_CellID_Broadcast * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAI_Broadcast( SI_S1AP_DT_TAI_Broadcast ** data);

void __si_s1ap_debug_TAI_Broadcast( char * key, SI_S1AP_DT_TAI_Broadcast * data, int lvl);

void __si_s1ap_memfree_TAI_Broadcast( SI_S1AP_DT_TAI_Broadcast * data);

int __si_s1ap_Encode_TAI_Broadcast( SI_S1AP_DT_TAI_Broadcast * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EmergencyAreaID_Broadcast( SI_S1AP_DT_EmergencyAreaID_Broadcast ** data);

void __si_s1ap_debug_EmergencyAreaID_Broadcast( char * key, SI_S1AP_DT_EmergencyAreaID_Broadcast * data, int lvl);

void __si_s1ap_memfree_EmergencyAreaID_Broadcast( SI_S1AP_DT_EmergencyAreaID_Broadcast * data);

int __si_s1ap_Encode_EmergencyAreaID_Broadcast( SI_S1AP_DT_EmergencyAreaID_Broadcast * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_BroadcastCompletedAreaList( SI_S1AP_DT_BroadcastCompletedAreaList ** data);

void __si_s1ap_debug_BroadcastCompletedAreaList( char * key, SI_S1AP_DT_BroadcastCompletedAreaList * data, int lvl);

void __si_s1ap_memfree_BroadcastCompletedAreaList( SI_S1AP_DT_BroadcastCompletedAreaList * data);

int __si_s1ap_Encode_BroadcastCompletedAreaList( SI_S1AP_DT_BroadcastCompletedAreaList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CancelledCellinEAI( SI_S1AP_DT_CancelledCellinEAI ** data);

void __si_s1ap_debug_CancelledCellinEAI( char * key, SI_S1AP_DT_CancelledCellinEAI * data, int lvl);

void __si_s1ap_memfree_CancelledCellinEAI( SI_S1AP_DT_CancelledCellinEAI * data);

int __si_s1ap_Encode_CancelledCellinEAI( SI_S1AP_DT_CancelledCellinEAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NumberOfBroadcasts( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_NumberOfBroadcasts( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_NumberOfBroadcasts( SI_S1AP_DT_NumberOfBroadcasts * data);


void __si_s1ap_init_CancelledCellinEAI_Item( SI_S1AP_DT_CancelledCellinEAI_Item ** data);

void __si_s1ap_debug_CancelledCellinEAI_Item( char * key, SI_S1AP_DT_CancelledCellinEAI_Item * data, int lvl);

void __si_s1ap_memfree_CancelledCellinEAI_Item( SI_S1AP_DT_CancelledCellinEAI_Item * data);

int __si_s1ap_Encode_CancelledCellinEAI_Item( SI_S1AP_DT_CancelledCellinEAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CancelledCellinTAI( SI_S1AP_DT_CancelledCellinTAI ** data);

void __si_s1ap_debug_CancelledCellinTAI( char * key, SI_S1AP_DT_CancelledCellinTAI * data, int lvl);

void __si_s1ap_memfree_CancelledCellinTAI( SI_S1AP_DT_CancelledCellinTAI * data);

int __si_s1ap_Encode_CancelledCellinTAI( SI_S1AP_DT_CancelledCellinTAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CancelledCellinTAI_Item( SI_S1AP_DT_CancelledCellinTAI_Item ** data);

void __si_s1ap_debug_CancelledCellinTAI_Item( char * key, SI_S1AP_DT_CancelledCellinTAI_Item * data, int lvl);

void __si_s1ap_memfree_CancelledCellinTAI_Item( SI_S1AP_DT_CancelledCellinTAI_Item * data);

int __si_s1ap_Encode_CancelledCellinTAI_Item( SI_S1AP_DT_CancelledCellinTAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CauseRadioNetwork( char * key, uint8_t eCauseRadioNetwork, int lvl);

int __si_s1ap_Encode_CauseRadioNetwork( uint8_t eCauseRadioNetwork, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CauseTransport( char * key, uint8_t eCauseTransport, int lvl);

int __si_s1ap_Encode_CauseTransport( uint8_t eCauseTransport, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CauseNas( char * key, uint8_t eCauseNas, int lvl);

int __si_s1ap_Encode_CauseNas( uint8_t eCauseNas, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CauseProtocol( char * key, uint8_t eCauseProtocol, int lvl);

int __si_s1ap_Encode_CauseProtocol( uint8_t eCauseProtocol, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CauseMisc( char * key, uint8_t eCauseMisc, int lvl);

int __si_s1ap_Encode_CauseMisc( uint8_t eCauseMisc, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Cause( SI_S1AP_DT_Cause ** data);

void __si_s1ap_debug_Cause( char * key, SI_S1AP_DT_Cause * data, int lvl);

void __si_s1ap_memfree_Cause( SI_S1AP_DT_Cause * data);

int __si_s1ap_Encode_Cause( SI_S1AP_DT_Cause * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CellAccessMode( char * key, uint8_t eCellAccessMode, int lvl);

int __si_s1ap_Encode_CellAccessMode( uint8_t eCellAccessMode, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CE_mode_B_SupportIndicator( char * key, uint8_t eCE_mode_B_SupportIndicator, int lvl);

int __si_s1ap_Encode_CE_mode_B_SupportIndicator( uint8_t eCE_mode_B_SupportIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellID_Broadcast_Item( SI_S1AP_DT_CellID_Broadcast_Item ** data);

void __si_s1ap_debug_CellID_Broadcast_Item( char * key, SI_S1AP_DT_CellID_Broadcast_Item * data, int lvl);

void __si_s1ap_memfree_CellID_Broadcast_Item( SI_S1AP_DT_CellID_Broadcast_Item * data);

int __si_s1ap_Encode_CellID_Broadcast_Item( SI_S1AP_DT_CellID_Broadcast_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellID_Cancelled_Item( SI_S1AP_DT_CellID_Cancelled_Item ** data);

void __si_s1ap_debug_CellID_Cancelled_Item( char * key, SI_S1AP_DT_CellID_Cancelled_Item * data, int lvl);

void __si_s1ap_memfree_CellID_Cancelled_Item( SI_S1AP_DT_CellID_Cancelled_Item * data);

int __si_s1ap_Encode_CellID_Cancelled_Item( SI_S1AP_DT_CellID_Cancelled_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Cdma2000PDU( SI_S1AP_DT_Cdma2000PDU ** data);

void __si_s1ap_init_Cdma2000PDU2( SI_S1AP_DT_Cdma2000PDU ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Cdma2000PDU( char * key, SI_S1AP_DT_Cdma2000PDU * data, int lvl);

void __si_s1ap_memfree_Cdma2000PDU( SI_S1AP_DT_Cdma2000PDU * data);

int __si_s1ap_Encode_Cdma2000PDU( SI_S1AP_DT_Cdma2000PDU * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Cdma2000RATType( char * key, uint8_t eCdma2000RATType, int lvl);

int __si_s1ap_Encode_Cdma2000RATType( uint8_t eCdma2000RATType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Cdma2000SectorID( SI_S1AP_DT_Cdma2000SectorID ** data);

void __si_s1ap_init_Cdma2000SectorID2( SI_S1AP_DT_Cdma2000SectorID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Cdma2000SectorID( char * key, SI_S1AP_DT_Cdma2000SectorID * data, int lvl);

void __si_s1ap_memfree_Cdma2000SectorID( SI_S1AP_DT_Cdma2000SectorID * data);

int __si_s1ap_Encode_Cdma2000SectorID( SI_S1AP_DT_Cdma2000SectorID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Cdma2000HOStatus( char * key, uint8_t eCdma2000HOStatus, int lvl);

int __si_s1ap_Encode_Cdma2000HOStatus( uint8_t eCdma2000HOStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Cdma2000HORequiredIndication( char * key, uint8_t eCdma2000HORequiredIndication, int lvl);

int __si_s1ap_Encode_Cdma2000HORequiredIndication( uint8_t eCdma2000HORequiredIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Cdma2000OneXMEID( SI_S1AP_DT_Cdma2000OneXMEID ** data);

void __si_s1ap_init_Cdma2000OneXMEID2( SI_S1AP_DT_Cdma2000OneXMEID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Cdma2000OneXMEID( char * key, SI_S1AP_DT_Cdma2000OneXMEID * data, int lvl);

void __si_s1ap_memfree_Cdma2000OneXMEID( SI_S1AP_DT_Cdma2000OneXMEID * data);

int __si_s1ap_Encode_Cdma2000OneXMEID( SI_S1AP_DT_Cdma2000OneXMEID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Cdma2000OneXMSI( SI_S1AP_DT_Cdma2000OneXMSI ** data);

void __si_s1ap_init_Cdma2000OneXMSI2( SI_S1AP_DT_Cdma2000OneXMSI ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Cdma2000OneXMSI( char * key, SI_S1AP_DT_Cdma2000OneXMSI * data, int lvl);

void __si_s1ap_memfree_Cdma2000OneXMSI( SI_S1AP_DT_Cdma2000OneXMSI * data);

int __si_s1ap_Encode_Cdma2000OneXMSI( SI_S1AP_DT_Cdma2000OneXMSI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Cdma2000OneXPilot( SI_S1AP_DT_Cdma2000OneXPilot ** data);

void __si_s1ap_init_Cdma2000OneXPilot2( SI_S1AP_DT_Cdma2000OneXPilot ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Cdma2000OneXPilot( char * key, SI_S1AP_DT_Cdma2000OneXPilot * data, int lvl);

void __si_s1ap_memfree_Cdma2000OneXPilot( SI_S1AP_DT_Cdma2000OneXPilot * data);

int __si_s1ap_Encode_Cdma2000OneXPilot( SI_S1AP_DT_Cdma2000OneXPilot * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Cdma2000OneXSRVCCInfo( SI_S1AP_DT_Cdma2000OneXSRVCCInfo ** data);

void __si_s1ap_debug_Cdma2000OneXSRVCCInfo( char * key, SI_S1AP_DT_Cdma2000OneXSRVCCInfo * data, int lvl);

void __si_s1ap_memfree_Cdma2000OneXSRVCCInfo( SI_S1AP_DT_Cdma2000OneXSRVCCInfo * data);

int __si_s1ap_Encode_Cdma2000OneXSRVCCInfo( SI_S1AP_DT_Cdma2000OneXSRVCCInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Cdma2000OneXRAND( SI_S1AP_DT_Cdma2000OneXRAND ** data);

void __si_s1ap_init_Cdma2000OneXRAND2( SI_S1AP_DT_Cdma2000OneXRAND ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Cdma2000OneXRAND( char * key, SI_S1AP_DT_Cdma2000OneXRAND * data, int lvl);

void __si_s1ap_memfree_Cdma2000OneXRAND( SI_S1AP_DT_Cdma2000OneXRAND * data);

int __si_s1ap_Encode_Cdma2000OneXRAND( SI_S1AP_DT_Cdma2000OneXRAND * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Cell_Size( char * key, uint8_t eCell_Size, int lvl);

int __si_s1ap_Encode_Cell_Size( uint8_t eCell_Size, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CellType( SI_S1AP_DT_CellType ** data);

void __si_s1ap_debug_CellType( char * key, SI_S1AP_DT_CellType * data, int lvl);

void __si_s1ap_memfree_CellType( SI_S1AP_DT_CellType * data);

int __si_s1ap_Encode_CellType( SI_S1AP_DT_CellType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LAC( SI_S1AP_DT_LAC ** data);

void __si_s1ap_init_LAC2( SI_S1AP_DT_LAC ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_LAC( char * key, SI_S1AP_DT_LAC * data, int lvl);

void __si_s1ap_memfree_LAC( SI_S1AP_DT_LAC * data);

int __si_s1ap_Encode_LAC( SI_S1AP_DT_LAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CI( SI_S1AP_DT_CI ** data);

void __si_s1ap_init_CI2( SI_S1AP_DT_CI ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_CI( char * key, SI_S1AP_DT_CI * data, int lvl);

void __si_s1ap_memfree_CI( SI_S1AP_DT_CI * data);

int __si_s1ap_Encode_CI( SI_S1AP_DT_CI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RAC( SI_S1AP_DT_RAC ** data);

void __si_s1ap_init_RAC2( SI_S1AP_DT_RAC ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_RAC( char * key, SI_S1AP_DT_RAC * data, int lvl);

void __si_s1ap_memfree_RAC( SI_S1AP_DT_RAC * data);

int __si_s1ap_Encode_RAC( SI_S1AP_DT_RAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CGI( SI_S1AP_DT_CGI ** data);

void __si_s1ap_debug_CGI( char * key, SI_S1AP_DT_CGI * data, int lvl);

void __si_s1ap_memfree_CGI( SI_S1AP_DT_CGI * data);

int __si_s1ap_Encode_CGI( SI_S1AP_DT_CGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CNDomain( char * key, uint8_t eCNDomain, int lvl);

int __si_s1ap_Encode_CNDomain( uint8_t eCNDomain, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CNTypeRestrictions( SI_S1AP_DT_CNTypeRestrictions ** data);

void __si_s1ap_debug_CNTypeRestrictions( char * key, SI_S1AP_DT_CNTypeRestrictions * data, int lvl);

void __si_s1ap_memfree_CNTypeRestrictions( SI_S1AP_DT_CNTypeRestrictions * data);

int __si_s1ap_Encode_CNTypeRestrictions( SI_S1AP_DT_CNTypeRestrictions * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CNType( char * key, uint8_t eCNType, int lvl);

int __si_s1ap_Encode_CNType( uint8_t eCNType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CNTypeRestrictions_Item( SI_S1AP_DT_CNTypeRestrictions_Item ** data);

void __si_s1ap_debug_CNTypeRestrictions_Item( char * key, SI_S1AP_DT_CNTypeRestrictions_Item * data, int lvl);

void __si_s1ap_memfree_CNTypeRestrictions_Item( SI_S1AP_DT_CNTypeRestrictions_Item * data);

int __si_s1ap_Encode_CNTypeRestrictions_Item( SI_S1AP_DT_CNTypeRestrictions_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CoarseUELocationRequested( char * key, uint8_t eCoarseUELocationRequested, int lvl);

int __si_s1ap_Encode_CoarseUELocationRequested( uint8_t eCoarseUELocationRequested, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CoarseUELocation( SI_S1AP_DT_CoarseUELocation ** data);

void __si_s1ap_init_CoarseUELocation2( SI_S1AP_DT_CoarseUELocation ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_CoarseUELocation( char * key, SI_S1AP_DT_CoarseUELocation * data, int lvl);

void __si_s1ap_memfree_CoarseUELocation( SI_S1AP_DT_CoarseUELocation * data);

int __si_s1ap_Encode_CoarseUELocation( SI_S1AP_DT_CoarseUELocation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ConcurrentWarningMessageIndicator( char * key, uint8_t eConcurrentWarningMessageIndicator, int lvl);

int __si_s1ap_Encode_ConcurrentWarningMessageIndicator( uint8_t eConcurrentWarningMessageIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ConnectedengNBList( SI_S1AP_DT_ConnectedengNBList ** data);

void __si_s1ap_debug_ConnectedengNBList( char * key, SI_S1AP_DT_ConnectedengNBList * data, int lvl);

void __si_s1ap_memfree_ConnectedengNBList( SI_S1AP_DT_ConnectedengNBList * data);

int __si_s1ap_Encode_ConnectedengNBList( SI_S1AP_DT_ConnectedengNBList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_En_gNB_ID( SI_S1AP_DT_En_gNB_ID ** data);

void __si_s1ap_init_En_gNB_ID2( SI_S1AP_DT_En_gNB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_En_gNB_ID( char * key, SI_S1AP_DT_En_gNB_ID * data, int lvl);

void __si_s1ap_memfree_En_gNB_ID( SI_S1AP_DT_En_gNB_ID * data);

int __si_s1ap_Encode_En_gNB_ID( SI_S1AP_DT_En_gNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SupportedTAs( SI_S1AP_DT_SupportedTAs ** data);

void __si_s1ap_debug_SupportedTAs( char * key, SI_S1AP_DT_SupportedTAs * data, int lvl);

void __si_s1ap_memfree_SupportedTAs( SI_S1AP_DT_SupportedTAs * data);

int __si_s1ap_Encode_SupportedTAs( SI_S1AP_DT_SupportedTAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ConnectedengNBItem( SI_S1AP_DT_ConnectedengNBItem ** data);

void __si_s1ap_debug_ConnectedengNBItem( char * key, SI_S1AP_DT_ConnectedengNBItem * data, int lvl);

void __si_s1ap_memfree_ConnectedengNBItem( SI_S1AP_DT_ConnectedengNBItem * data);

int __si_s1ap_Encode_ConnectedengNBItem( SI_S1AP_DT_ConnectedengNBItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_GNB_ID( SI_S1AP_DT_GNB_ID ** data);

void __si_s1ap_init_GNB_ID2( SI_S1AP_DT_GNB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_GNB_ID( char * key, SI_S1AP_DT_GNB_ID * data, int lvl);

void __si_s1ap_memfree_GNB_ID( SI_S1AP_DT_GNB_ID * data);

int __si_s1ap_Encode_GNB_ID( SI_S1AP_DT_GNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_GNB_Identity( SI_S1AP_DT_GNB_Identity ** data);

void __si_s1ap_debug_GNB_Identity( char * key, SI_S1AP_DT_GNB_Identity * data, int lvl);

void __si_s1ap_memfree_GNB_Identity( SI_S1AP_DT_GNB_Identity * data);

int __si_s1ap_Encode_GNB_Identity( SI_S1AP_DT_GNB_Identity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Global_GNB_ID( SI_S1AP_DT_Global_GNB_ID ** data);

void __si_s1ap_debug_Global_GNB_ID( char * key, SI_S1AP_DT_Global_GNB_ID * data, int lvl);

void __si_s1ap_memfree_Global_GNB_ID( SI_S1AP_DT_Global_GNB_ID * data);

int __si_s1ap_Encode_Global_GNB_ID( SI_S1AP_DT_Global_GNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_GNB( SI_S1AP_DT_GNB ** data);

void __si_s1ap_debug_GNB( char * key, SI_S1AP_DT_GNB * data, int lvl);

void __si_s1ap_memfree_GNB( SI_S1AP_DT_GNB * data);

int __si_s1ap_Encode_GNB( SI_S1AP_DT_GNB * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENBID_macroENB_ID( SI_S1AP_DT_ENBID_macroENB_ID ** data);

void __si_s1ap_init_ENBID_macroENB_ID2( SI_S1AP_DT_ENBID_macroENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_ENBID_macroENB_ID( char * key, SI_S1AP_DT_ENBID_macroENB_ID * data, int lvl);

void __si_s1ap_memfree_ENBID_macroENB_ID( SI_S1AP_DT_ENBID_macroENB_ID * data);

int __si_s1ap_Encode_ENBID_macroENB_ID( SI_S1AP_DT_ENBID_macroENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENBID_homeENB_ID( SI_S1AP_DT_ENBID_homeENB_ID ** data);

void __si_s1ap_init_ENBID_homeENB_ID2( SI_S1AP_DT_ENBID_homeENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_ENBID_homeENB_ID( char * key, SI_S1AP_DT_ENBID_homeENB_ID * data, int lvl);

void __si_s1ap_memfree_ENBID_homeENB_ID( SI_S1AP_DT_ENBID_homeENB_ID * data);

int __si_s1ap_Encode_ENBID_homeENB_ID( SI_S1AP_DT_ENBID_homeENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENBID_short_macroENB_ID( SI_S1AP_DT_ENBID_short_macroENB_ID ** data);

void __si_s1ap_init_ENBID_short_macroENB_ID2( SI_S1AP_DT_ENBID_short_macroENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_ENBID_short_macroENB_ID( char * key, SI_S1AP_DT_ENBID_short_macroENB_ID * data, int lvl);

void __si_s1ap_memfree_ENBID_short_macroENB_ID( SI_S1AP_DT_ENBID_short_macroENB_ID * data);

int __si_s1ap_Encode_ENBID_short_macroENB_ID( SI_S1AP_DT_ENBID_short_macroENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENBID_long_macroENB_ID( SI_S1AP_DT_ENBID_long_macroENB_ID ** data);

void __si_s1ap_init_ENBID_long_macroENB_ID2( SI_S1AP_DT_ENBID_long_macroENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_ENBID_long_macroENB_ID( char * key, SI_S1AP_DT_ENBID_long_macroENB_ID * data, int lvl);

void __si_s1ap_memfree_ENBID_long_macroENB_ID( SI_S1AP_DT_ENBID_long_macroENB_ID * data);

int __si_s1ap_Encode_ENBID_long_macroENB_ID( SI_S1AP_DT_ENBID_long_macroENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENB_ID( SI_S1AP_DT_ENB_ID ** data);

void __si_s1ap_debug_ENB_ID( char * key, SI_S1AP_DT_ENB_ID * data, int lvl);

void __si_s1ap_memfree_ENB_ID( SI_S1AP_DT_ENB_ID * data);

int __si_s1ap_Encode_ENB_ID( SI_S1AP_DT_ENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Global_ENB_ID( SI_S1AP_DT_Global_ENB_ID ** data);

void __si_s1ap_debug_Global_ENB_ID( char * key, SI_S1AP_DT_Global_ENB_ID * data, int lvl);

void __si_s1ap_memfree_Global_ENB_ID( SI_S1AP_DT_Global_ENB_ID * data);

int __si_s1ap_Encode_Global_ENB_ID( SI_S1AP_DT_Global_ENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NG_eNB( SI_S1AP_DT_NG_eNB ** data);

void __si_s1ap_debug_NG_eNB( char * key, SI_S1AP_DT_NG_eNB * data, int lvl);

void __si_s1ap_memfree_NG_eNB( SI_S1AP_DT_NG_eNB * data);

int __si_s1ap_Encode_NG_eNB( SI_S1AP_DT_NG_eNB * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Global_RAN_NODE_ID( SI_S1AP_DT_Global_RAN_NODE_ID ** data);

void __si_s1ap_debug_Global_RAN_NODE_ID( char * key, SI_S1AP_DT_Global_RAN_NODE_ID * data, int lvl);

void __si_s1ap_memfree_Global_RAN_NODE_ID( SI_S1AP_DT_Global_RAN_NODE_ID * data);

int __si_s1ap_Encode_Global_RAN_NODE_ID( SI_S1AP_DT_Global_RAN_NODE_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RAN_UE_NGAP_ID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_RAN_UE_NGAP_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_RAN_UE_NGAP_ID( SI_S1AP_DT_RAN_UE_NGAP_ID * data);


void __si_s1ap_init_ContextatSource( SI_S1AP_DT_ContextatSource ** data);

void __si_s1ap_debug_ContextatSource( char * key, SI_S1AP_DT_ContextatSource * data, int lvl);

void __si_s1ap_memfree_ContextatSource( SI_S1AP_DT_ContextatSource * data);

int __si_s1ap_Encode_ContextatSource( SI_S1AP_DT_ContextatSource * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Correlation_ID( SI_S1AP_DT_Correlation_ID ** data);

void __si_s1ap_init_Correlation_ID2( SI_S1AP_DT_Correlation_ID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Correlation_ID( char * key, SI_S1AP_DT_Correlation_ID * data, int lvl);

void __si_s1ap_memfree_Correlation_ID( SI_S1AP_DT_Correlation_ID * data);

int __si_s1ap_Encode_Correlation_ID( SI_S1AP_DT_Correlation_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CSFallbackIndicator( char * key, uint8_t eCSFallbackIndicator, int lvl);

int __si_s1ap_Encode_CSFallbackIndicator( uint8_t eCSFallbackIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_AdditionalCSFallbackIndicator( char * key, uint8_t eAdditionalCSFallbackIndicator, int lvl);

int __si_s1ap_Encode_AdditionalCSFallbackIndicator( uint8_t eAdditionalCSFallbackIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CSG_Id( SI_S1AP_DT_CSG_Id ** data);

void __si_s1ap_init_CSG_Id2( SI_S1AP_DT_CSG_Id ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_CSG_Id( char * key, SI_S1AP_DT_CSG_Id * data, int lvl);

void __si_s1ap_memfree_CSG_Id( SI_S1AP_DT_CSG_Id * data);

int __si_s1ap_Encode_CSG_Id( SI_S1AP_DT_CSG_Id * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CSG_IdList( SI_S1AP_DT_CSG_IdList ** data);

void __si_s1ap_debug_CSG_IdList( char * key, SI_S1AP_DT_CSG_IdList * data, int lvl);

void __si_s1ap_memfree_CSG_IdList( SI_S1AP_DT_CSG_IdList * data);

int __si_s1ap_Encode_CSG_IdList( SI_S1AP_DT_CSG_IdList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CSG_IdList_Item( SI_S1AP_DT_CSG_IdList_Item ** data);

void __si_s1ap_debug_CSG_IdList_Item( char * key, SI_S1AP_DT_CSG_IdList_Item * data, int lvl);

void __si_s1ap_memfree_CSG_IdList_Item( SI_S1AP_DT_CSG_IdList_Item * data);

int __si_s1ap_Encode_CSG_IdList_Item( SI_S1AP_DT_CSG_IdList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CSGMembershipStatus( char * key, uint8_t eCSGMembershipStatus, int lvl);

int __si_s1ap_Encode_CSGMembershipStatus( uint8_t eCSGMembershipStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Coverage_Level( char * key, uint8_t eCoverage_Level, int lvl);

int __si_s1ap_Encode_Coverage_Level( uint8_t eCoverage_Level, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CriticalityDiagnostics_IE_List( SI_S1AP_DT_CriticalityDiagnostics_IE_List ** data);

void __si_s1ap_debug_CriticalityDiagnostics_IE_List( char * key, SI_S1AP_DT_CriticalityDiagnostics_IE_List * data, int lvl);

void __si_s1ap_memfree_CriticalityDiagnostics_IE_List( SI_S1AP_DT_CriticalityDiagnostics_IE_List * data);

int __si_s1ap_Encode_CriticalityDiagnostics_IE_List( SI_S1AP_DT_CriticalityDiagnostics_IE_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CriticalityDiagnostics( SI_S1AP_DT_CriticalityDiagnostics ** data);

void __si_s1ap_debug_CriticalityDiagnostics( char * key, SI_S1AP_DT_CriticalityDiagnostics * data, int lvl);

void __si_s1ap_memfree_CriticalityDiagnostics( SI_S1AP_DT_CriticalityDiagnostics * data);

int __si_s1ap_Encode_CriticalityDiagnostics( SI_S1AP_DT_CriticalityDiagnostics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_TypeOfError( char * key, uint8_t eTypeOfError, int lvl);

int __si_s1ap_Encode_TypeOfError( uint8_t eTypeOfError, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CriticalityDiagnostics_IE_Item( SI_S1AP_DT_CriticalityDiagnostics_IE_Item ** data);

void __si_s1ap_debug_CriticalityDiagnostics_IE_Item( char * key, SI_S1AP_DT_CriticalityDiagnostics_IE_Item * data, int lvl);

void __si_s1ap_memfree_CriticalityDiagnostics_IE_Item( SI_S1AP_DT_CriticalityDiagnostics_IE_Item * data);

int __si_s1ap_Encode_CriticalityDiagnostics_IE_Item( SI_S1AP_DT_CriticalityDiagnostics_IE_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_DAPSRequestInfo_dAPSIndicator( char * key, uint8_t eDAPSRequestInfo_dAPSIndicator, int lvl);

int __si_s1ap_Encode_DAPSRequestInfo_dAPSIndicator( uint8_t eDAPSRequestInfo_dAPSIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DAPSRequestInfo( SI_S1AP_DT_DAPSRequestInfo ** data);

void __si_s1ap_debug_DAPSRequestInfo( char * key, SI_S1AP_DT_DAPSRequestInfo * data, int lvl);

void __si_s1ap_memfree_DAPSRequestInfo( SI_S1AP_DT_DAPSRequestInfo * data);

int __si_s1ap_Encode_DAPSRequestInfo( SI_S1AP_DT_DAPSRequestInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DAPSResponseInfoList( SI_S1AP_DT_DAPSResponseInfoList ** data);

void __si_s1ap_debug_DAPSResponseInfoList( char * key, SI_S1AP_DT_DAPSResponseInfoList * data, int lvl);

void __si_s1ap_memfree_DAPSResponseInfoList( SI_S1AP_DT_DAPSResponseInfoList * data);

int __si_s1ap_Encode_DAPSResponseInfoList( SI_S1AP_DT_DAPSResponseInfoList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_DAPSResponseInfo_dapsresponseindicator( char * key, uint8_t eDAPSResponseInfo_dapsresponseindicator, int lvl);

int __si_s1ap_Encode_DAPSResponseInfo_dapsresponseindicator( uint8_t eDAPSResponseInfo_dapsresponseindicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DAPSResponseInfo( SI_S1AP_DT_DAPSResponseInfo ** data);

void __si_s1ap_debug_DAPSResponseInfo( char * key, SI_S1AP_DT_DAPSResponseInfo * data, int lvl);

void __si_s1ap_memfree_DAPSResponseInfo( SI_S1AP_DT_DAPSResponseInfo * data);

int __si_s1ap_Encode_DAPSResponseInfo( SI_S1AP_DT_DAPSResponseInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DAPSResponseInfoItem( SI_S1AP_DT_DAPSResponseInfoItem ** data);

void __si_s1ap_debug_DAPSResponseInfoItem( char * key, SI_S1AP_DT_DAPSResponseInfoItem * data, int lvl);

void __si_s1ap_memfree_DAPSResponseInfoItem( SI_S1AP_DT_DAPSResponseInfoItem * data);

int __si_s1ap_Encode_DAPSResponseInfoItem( SI_S1AP_DT_DAPSResponseInfoItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DAPSResponseInfoListIEs( SI_S1AP_DT_DAPSResponseInfoListIEs ** data);

void __si_s1ap_debug_DAPSResponseInfoListIEs( char * key, SI_S1AP_DT_DAPSResponseInfoListIEs * data, int lvl);

void __si_s1ap_memfree_DAPSResponseInfoListIEs( SI_S1AP_DT_DAPSResponseInfoListIEs * data);

// EHS-ADT=2  DT=3 Container
int __si_s1ap_Encode_DAPSResponseInfoListIEs( SI_S1AP_DT_DAPSResponseInfoListIEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DataCodingScheme( SI_S1AP_DT_DataCodingScheme ** data);

void __si_s1ap_init_DataCodingScheme2( SI_S1AP_DT_DataCodingScheme ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_DataCodingScheme( char * key, SI_S1AP_DT_DataCodingScheme * data, int lvl);

void __si_s1ap_memfree_DataCodingScheme( SI_S1AP_DT_DataCodingScheme * data);

int __si_s1ap_Encode_DataCodingScheme( SI_S1AP_DT_DataCodingScheme * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_DataSize( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_DataSize( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_DataSize( SI_S1AP_DT_DataSize * data);


void __si_s1ap_debug_DCN_ID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_DCN_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_DCN_ID( SI_S1AP_DT_DCN_ID * data);


void __si_s1ap_init_ServedDCNs( SI_S1AP_DT_ServedDCNs ** data);

void __si_s1ap_debug_ServedDCNs( char * key, SI_S1AP_DT_ServedDCNs * data, int lvl);

void __si_s1ap_memfree_ServedDCNs( SI_S1AP_DT_ServedDCNs * data);

int __si_s1ap_Encode_ServedDCNs( SI_S1AP_DT_ServedDCNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RelativeMMECapacity( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_RelativeMMECapacity( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_RelativeMMECapacity( SI_S1AP_DT_RelativeMMECapacity * data);


void __si_s1ap_init_ServedDCNsItem( SI_S1AP_DT_ServedDCNsItem ** data);

void __si_s1ap_debug_ServedDCNsItem( char * key, SI_S1AP_DT_ServedDCNsItem * data, int lvl);

void __si_s1ap_memfree_ServedDCNsItem( SI_S1AP_DT_ServedDCNsItem * data);

int __si_s1ap_Encode_ServedDCNsItem( SI_S1AP_DT_ServedDCNsItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DL_NAS_MAC( SI_S1AP_DT_DL_NAS_MAC ** data);

void __si_s1ap_init_DL_NAS_MAC2( SI_S1AP_DT_DL_NAS_MAC ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_DL_NAS_MAC( char * key, SI_S1AP_DT_DL_NAS_MAC * data, int lvl);

void __si_s1ap_memfree_DL_NAS_MAC( SI_S1AP_DT_DL_NAS_MAC * data);

int __si_s1ap_Encode_DL_NAS_MAC( SI_S1AP_DT_DL_NAS_MAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DL_CP_SecurityInformation( SI_S1AP_DT_DL_CP_SecurityInformation ** data);

void __si_s1ap_debug_DL_CP_SecurityInformation( char * key, SI_S1AP_DT_DL_CP_SecurityInformation * data, int lvl);

void __si_s1ap_memfree_DL_CP_SecurityInformation( SI_S1AP_DT_DL_CP_SecurityInformation * data);

int __si_s1ap_Encode_DL_CP_SecurityInformation( SI_S1AP_DT_DL_CP_SecurityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_DL_Forwarding( char * key, uint8_t eDL_Forwarding, int lvl);

int __si_s1ap_Encode_DL_Forwarding( uint8_t eDL_Forwarding, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Direct_Forwarding_Path_Availability( char * key, uint8_t eDirect_Forwarding_Path_Availability, int lvl);

int __si_s1ap_Encode_Direct_Forwarding_Path_Availability( uint8_t eDirect_Forwarding_Path_Availability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Data_Forwarding_Not_Possible( char * key, uint8_t eData_Forwarding_Not_Possible, int lvl);

int __si_s1ap_Encode_Data_Forwarding_Not_Possible( uint8_t eData_Forwarding_Not_Possible, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_DLNASPDUDeliveryAckRequest( char * key, uint8_t eDLNASPDUDeliveryAckRequest, int lvl);

int __si_s1ap_Encode_DLNASPDUDeliveryAckRequest( uint8_t eDLNASPDUDeliveryAckRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_EARFCN( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_EARFCN( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_EARFCN( SI_S1AP_DT_EARFCN * data);


void __si_s1ap_init_ECGIList( SI_S1AP_DT_ECGIList ** data);

void __si_s1ap_debug_ECGIList( char * key, SI_S1AP_DT_ECGIList * data, int lvl);

void __si_s1ap_memfree_ECGIList( SI_S1AP_DT_ECGIList * data);

int __si_s1ap_Encode_ECGIList( SI_S1AP_DT_ECGIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_PWSfailedECGIList( SI_S1AP_DT_PWSfailedECGIList ** data);

void __si_s1ap_debug_PWSfailedECGIList( char * key, SI_S1AP_DT_PWSfailedECGIList * data, int lvl);

void __si_s1ap_memfree_PWSfailedECGIList( SI_S1AP_DT_PWSfailedECGIList * data);

int __si_s1ap_Encode_PWSfailedECGIList( SI_S1AP_DT_PWSfailedECGIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_EDT_Session( char * key, uint8_t eEDT_Session, int lvl);

int __si_s1ap_Encode_EDT_Session( uint8_t eEDT_Session, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EmergencyAreaIDList( SI_S1AP_DT_EmergencyAreaIDList ** data);

void __si_s1ap_debug_EmergencyAreaIDList( char * key, SI_S1AP_DT_EmergencyAreaIDList * data, int lvl);

void __si_s1ap_memfree_EmergencyAreaIDList( SI_S1AP_DT_EmergencyAreaIDList * data);

int __si_s1ap_Encode_EmergencyAreaIDList( SI_S1AP_DT_EmergencyAreaIDList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EmergencyAreaID( SI_S1AP_DT_EmergencyAreaID ** data);

void __si_s1ap_init_EmergencyAreaID2( SI_S1AP_DT_EmergencyAreaID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_EmergencyAreaID( char * key, SI_S1AP_DT_EmergencyAreaID * data, int lvl);

void __si_s1ap_memfree_EmergencyAreaID( SI_S1AP_DT_EmergencyAreaID * data);

int __si_s1ap_Encode_EmergencyAreaID( SI_S1AP_DT_EmergencyAreaID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CompletedCellinEAI( SI_S1AP_DT_CompletedCellinEAI ** data);

void __si_s1ap_debug_CompletedCellinEAI( char * key, SI_S1AP_DT_CompletedCellinEAI * data, int lvl);

void __si_s1ap_memfree_CompletedCellinEAI( SI_S1AP_DT_CompletedCellinEAI * data);

int __si_s1ap_Encode_CompletedCellinEAI( SI_S1AP_DT_CompletedCellinEAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EmergencyAreaID_Broadcast_Item( SI_S1AP_DT_EmergencyAreaID_Broadcast_Item ** data);

void __si_s1ap_debug_EmergencyAreaID_Broadcast_Item( char * key, SI_S1AP_DT_EmergencyAreaID_Broadcast_Item * data, int lvl);

void __si_s1ap_memfree_EmergencyAreaID_Broadcast_Item( SI_S1AP_DT_EmergencyAreaID_Broadcast_Item * data);

int __si_s1ap_Encode_EmergencyAreaID_Broadcast_Item( SI_S1AP_DT_EmergencyAreaID_Broadcast_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EmergencyAreaID_Cancelled_Item( SI_S1AP_DT_EmergencyAreaID_Cancelled_Item ** data);

void __si_s1ap_debug_EmergencyAreaID_Cancelled_Item( char * key, SI_S1AP_DT_EmergencyAreaID_Cancelled_Item * data, int lvl);

void __si_s1ap_memfree_EmergencyAreaID_Cancelled_Item( SI_S1AP_DT_EmergencyAreaID_Cancelled_Item * data);

int __si_s1ap_Encode_EmergencyAreaID_Cancelled_Item( SI_S1AP_DT_EmergencyAreaID_Cancelled_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CompletedCellinEAI_Item( SI_S1AP_DT_CompletedCellinEAI_Item ** data);

void __si_s1ap_debug_CompletedCellinEAI_Item( char * key, SI_S1AP_DT_CompletedCellinEAI_Item * data, int lvl);

void __si_s1ap_memfree_CompletedCellinEAI_Item( SI_S1AP_DT_CompletedCellinEAI_Item * data);

int __si_s1ap_Encode_CompletedCellinEAI_Item( SI_S1AP_DT_CompletedCellinEAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ECGI_List( SI_S1AP_DT_ECGI_List ** data);

void __si_s1ap_debug_ECGI_List( char * key, SI_S1AP_DT_ECGI_List * data, int lvl);

void __si_s1ap_memfree_ECGI_List( SI_S1AP_DT_ECGI_List * data);

int __si_s1ap_Encode_ECGI_List( SI_S1AP_DT_ECGI_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EmergencyAreaIDListForRestart( SI_S1AP_DT_EmergencyAreaIDListForRestart ** data);

void __si_s1ap_debug_EmergencyAreaIDListForRestart( char * key, SI_S1AP_DT_EmergencyAreaIDListForRestart * data, int lvl);

void __si_s1ap_memfree_EmergencyAreaIDListForRestart( SI_S1AP_DT_EmergencyAreaIDListForRestart * data);

int __si_s1ap_Encode_EmergencyAreaIDListForRestart( SI_S1AP_DT_EmergencyAreaIDListForRestart * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_EmergencyIndicator( char * key, uint8_t eEmergencyIndicator, int lvl);

int __si_s1ap_Encode_EmergencyIndicator( uint8_t eEmergencyIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENB_EarlyStatusTransfer_TransparentContainer( SI_S1AP_DT_ENB_EarlyStatusTransfer_TransparentContainer ** data);

void __si_s1ap_debug_ENB_EarlyStatusTransfer_TransparentContainer( char * key, SI_S1AP_DT_ENB_EarlyStatusTransfer_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_ENB_EarlyStatusTransfer_TransparentContainer( SI_S1AP_DT_ENB_EarlyStatusTransfer_TransparentContainer * data);

int __si_s1ap_Encode_ENB_EarlyStatusTransfer_TransparentContainer( SI_S1AP_DT_ENB_EarlyStatusTransfer_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LAI( SI_S1AP_DT_LAI ** data);

void __si_s1ap_debug_LAI( char * key, SI_S1AP_DT_LAI * data, int lvl);

void __si_s1ap_memfree_LAI( SI_S1AP_DT_LAI * data);

int __si_s1ap_Encode_LAI( SI_S1AP_DT_LAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_GERAN_Cell_ID( SI_S1AP_DT_GERAN_Cell_ID ** data);

void __si_s1ap_debug_GERAN_Cell_ID( char * key, SI_S1AP_DT_GERAN_Cell_ID * data, int lvl);

void __si_s1ap_memfree_GERAN_Cell_ID( SI_S1AP_DT_GERAN_Cell_ID * data);

int __si_s1ap_Encode_GERAN_Cell_ID( SI_S1AP_DT_GERAN_Cell_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Global_en_gNB_ID( SI_S1AP_DT_Global_en_gNB_ID ** data);

void __si_s1ap_debug_Global_en_gNB_ID( char * key, SI_S1AP_DT_Global_en_gNB_ID * data, int lvl);

void __si_s1ap_memfree_Global_en_gNB_ID( SI_S1AP_DT_Global_en_gNB_ID * data);

int __si_s1ap_Encode_Global_en_gNB_ID( SI_S1AP_DT_Global_en_gNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_GUMMEIList( SI_S1AP_DT_GUMMEIList ** data);

void __si_s1ap_debug_GUMMEIList( char * key, SI_S1AP_DT_GUMMEIList * data, int lvl);

void __si_s1ap_memfree_GUMMEIList( SI_S1AP_DT_GUMMEIList * data);

int __si_s1ap_Encode_GUMMEIList( SI_S1AP_DT_GUMMEIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENB_StatusTransfer_TransparentContainer( SI_S1AP_DT_ENB_StatusTransfer_TransparentContainer ** data);

void __si_s1ap_debug_ENB_StatusTransfer_TransparentContainer( char * key, SI_S1AP_DT_ENB_StatusTransfer_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_ENB_StatusTransfer_TransparentContainer( SI_S1AP_DT_ENB_StatusTransfer_TransparentContainer * data);

int __si_s1ap_Encode_ENB_StatusTransfer_TransparentContainer( SI_S1AP_DT_ENB_StatusTransfer_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ENB_UE_S1AP_ID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ENB_UE_S1AP_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ENB_UE_S1AP_ID( SI_S1AP_DT_ENB_UE_S1AP_ID * data);


void __si_s1ap_init_ENBname( SI_S1AP_DT_ENBname ** data);

void __si_s1ap_init_ENBname2( SI_S1AP_DT_ENBname ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_ENBname( char * key, SI_S1AP_DT_ENBname * data, int lvl);

void __si_s1ap_memfree_ENBname( SI_S1AP_DT_ENBname * data);

int __si_s1ap_Encode_ENBname( SI_S1AP_DT_ENBname * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENBX2TLAs( SI_S1AP_DT_ENBX2TLAs ** data);

void __si_s1ap_debug_ENBX2TLAs( char * key, SI_S1AP_DT_ENBX2TLAs * data, int lvl);

void __si_s1ap_memfree_ENBX2TLAs( SI_S1AP_DT_ENBX2TLAs * data);

int __si_s1ap_Encode_ENBX2TLAs( SI_S1AP_DT_ENBX2TLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EncryptionAlgorithms( SI_S1AP_DT_EncryptionAlgorithms ** data);

void __si_s1ap_init_EncryptionAlgorithms2( SI_S1AP_DT_EncryptionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_EncryptionAlgorithms( char * key, SI_S1AP_DT_EncryptionAlgorithms * data, int lvl);

void __si_s1ap_memfree_EncryptionAlgorithms( SI_S1AP_DT_EncryptionAlgorithms * data);

int __si_s1ap_Encode_EncryptionAlgorithms( SI_S1AP_DT_EncryptionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAC( SI_S1AP_DT_TAC ** data);

void __si_s1ap_init_TAC2( SI_S1AP_DT_TAC ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_TAC( char * key, SI_S1AP_DT_TAC * data, int lvl);

void __si_s1ap_memfree_TAC( SI_S1AP_DT_TAC * data);

int __si_s1ap_Encode_TAC( SI_S1AP_DT_TAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAI( SI_S1AP_DT_TAI ** data);

void __si_s1ap_debug_TAI( char * key, SI_S1AP_DT_TAI * data, int lvl);

void __si_s1ap_memfree_TAI( SI_S1AP_DT_TAI * data);

int __si_s1ap_Encode_TAI( SI_S1AP_DT_TAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EN_DCSONeNBIdentification( SI_S1AP_DT_EN_DCSONeNBIdentification ** data);

void __si_s1ap_debug_EN_DCSONeNBIdentification( char * key, SI_S1AP_DT_EN_DCSONeNBIdentification * data, int lvl);

void __si_s1ap_memfree_EN_DCSONeNBIdentification( SI_S1AP_DT_EN_DCSONeNBIdentification * data);

int __si_s1ap_Encode_EN_DCSONeNBIdentification( SI_S1AP_DT_EN_DCSONeNBIdentification * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EN_DCSONengNBIdentification( SI_S1AP_DT_EN_DCSONengNBIdentification ** data);

void __si_s1ap_debug_EN_DCSONengNBIdentification( char * key, SI_S1AP_DT_EN_DCSONengNBIdentification * data, int lvl);

void __si_s1ap_memfree_EN_DCSONengNBIdentification( SI_S1AP_DT_EN_DCSONengNBIdentification * data);

int __si_s1ap_Encode_EN_DCSONengNBIdentification( SI_S1AP_DT_EN_DCSONengNBIdentification * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_FiveGSTAC( SI_S1AP_DT_FiveGSTAC ** data);

void __si_s1ap_init_FiveGSTAC2( SI_S1AP_DT_FiveGSTAC ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_FiveGSTAC( char * key, SI_S1AP_DT_FiveGSTAC * data, int lvl);

void __si_s1ap_memfree_FiveGSTAC( SI_S1AP_DT_FiveGSTAC * data);

int __si_s1ap_Encode_FiveGSTAC( SI_S1AP_DT_FiveGSTAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_FiveGSTAI( SI_S1AP_DT_FiveGSTAI ** data);

void __si_s1ap_debug_FiveGSTAI( char * key, SI_S1AP_DT_FiveGSTAI * data, int lvl);

void __si_s1ap_memfree_FiveGSTAI( SI_S1AP_DT_FiveGSTAI * data);

int __si_s1ap_Encode_FiveGSTAI( SI_S1AP_DT_FiveGSTAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EN_DCTransferTypeRequest( SI_S1AP_DT_EN_DCTransferTypeRequest ** data);

void __si_s1ap_debug_EN_DCTransferTypeRequest( char * key, SI_S1AP_DT_EN_DCTransferTypeRequest * data, int lvl);

void __si_s1ap_memfree_EN_DCTransferTypeRequest( SI_S1AP_DT_EN_DCTransferTypeRequest * data);

int __si_s1ap_Encode_EN_DCTransferTypeRequest( SI_S1AP_DT_EN_DCTransferTypeRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EN_DCTransferTypeReply( SI_S1AP_DT_EN_DCTransferTypeReply ** data);

void __si_s1ap_debug_EN_DCTransferTypeReply( char * key, SI_S1AP_DT_EN_DCTransferTypeReply * data, int lvl);

void __si_s1ap_memfree_EN_DCTransferTypeReply( SI_S1AP_DT_EN_DCTransferTypeReply * data);

int __si_s1ap_Encode_EN_DCTransferTypeReply( SI_S1AP_DT_EN_DCTransferTypeReply * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EN_DCSONTransferType( SI_S1AP_DT_EN_DCSONTransferType ** data);

void __si_s1ap_debug_EN_DCSONTransferType( char * key, SI_S1AP_DT_EN_DCSONTransferType * data, int lvl);

void __si_s1ap_memfree_EN_DCSONTransferType( SI_S1AP_DT_EN_DCSONTransferType * data);

int __si_s1ap_Encode_EN_DCSONTransferType( SI_S1AP_DT_EN_DCSONTransferType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SONInformationRequest( char * key, uint8_t eSONInformationRequest, int lvl);

int __si_s1ap_Encode_SONInformationRequest( uint8_t eSONInformationRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_X2TNLConfigurationInfo( SI_S1AP_DT_X2TNLConfigurationInfo ** data);

void __si_s1ap_debug_X2TNLConfigurationInfo( char * key, SI_S1AP_DT_X2TNLConfigurationInfo * data, int lvl);

void __si_s1ap_memfree_X2TNLConfigurationInfo( SI_S1AP_DT_X2TNLConfigurationInfo * data);

int __si_s1ap_Encode_X2TNLConfigurationInfo( SI_S1AP_DT_X2TNLConfigurationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SONInformationReply( SI_S1AP_DT_SONInformationReply ** data);

void __si_s1ap_debug_SONInformationReply( char * key, SI_S1AP_DT_SONInformationReply * data, int lvl);

void __si_s1ap_memfree_SONInformationReply( SI_S1AP_DT_SONInformationReply * data);

int __si_s1ap_Encode_SONInformationReply( SI_S1AP_DT_SONInformationReply * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->SONInformation-ExtensionIE<- Got NULL  L:7577

void __si_s1ap_init_SONInformation_Extension( SI_S1AP_DT_SONInformation_Extension ** data);

void __si_s1ap_debug_SONInformation_Extension( char * key, SI_S1AP_DT_SONInformation_Extension * data, int lvl);

void __si_s1ap_memfree_SONInformation_Extension( SI_S1AP_DT_SONInformation_Extension * data);

// EHS-ADT=0  DT=1 Container
int __si_s1ap_Encode_SONInformation_Extension( SI_S1AP_DT_SONInformation_Extension * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SONInformation( SI_S1AP_DT_SONInformation ** data);

void __si_s1ap_debug_SONInformation( char * key, SI_S1AP_DT_SONInformation * data, int lvl);

void __si_s1ap_memfree_SONInformation( SI_S1AP_DT_SONInformation * data);

int __si_s1ap_Encode_SONInformation( SI_S1AP_DT_SONInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EN_DCSONConfigurationTransfer( SI_S1AP_DT_EN_DCSONConfigurationTransfer ** data);

void __si_s1ap_debug_EN_DCSONConfigurationTransfer( char * key, SI_S1AP_DT_EN_DCSONConfigurationTransfer * data, int lvl);

void __si_s1ap_memfree_EN_DCSONConfigurationTransfer( SI_S1AP_DT_EN_DCSONConfigurationTransfer * data);

int __si_s1ap_Encode_EN_DCSONConfigurationTransfer( SI_S1AP_DT_EN_DCSONConfigurationTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_EndIndication( char * key, uint8_t eEndIndication, int lvl);

int __si_s1ap_Encode_EndIndication( uint8_t eEndIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_EnhancedCoverageRestricted( char * key, uint8_t eEnhancedCoverageRestricted, int lvl);

int __si_s1ap_Encode_EnhancedCoverageRestricted( uint8_t eEnhancedCoverageRestricted, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_CE_ModeBRestricted( char * key, uint8_t eCE_ModeBRestricted, int lvl);

int __si_s1ap_Encode_CE_ModeBRestricted( uint8_t eCE_ModeBRestricted, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EPLMNs( SI_S1AP_DT_EPLMNs ** data);

void __si_s1ap_debug_EPLMNs( char * key, SI_S1AP_DT_EPLMNs * data, int lvl);

void __si_s1ap_memfree_EPLMNs( SI_S1AP_DT_EPLMNs * data);

int __si_s1ap_Encode_EPLMNs( SI_S1AP_DT_EPLMNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_EventType( char * key, uint8_t eEventType, int lvl);

int __si_s1ap_Encode_EventType( uint8_t eEventType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABInformationList( SI_S1AP_DT_E_RABInformationList ** data);

void __si_s1ap_debug_E_RABInformationList( char * key, SI_S1AP_DT_E_RABInformationList * data, int lvl);

void __si_s1ap_memfree_E_RABInformationList( SI_S1AP_DT_E_RABInformationList * data);

int __si_s1ap_Encode_E_RABInformationList( SI_S1AP_DT_E_RABInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABInformationListItem( SI_S1AP_DT_E_RABInformationListItem ** data);

void __si_s1ap_debug_E_RABInformationListItem( char * key, SI_S1AP_DT_E_RABInformationListItem * data, int lvl);

void __si_s1ap_memfree_E_RABInformationListItem( SI_S1AP_DT_E_RABInformationListItem * data);

int __si_s1ap_Encode_E_RABInformationListItem( SI_S1AP_DT_E_RABInformationListItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABInformationListIEs( SI_S1AP_DT_E_RABInformationListIEs ** data);

void __si_s1ap_debug_E_RABInformationListIEs( char * key, SI_S1AP_DT_E_RABInformationListIEs * data, int lvl);

void __si_s1ap_memfree_E_RABInformationListIEs( SI_S1AP_DT_E_RABInformationListIEs * data);

// EHS-ADT=2  DT=3 Container
int __si_s1ap_Encode_E_RABInformationListIEs( SI_S1AP_DT_E_RABInformationListIEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABList( SI_S1AP_DT_E_RABList ** data);

void __si_s1ap_debug_E_RABList( char * key, SI_S1AP_DT_E_RABList * data, int lvl);

void __si_s1ap_memfree_E_RABList( SI_S1AP_DT_E_RABList * data);

int __si_s1ap_Encode_E_RABList( SI_S1AP_DT_E_RABList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABItem( SI_S1AP_DT_E_RABItem ** data);

void __si_s1ap_debug_E_RABItem( char * key, SI_S1AP_DT_E_RABItem * data, int lvl);

void __si_s1ap_memfree_E_RABItem( SI_S1AP_DT_E_RABItem * data);

int __si_s1ap_Encode_E_RABItem( SI_S1AP_DT_E_RABItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_QCI( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_QCI( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_QCI( SI_S1AP_DT_QCI * data);


void __si_s1ap_init_GBR_QosInformation( SI_S1AP_DT_GBR_QosInformation ** data);

void __si_s1ap_debug_GBR_QosInformation( char * key, SI_S1AP_DT_GBR_QosInformation * data, int lvl);

void __si_s1ap_memfree_GBR_QosInformation( SI_S1AP_DT_GBR_QosInformation * data);

int __si_s1ap_Encode_GBR_QosInformation( SI_S1AP_DT_GBR_QosInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABLevelQoSParameters( SI_S1AP_DT_E_RABLevelQoSParameters ** data);

void __si_s1ap_debug_E_RABLevelQoSParameters( char * key, SI_S1AP_DT_E_RABLevelQoSParameters * data, int lvl);

void __si_s1ap_memfree_E_RABLevelQoSParameters( SI_S1AP_DT_E_RABLevelQoSParameters * data);

int __si_s1ap_Encode_E_RABLevelQoSParameters( SI_S1AP_DT_E_RABLevelQoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABSecurityResultList( SI_S1AP_DT_E_RABSecurityResultList ** data);

void __si_s1ap_debug_E_RABSecurityResultList( char * key, SI_S1AP_DT_E_RABSecurityResultList * data, int lvl);

void __si_s1ap_memfree_E_RABSecurityResultList( SI_S1AP_DT_E_RABSecurityResultList * data);

int __si_s1ap_Encode_E_RABSecurityResultList( SI_S1AP_DT_E_RABSecurityResultList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_IntegrityProtectionResult( char * key, uint8_t eIntegrityProtectionResult, int lvl);

int __si_s1ap_Encode_IntegrityProtectionResult( uint8_t eIntegrityProtectionResult, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SecurityResult( SI_S1AP_DT_SecurityResult ** data);

void __si_s1ap_debug_SecurityResult( char * key, SI_S1AP_DT_SecurityResult * data, int lvl);

void __si_s1ap_memfree_SecurityResult( SI_S1AP_DT_SecurityResult * data);

int __si_s1ap_Encode_SecurityResult( SI_S1AP_DT_SecurityResult * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABSecurityResultItem( SI_S1AP_DT_E_RABSecurityResultItem ** data);

void __si_s1ap_debug_E_RABSecurityResultItem( char * key, SI_S1AP_DT_E_RABSecurityResultItem * data, int lvl);

void __si_s1ap_memfree_E_RABSecurityResultItem( SI_S1AP_DT_E_RABSecurityResultItem * data);

int __si_s1ap_Encode_E_RABSecurityResultItem( SI_S1AP_DT_E_RABSecurityResultItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABSecurityResultListIEs( SI_S1AP_DT_E_RABSecurityResultListIEs ** data);

void __si_s1ap_debug_E_RABSecurityResultListIEs( char * key, SI_S1AP_DT_E_RABSecurityResultListIEs * data, int lvl);

void __si_s1ap_memfree_E_RABSecurityResultListIEs( SI_S1AP_DT_E_RABSecurityResultListIEs * data);

// EHS-ADT=2  DT=3 Container
int __si_s1ap_Encode_E_RABSecurityResultListIEs( SI_S1AP_DT_E_RABSecurityResultListIEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABUsageReportList( SI_S1AP_DT_E_RABUsageReportList ** data);

void __si_s1ap_debug_E_RABUsageReportList( char * key, SI_S1AP_DT_E_RABUsageReportList * data, int lvl);

void __si_s1ap_memfree_E_RABUsageReportList( SI_S1AP_DT_E_RABUsageReportList * data);

int __si_s1ap_Encode_E_RABUsageReportList( SI_S1AP_DT_E_RABUsageReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ERABUsageReportItem_startTimestamp( SI_S1AP_DT_ERABUsageReportItem_startTimestamp ** data);

void __si_s1ap_init_ERABUsageReportItem_startTimestamp2( SI_S1AP_DT_ERABUsageReportItem_startTimestamp ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_ERABUsageReportItem_startTimestamp( char * key, SI_S1AP_DT_ERABUsageReportItem_startTimestamp * data, int lvl);

void __si_s1ap_memfree_ERABUsageReportItem_startTimestamp( SI_S1AP_DT_ERABUsageReportItem_startTimestamp * data);

int __si_s1ap_Encode_ERABUsageReportItem_startTimestamp( SI_S1AP_DT_ERABUsageReportItem_startTimestamp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ERABUsageReportItem_endTimestamp( SI_S1AP_DT_ERABUsageReportItem_endTimestamp ** data);

void __si_s1ap_init_ERABUsageReportItem_endTimestamp2( SI_S1AP_DT_ERABUsageReportItem_endTimestamp ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_ERABUsageReportItem_endTimestamp( char * key, SI_S1AP_DT_ERABUsageReportItem_endTimestamp * data, int lvl);

void __si_s1ap_memfree_ERABUsageReportItem_endTimestamp( SI_S1AP_DT_ERABUsageReportItem_endTimestamp * data);

int __si_s1ap_Encode_ERABUsageReportItem_endTimestamp( SI_S1AP_DT_ERABUsageReportItem_endTimestamp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ERABUsageReportItem_usageCountUL( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ERABUsageReportItem_usageCountUL( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ERABUsageReportItem_usageCountUL( SI_S1AP_DT_ERABUsageReportItem_usageCountUL * data);


void __si_s1ap_debug_ERABUsageReportItem_usageCountDL( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ERABUsageReportItem_usageCountDL( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ERABUsageReportItem_usageCountDL( SI_S1AP_DT_ERABUsageReportItem_usageCountDL * data);


void __si_s1ap_init_E_RABUsageReportItem( SI_S1AP_DT_E_RABUsageReportItem ** data);

void __si_s1ap_debug_E_RABUsageReportItem( char * key, SI_S1AP_DT_E_RABUsageReportItem * data, int lvl);

void __si_s1ap_memfree_E_RABUsageReportItem( SI_S1AP_DT_E_RABUsageReportItem * data);

int __si_s1ap_Encode_E_RABUsageReportItem( SI_S1AP_DT_E_RABUsageReportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Ethernet_Type( char * key, uint8_t eEthernet_Type, int lvl);

int __si_s1ap_Encode_Ethernet_Type( uint8_t eEthernet_Type, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_EUTRANRoundTripDelayEstimationInfo( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_EUTRANRoundTripDelayEstimationInfo( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_EUTRANRoundTripDelayEstimationInfo( SI_S1AP_DT_EUTRANRoundTripDelayEstimationInfo * data);


void __si_s1ap_debug_Threshold_RSRP( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_Threshold_RSRP( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_Threshold_RSRP( SI_S1AP_DT_Threshold_RSRP * data);


void __si_s1ap_debug_Threshold_RSRQ( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_Threshold_RSRQ( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_Threshold_RSRQ( SI_S1AP_DT_Threshold_RSRQ * data);


void __si_s1ap_init_MeasurementThresholdL1LoggedMDT( SI_S1AP_DT_MeasurementThresholdL1LoggedMDT ** data);

void __si_s1ap_debug_MeasurementThresholdL1LoggedMDT( char * key, SI_S1AP_DT_MeasurementThresholdL1LoggedMDT * data, int lvl);

void __si_s1ap_memfree_MeasurementThresholdL1LoggedMDT( SI_S1AP_DT_MeasurementThresholdL1LoggedMDT * data);

int __si_s1ap_Encode_MeasurementThresholdL1LoggedMDT( SI_S1AP_DT_MeasurementThresholdL1LoggedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Hysteresis( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_Hysteresis( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_Hysteresis( SI_S1AP_DT_Hysteresis * data);


void __si_s1ap_debug_TimeToTrigger( char * key, uint8_t eTimeToTrigger, int lvl);

int __si_s1ap_Encode_TimeToTrigger( uint8_t eTimeToTrigger, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EventL1LoggedMDTConfig( SI_S1AP_DT_EventL1LoggedMDTConfig ** data);

void __si_s1ap_debug_EventL1LoggedMDTConfig( char * key, SI_S1AP_DT_EventL1LoggedMDTConfig * data, int lvl);

void __si_s1ap_memfree_EventL1LoggedMDTConfig( SI_S1AP_DT_EventL1LoggedMDTConfig * data);

int __si_s1ap_Encode_EventL1LoggedMDTConfig( SI_S1AP_DT_EventL1LoggedMDTConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_EventTrigger_outOfCoverage( char * key, uint8_t eEventTrigger_outOfCoverage, int lvl);

int __si_s1ap_Encode_EventTrigger_outOfCoverage( uint8_t eEventTrigger_outOfCoverage, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_EventTrigger( SI_S1AP_DT_EventTrigger ** data);

void __si_s1ap_debug_EventTrigger( char * key, SI_S1AP_DT_EventTrigger * data, int lvl);

void __si_s1ap_memfree_EventTrigger( SI_S1AP_DT_EventTrigger * data);

int __si_s1ap_Encode_EventTrigger( SI_S1AP_DT_EventTrigger * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ExpectedActivityPeriod( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ExpectedActivityPeriod( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ExpectedActivityPeriod( SI_S1AP_DT_ExpectedActivityPeriod * data);


void __si_s1ap_debug_ExpectedIdlePeriod( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ExpectedIdlePeriod( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ExpectedIdlePeriod( SI_S1AP_DT_ExpectedIdlePeriod * data);


void __si_s1ap_debug_SourceOfUEActivityBehaviourInformation( char * key, uint8_t eSourceOfUEActivityBehaviourInformation, int lvl);

int __si_s1ap_Encode_SourceOfUEActivityBehaviourInformation( uint8_t eSourceOfUEActivityBehaviourInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ExpectedUEActivityBehaviour( SI_S1AP_DT_ExpectedUEActivityBehaviour ** data);

void __si_s1ap_debug_ExpectedUEActivityBehaviour( char * key, SI_S1AP_DT_ExpectedUEActivityBehaviour * data, int lvl);

void __si_s1ap_memfree_ExpectedUEActivityBehaviour( SI_S1AP_DT_ExpectedUEActivityBehaviour * data);

int __si_s1ap_Encode_ExpectedUEActivityBehaviour( SI_S1AP_DT_ExpectedUEActivityBehaviour * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ExpectedHOInterval( char * key, uint8_t eExpectedHOInterval, int lvl);

int __si_s1ap_Encode_ExpectedHOInterval( uint8_t eExpectedHOInterval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ExpectedUEBehaviour( SI_S1AP_DT_ExpectedUEBehaviour ** data);

void __si_s1ap_debug_ExpectedUEBehaviour( char * key, SI_S1AP_DT_ExpectedUEBehaviour * data, int lvl);

void __si_s1ap_memfree_ExpectedUEBehaviour( SI_S1AP_DT_ExpectedUEBehaviour * data);

int __si_s1ap_Encode_ExpectedUEBehaviour( SI_S1AP_DT_ExpectedUEBehaviour * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ExtendedBitRate( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ExtendedBitRate( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ExtendedBitRate( SI_S1AP_DT_ExtendedBitRate * data);


void __si_s1ap_debug_ExtendedRNC_ID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ExtendedRNC_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ExtendedRNC_ID( SI_S1AP_DT_ExtendedRNC_ID * data);


void __si_s1ap_debug_ExtendedRepetitionPeriod( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ExtendedRepetitionPeriod( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ExtendedRepetitionPeriod( SI_S1AP_DT_ExtendedRepetitionPeriod * data);


void __si_s1ap_init_Extended_UEIdentityIndexValue( SI_S1AP_DT_Extended_UEIdentityIndexValue ** data);

void __si_s1ap_init_Extended_UEIdentityIndexValue2( SI_S1AP_DT_Extended_UEIdentityIndexValue ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_Extended_UEIdentityIndexValue( char * key, SI_S1AP_DT_Extended_UEIdentityIndexValue * data, int lvl);

void __si_s1ap_memfree_Extended_UEIdentityIndexValue( SI_S1AP_DT_Extended_UEIdentityIndexValue * data);

int __si_s1ap_Encode_Extended_UEIdentityIndexValue( SI_S1AP_DT_Extended_UEIdentityIndexValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_FiveQI( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_FiveQI( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_FiveQI( SI_S1AP_DT_FiveQI * data);


void __si_s1ap_debug_ForbiddenInterRATs( char * key, uint8_t eForbiddenInterRATs, int lvl);

int __si_s1ap_Encode_ForbiddenInterRATs( uint8_t eForbiddenInterRATs, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ForbiddenTAs( SI_S1AP_DT_ForbiddenTAs ** data);

void __si_s1ap_debug_ForbiddenTAs( char * key, SI_S1AP_DT_ForbiddenTAs * data, int lvl);

void __si_s1ap_memfree_ForbiddenTAs( SI_S1AP_DT_ForbiddenTAs * data);

int __si_s1ap_Encode_ForbiddenTAs( SI_S1AP_DT_ForbiddenTAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ForbiddenTACs( SI_S1AP_DT_ForbiddenTACs ** data);

void __si_s1ap_debug_ForbiddenTACs( char * key, SI_S1AP_DT_ForbiddenTACs * data, int lvl);

void __si_s1ap_memfree_ForbiddenTACs( SI_S1AP_DT_ForbiddenTACs * data);

int __si_s1ap_Encode_ForbiddenTACs( SI_S1AP_DT_ForbiddenTACs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ForbiddenTAs_Item( SI_S1AP_DT_ForbiddenTAs_Item ** data);

void __si_s1ap_debug_ForbiddenTAs_Item( char * key, SI_S1AP_DT_ForbiddenTAs_Item * data, int lvl);

void __si_s1ap_memfree_ForbiddenTAs_Item( SI_S1AP_DT_ForbiddenTAs_Item * data);

int __si_s1ap_Encode_ForbiddenTAs_Item( SI_S1AP_DT_ForbiddenTAs_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ForbiddenLAs( SI_S1AP_DT_ForbiddenLAs ** data);

void __si_s1ap_debug_ForbiddenLAs( char * key, SI_S1AP_DT_ForbiddenLAs * data, int lvl);

void __si_s1ap_memfree_ForbiddenLAs( SI_S1AP_DT_ForbiddenLAs * data);

int __si_s1ap_Encode_ForbiddenLAs( SI_S1AP_DT_ForbiddenLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ForbiddenLACs( SI_S1AP_DT_ForbiddenLACs ** data);

void __si_s1ap_debug_ForbiddenLACs( char * key, SI_S1AP_DT_ForbiddenLACs * data, int lvl);

void __si_s1ap_memfree_ForbiddenLACs( SI_S1AP_DT_ForbiddenLACs * data);

int __si_s1ap_Encode_ForbiddenLACs( SI_S1AP_DT_ForbiddenLACs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ForbiddenLAs_Item( SI_S1AP_DT_ForbiddenLAs_Item ** data);

void __si_s1ap_debug_ForbiddenLAs_Item( char * key, SI_S1AP_DT_ForbiddenLAs_Item * data, int lvl);

void __si_s1ap_memfree_ForbiddenLAs_Item( SI_S1AP_DT_ForbiddenLAs_Item * data);

int __si_s1ap_Encode_ForbiddenLAs_Item( SI_S1AP_DT_ForbiddenLAs_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_GTP_TEID( SI_S1AP_DT_GTP_TEID ** data);

void __si_s1ap_init_GTP_TEID2( SI_S1AP_DT_GTP_TEID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_GTP_TEID( char * key, SI_S1AP_DT_GTP_TEID * data, int lvl);

void __si_s1ap_memfree_GTP_TEID( SI_S1AP_DT_GTP_TEID * data);

int __si_s1ap_Encode_GTP_TEID( SI_S1AP_DT_GTP_TEID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_GUMMEIType( char * key, uint8_t eGUMMEIType, int lvl);

int __si_s1ap_Encode_GUMMEIType( uint8_t eGUMMEIType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_GWContextReleaseIndication( char * key, uint8_t eGWContextReleaseIndication, int lvl);

int __si_s1ap_Encode_GWContextReleaseIndication( uint8_t eGWContextReleaseIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_HandoverFlag( char * key, uint8_t eHandoverFlag, int lvl);

int __si_s1ap_Encode_HandoverFlag( uint8_t eHandoverFlag, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_HandoverRestrictionList( SI_S1AP_DT_HandoverRestrictionList ** data);

void __si_s1ap_debug_HandoverRestrictionList( char * key, SI_S1AP_DT_HandoverRestrictionList * data, int lvl);

void __si_s1ap_memfree_HandoverRestrictionList( SI_S1AP_DT_HandoverRestrictionList * data);

int __si_s1ap_Encode_HandoverRestrictionList( SI_S1AP_DT_HandoverRestrictionList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_HandoverType( char * key, uint8_t eHandoverType, int lvl);

int __si_s1ap_Encode_HandoverType( uint8_t eHandoverType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Masked_IMEISV( SI_S1AP_DT_Masked_IMEISV ** data);

void __si_s1ap_init_Masked_IMEISV2( SI_S1AP_DT_Masked_IMEISV ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_Masked_IMEISV( char * key, SI_S1AP_DT_Masked_IMEISV * data, int lvl);

void __si_s1ap_memfree_Masked_IMEISV( SI_S1AP_DT_Masked_IMEISV * data);

int __si_s1ap_Encode_Masked_IMEISV( SI_S1AP_DT_Masked_IMEISV * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MeasurementsToActivate( SI_S1AP_DT_MeasurementsToActivate ** data);

void __si_s1ap_init_MeasurementsToActivate2( SI_S1AP_DT_MeasurementsToActivate ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_MeasurementsToActivate( char * key, SI_S1AP_DT_MeasurementsToActivate * data, int lvl);

void __si_s1ap_memfree_MeasurementsToActivate( SI_S1AP_DT_MeasurementsToActivate * data);

int __si_s1ap_Encode_MeasurementsToActivate( SI_S1AP_DT_MeasurementsToActivate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M1ReportingTrigger( char * key, uint8_t eM1ReportingTrigger, int lvl);

int __si_s1ap_Encode_M1ReportingTrigger( uint8_t eM1ReportingTrigger, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MeasurementThresholdA2( SI_S1AP_DT_MeasurementThresholdA2 ** data);

void __si_s1ap_debug_MeasurementThresholdA2( char * key, SI_S1AP_DT_MeasurementThresholdA2 * data, int lvl);

void __si_s1ap_memfree_MeasurementThresholdA2( SI_S1AP_DT_MeasurementThresholdA2 * data);

int __si_s1ap_Encode_MeasurementThresholdA2( SI_S1AP_DT_MeasurementThresholdA2 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_M1ThresholdEventA2( SI_S1AP_DT_M1ThresholdEventA2 ** data);

void __si_s1ap_debug_M1ThresholdEventA2( char * key, SI_S1AP_DT_M1ThresholdEventA2 * data, int lvl);

void __si_s1ap_memfree_M1ThresholdEventA2( SI_S1AP_DT_M1ThresholdEventA2 * data);

int __si_s1ap_Encode_M1ThresholdEventA2( SI_S1AP_DT_M1ThresholdEventA2 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ReportIntervalMDT( char * key, uint8_t eReportIntervalMDT, int lvl);

int __si_s1ap_Encode_ReportIntervalMDT( uint8_t eReportIntervalMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ReportAmountMDT( char * key, uint8_t eReportAmountMDT, int lvl);

int __si_s1ap_Encode_ReportAmountMDT( uint8_t eReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_M1PeriodicReporting( SI_S1AP_DT_M1PeriodicReporting ** data);

void __si_s1ap_debug_M1PeriodicReporting( char * key, SI_S1AP_DT_M1PeriodicReporting * data, int lvl);

void __si_s1ap_memfree_M1PeriodicReporting( SI_S1AP_DT_M1PeriodicReporting * data);

int __si_s1ap_Encode_M1PeriodicReporting( SI_S1AP_DT_M1PeriodicReporting * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ImmediateMDT( SI_S1AP_DT_ImmediateMDT ** data);

void __si_s1ap_debug_ImmediateMDT( char * key, SI_S1AP_DT_ImmediateMDT * data, int lvl);

void __si_s1ap_memfree_ImmediateMDT( SI_S1AP_DT_ImmediateMDT * data);

int __si_s1ap_Encode_ImmediateMDT( SI_S1AP_DT_ImmediateMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_IMSI( SI_S1AP_DT_IMSI ** data);

void __si_s1ap_init_IMSI2( SI_S1AP_DT_IMSI ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_IMSI( char * key, SI_S1AP_DT_IMSI * data, int lvl);

void __si_s1ap_memfree_IMSI( SI_S1AP_DT_IMSI * data);

int __si_s1ap_Encode_IMSI( SI_S1AP_DT_IMSI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RecommendedENBList( SI_S1AP_DT_RecommendedENBList ** data);

void __si_s1ap_debug_RecommendedENBList( char * key, SI_S1AP_DT_RecommendedENBList * data, int lvl);

void __si_s1ap_memfree_RecommendedENBList( SI_S1AP_DT_RecommendedENBList * data);

int __si_s1ap_Encode_RecommendedENBList( SI_S1AP_DT_RecommendedENBList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RecommendedENBsForPaging( SI_S1AP_DT_RecommendedENBsForPaging ** data);

void __si_s1ap_debug_RecommendedENBsForPaging( char * key, SI_S1AP_DT_RecommendedENBsForPaging * data, int lvl);

void __si_s1ap_memfree_RecommendedENBsForPaging( SI_S1AP_DT_RecommendedENBsForPaging * data);

int __si_s1ap_Encode_RecommendedENBsForPaging( SI_S1AP_DT_RecommendedENBsForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_InformationOnRecommendedCellsAndENBsForPaging( SI_S1AP_DT_InformationOnRecommendedCellsAndENBsForPaging ** data);

void __si_s1ap_debug_InformationOnRecommendedCellsAndENBsForPaging( char * key, SI_S1AP_DT_InformationOnRecommendedCellsAndENBsForPaging * data, int lvl);

void __si_s1ap_memfree_InformationOnRecommendedCellsAndENBsForPaging( SI_S1AP_DT_InformationOnRecommendedCellsAndENBsForPaging * data);

int __si_s1ap_Encode_InformationOnRecommendedCellsAndENBsForPaging( SI_S1AP_DT_InformationOnRecommendedCellsAndENBsForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_IntegrityProtectionAlgorithms( SI_S1AP_DT_IntegrityProtectionAlgorithms ** data);

void __si_s1ap_init_IntegrityProtectionAlgorithms2( SI_S1AP_DT_IntegrityProtectionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_IntegrityProtectionAlgorithms( char * key, SI_S1AP_DT_IntegrityProtectionAlgorithms * data, int lvl);

void __si_s1ap_memfree_IntegrityProtectionAlgorithms( SI_S1AP_DT_IntegrityProtectionAlgorithms * data);

int __si_s1ap_Encode_IntegrityProtectionAlgorithms( SI_S1AP_DT_IntegrityProtectionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_IntegrityProtectionIndication( char * key, uint8_t eIntegrityProtectionIndication, int lvl);

int __si_s1ap_Encode_IntegrityProtectionIndication( uint8_t eIntegrityProtectionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_InterfacesToTrace( SI_S1AP_DT_InterfacesToTrace ** data);

void __si_s1ap_init_InterfacesToTrace2( SI_S1AP_DT_InterfacesToTrace ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_InterfacesToTrace( char * key, SI_S1AP_DT_InterfacesToTrace * data, int lvl);

void __si_s1ap_memfree_InterfacesToTrace( SI_S1AP_DT_InterfacesToTrace * data);

int __si_s1ap_Encode_InterfacesToTrace( SI_S1AP_DT_InterfacesToTrace * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_IntersystemMeasurementConfiguration_rSRP( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_IntersystemMeasurementConfiguration_rSRP( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_IntersystemMeasurementConfiguration_rSRP( SI_S1AP_DT_IntersystemMeasurementConfiguration_rSRP * data);


void __si_s1ap_debug_IntersystemMeasurementConfiguration_rSRQ( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_IntersystemMeasurementConfiguration_rSRQ( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_IntersystemMeasurementConfiguration_rSRQ( SI_S1AP_DT_IntersystemMeasurementConfiguration_rSRQ * data);


void __si_s1ap_debug_IntersystemMeasurementConfiguration_sINR( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_IntersystemMeasurementConfiguration_sINR( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_IntersystemMeasurementConfiguration_sINR( SI_S1AP_DT_IntersystemMeasurementConfiguration_sINR * data);


void __si_s1ap_debug_InterSystemMeasurementParameters_measurementDuration( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_InterSystemMeasurementParameters_measurementDuration( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_InterSystemMeasurementParameters_measurementDuration( SI_S1AP_DT_InterSystemMeasurementParameters_measurementDuration * data);


void __si_s1ap_init_InterSystemMeasurementList( SI_S1AP_DT_InterSystemMeasurementList ** data);

void __si_s1ap_debug_InterSystemMeasurementList( char * key, SI_S1AP_DT_InterSystemMeasurementList * data, int lvl);

void __si_s1ap_memfree_InterSystemMeasurementList( SI_S1AP_DT_InterSystemMeasurementList * data);

int __si_s1ap_Encode_InterSystemMeasurementList( SI_S1AP_DT_InterSystemMeasurementList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_InterSystemMeasurementParameters( SI_S1AP_DT_InterSystemMeasurementParameters ** data);

void __si_s1ap_debug_InterSystemMeasurementParameters( char * key, SI_S1AP_DT_InterSystemMeasurementParameters * data, int lvl);

void __si_s1ap_memfree_InterSystemMeasurementParameters( SI_S1AP_DT_InterSystemMeasurementParameters * data);

int __si_s1ap_Encode_InterSystemMeasurementParameters( SI_S1AP_DT_InterSystemMeasurementParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_IntersystemMeasurementConfiguration( SI_S1AP_DT_IntersystemMeasurementConfiguration ** data);

void __si_s1ap_debug_IntersystemMeasurementConfiguration( char * key, SI_S1AP_DT_IntersystemMeasurementConfiguration * data, int lvl);

void __si_s1ap_memfree_IntersystemMeasurementConfiguration( SI_S1AP_DT_IntersystemMeasurementConfiguration * data);

int __si_s1ap_Encode_IntersystemMeasurementConfiguration( SI_S1AP_DT_IntersystemMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_InterSystemMeasurementItem_freqBandIndicatorNR( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_InterSystemMeasurementItem_freqBandIndicatorNR( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_InterSystemMeasurementItem_freqBandIndicatorNR( SI_S1AP_DT_InterSystemMeasurementItem_freqBandIndicatorNR * data);


void __si_s1ap_debug_InterSystemMeasurementItem_sSBfrequencies( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_InterSystemMeasurementItem_sSBfrequencies( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_InterSystemMeasurementItem_sSBfrequencies( SI_S1AP_DT_InterSystemMeasurementItem_sSBfrequencies * data);


void __si_s1ap_debug_InterSystemMeasurementItem_subcarrierSpacingSSB( char * key, uint8_t eInterSystemMeasurementItem_subcarrierSpacingSSB, int lvl);

int __si_s1ap_Encode_InterSystemMeasurementItem_subcarrierSpacingSSB( uint8_t eInterSystemMeasurementItem_subcarrierSpacingSSB, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_InterSystemMeasurementItem_maxRSIndexCellQual( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_InterSystemMeasurementItem_maxRSIndexCellQual( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_InterSystemMeasurementItem_maxRSIndexCellQual( SI_S1AP_DT_InterSystemMeasurementItem_maxRSIndexCellQual * data);


void __si_s1ap_init_InterSystemMeasurementItem_sMTC( SI_S1AP_DT_InterSystemMeasurementItem_sMTC ** data);

void __si_s1ap_init_InterSystemMeasurementItem_sMTC2( SI_S1AP_DT_InterSystemMeasurementItem_sMTC ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_InterSystemMeasurementItem_sMTC( char * key, SI_S1AP_DT_InterSystemMeasurementItem_sMTC * data, int lvl);

void __si_s1ap_memfree_InterSystemMeasurementItem_sMTC( SI_S1AP_DT_InterSystemMeasurementItem_sMTC * data);

int __si_s1ap_Encode_InterSystemMeasurementItem_sMTC( SI_S1AP_DT_InterSystemMeasurementItem_sMTC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_InterSystemMeasurementItem_threshRS_Index_r15( SI_S1AP_DT_InterSystemMeasurementItem_threshRS_Index_r15 ** data);

void __si_s1ap_init_InterSystemMeasurementItem_threshRS_Index_r152( SI_S1AP_DT_InterSystemMeasurementItem_threshRS_Index_r15 ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_InterSystemMeasurementItem_threshRS_Index_r15( char * key, SI_S1AP_DT_InterSystemMeasurementItem_threshRS_Index_r15 * data, int lvl);

void __si_s1ap_memfree_InterSystemMeasurementItem_threshRS_Index_r15( SI_S1AP_DT_InterSystemMeasurementItem_threshRS_Index_r15 * data);

int __si_s1ap_Encode_InterSystemMeasurementItem_threshRS_Index_r15( SI_S1AP_DT_InterSystemMeasurementItem_threshRS_Index_r15 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_InterSystemMeasurementItem_sSBToMeasure( SI_S1AP_DT_InterSystemMeasurementItem_sSBToMeasure ** data);

void __si_s1ap_init_InterSystemMeasurementItem_sSBToMeasure2( SI_S1AP_DT_InterSystemMeasurementItem_sSBToMeasure ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_InterSystemMeasurementItem_sSBToMeasure( char * key, SI_S1AP_DT_InterSystemMeasurementItem_sSBToMeasure * data, int lvl);

void __si_s1ap_memfree_InterSystemMeasurementItem_sSBToMeasure( SI_S1AP_DT_InterSystemMeasurementItem_sSBToMeasure * data);

int __si_s1ap_Encode_InterSystemMeasurementItem_sSBToMeasure( SI_S1AP_DT_InterSystemMeasurementItem_sSBToMeasure * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_InterSystemMeasurementItem_sSRSSIMeasurement( SI_S1AP_DT_InterSystemMeasurementItem_sSRSSIMeasurement ** data);

void __si_s1ap_init_InterSystemMeasurementItem_sSRSSIMeasurement2( SI_S1AP_DT_InterSystemMeasurementItem_sSRSSIMeasurement ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_InterSystemMeasurementItem_sSRSSIMeasurement( char * key, SI_S1AP_DT_InterSystemMeasurementItem_sSRSSIMeasurement * data, int lvl);

void __si_s1ap_memfree_InterSystemMeasurementItem_sSRSSIMeasurement( SI_S1AP_DT_InterSystemMeasurementItem_sSRSSIMeasurement * data);

int __si_s1ap_Encode_InterSystemMeasurementItem_sSRSSIMeasurement( SI_S1AP_DT_InterSystemMeasurementItem_sSRSSIMeasurement * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_InterSystemMeasurementItem_quantityConfigNR_R15( SI_S1AP_DT_InterSystemMeasurementItem_quantityConfigNR_R15 ** data);

void __si_s1ap_init_InterSystemMeasurementItem_quantityConfigNR_R152( SI_S1AP_DT_InterSystemMeasurementItem_quantityConfigNR_R15 ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_InterSystemMeasurementItem_quantityConfigNR_R15( char * key, SI_S1AP_DT_InterSystemMeasurementItem_quantityConfigNR_R15 * data, int lvl);

void __si_s1ap_memfree_InterSystemMeasurementItem_quantityConfigNR_R15( SI_S1AP_DT_InterSystemMeasurementItem_quantityConfigNR_R15 * data);

int __si_s1ap_Encode_InterSystemMeasurementItem_quantityConfigNR_R15( SI_S1AP_DT_InterSystemMeasurementItem_quantityConfigNR_R15 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_InterSystemMeasurementItem_excludedCellsToAddModList( SI_S1AP_DT_InterSystemMeasurementItem_excludedCellsToAddModList ** data);

void __si_s1ap_init_InterSystemMeasurementItem_excludedCellsToAddModList2( SI_S1AP_DT_InterSystemMeasurementItem_excludedCellsToAddModList ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_InterSystemMeasurementItem_excludedCellsToAddModList( char * key, SI_S1AP_DT_InterSystemMeasurementItem_excludedCellsToAddModList * data, int lvl);

void __si_s1ap_memfree_InterSystemMeasurementItem_excludedCellsToAddModList( SI_S1AP_DT_InterSystemMeasurementItem_excludedCellsToAddModList * data);

int __si_s1ap_Encode_InterSystemMeasurementItem_excludedCellsToAddModList( SI_S1AP_DT_InterSystemMeasurementItem_excludedCellsToAddModList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_InterSystemMeasurementItem( SI_S1AP_DT_InterSystemMeasurementItem ** data);

void __si_s1ap_debug_InterSystemMeasurementItem( char * key, SI_S1AP_DT_InterSystemMeasurementItem * data, int lvl);

void __si_s1ap_memfree_InterSystemMeasurementItem( SI_S1AP_DT_InterSystemMeasurementItem * data);

int __si_s1ap_Encode_InterSystemMeasurementItem( SI_S1AP_DT_InterSystemMeasurementItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_IntersystemSONConfigurationTransfer( SI_S1AP_DT_IntersystemSONConfigurationTransfer ** data);

void __si_s1ap_init_IntersystemSONConfigurationTransfer2( SI_S1AP_DT_IntersystemSONConfigurationTransfer ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_IntersystemSONConfigurationTransfer( char * key, SI_S1AP_DT_IntersystemSONConfigurationTransfer * data, int lvl);

void __si_s1ap_memfree_IntersystemSONConfigurationTransfer( SI_S1AP_DT_IntersystemSONConfigurationTransfer * data);

int __si_s1ap_Encode_IntersystemSONConfigurationTransfer( SI_S1AP_DT_IntersystemSONConfigurationTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_IMSvoiceEPSfallbackfrom5G( char * key, uint8_t eIMSvoiceEPSfallbackfrom5G, int lvl);

int __si_s1ap_Encode_IMSvoiceEPSfallbackfrom5G( uint8_t eIMSvoiceEPSfallbackfrom5G, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_IAB_Authorized( char * key, uint8_t eIAB_Authorized, int lvl);

int __si_s1ap_Encode_IAB_Authorized( uint8_t eIAB_Authorized, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_IAB_Node_Indication( char * key, uint8_t eIAB_Node_Indication, int lvl);

int __si_s1ap_Encode_IAB_Node_Indication( uint8_t eIAB_Node_Indication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_IAB_Supported( char * key, uint8_t eIAB_Supported, int lvl);

int __si_s1ap_Encode_IAB_Supported( uint8_t eIAB_Supported, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_KillAllWarningMessages( char * key, uint8_t eKillAllWarningMessages, int lvl);

int __si_s1ap_Encode_KillAllWarningMessages( uint8_t eKillAllWarningMessages, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Time_UE_StayedInCell( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_Time_UE_StayedInCell( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_Time_UE_StayedInCell( SI_S1AP_DT_Time_UE_StayedInCell * data);


void __si_s1ap_init_LastVisitedEUTRANCellInformation( SI_S1AP_DT_LastVisitedEUTRANCellInformation ** data);

void __si_s1ap_debug_LastVisitedEUTRANCellInformation( char * key, SI_S1AP_DT_LastVisitedEUTRANCellInformation * data, int lvl);

void __si_s1ap_memfree_LastVisitedEUTRANCellInformation( SI_S1AP_DT_LastVisitedEUTRANCellInformation * data);

int __si_s1ap_Encode_LastVisitedEUTRANCellInformation( SI_S1AP_DT_LastVisitedEUTRANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LastVisitedUTRANCellInformation( SI_S1AP_DT_LastVisitedUTRANCellInformation ** data);

void __si_s1ap_init_LastVisitedUTRANCellInformation2( SI_S1AP_DT_LastVisitedUTRANCellInformation ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_LastVisitedUTRANCellInformation( char * key, SI_S1AP_DT_LastVisitedUTRANCellInformation * data, int lvl);

void __si_s1ap_memfree_LastVisitedUTRANCellInformation( SI_S1AP_DT_LastVisitedUTRANCellInformation * data);

int __si_s1ap_Encode_LastVisitedUTRANCellInformation( SI_S1AP_DT_LastVisitedUTRANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LastVisitedGERANCellInformation( SI_S1AP_DT_LastVisitedGERANCellInformation ** data);

void __si_s1ap_debug_LastVisitedGERANCellInformation( char * key, SI_S1AP_DT_LastVisitedGERANCellInformation * data, int lvl);

void __si_s1ap_memfree_LastVisitedGERANCellInformation( SI_S1AP_DT_LastVisitedGERANCellInformation * data);

int __si_s1ap_Encode_LastVisitedGERANCellInformation( SI_S1AP_DT_LastVisitedGERANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LastVisitedNGRANCellInformation( SI_S1AP_DT_LastVisitedNGRANCellInformation ** data);

void __si_s1ap_init_LastVisitedNGRANCellInformation2( SI_S1AP_DT_LastVisitedNGRANCellInformation ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_LastVisitedNGRANCellInformation( char * key, SI_S1AP_DT_LastVisitedNGRANCellInformation * data, int lvl);

void __si_s1ap_memfree_LastVisitedNGRANCellInformation( SI_S1AP_DT_LastVisitedNGRANCellInformation * data);

int __si_s1ap_Encode_LastVisitedNGRANCellInformation( SI_S1AP_DT_LastVisitedNGRANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LastVisitedCell_Item( SI_S1AP_DT_LastVisitedCell_Item ** data);

void __si_s1ap_debug_LastVisitedCell_Item( char * key, SI_S1AP_DT_LastVisitedCell_Item * data, int lvl);

void __si_s1ap_memfree_LastVisitedCell_Item( SI_S1AP_DT_LastVisitedCell_Item * data);

int __si_s1ap_Encode_LastVisitedCell_Item( SI_S1AP_DT_LastVisitedCell_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LastVisitedPSCellList( SI_S1AP_DT_LastVisitedPSCellList ** data);

void __si_s1ap_debug_LastVisitedPSCellList( char * key, SI_S1AP_DT_LastVisitedPSCellList * data, int lvl);

void __si_s1ap_memfree_LastVisitedPSCellList( SI_S1AP_DT_LastVisitedPSCellList * data);

int __si_s1ap_Encode_LastVisitedPSCellList( SI_S1AP_DT_LastVisitedPSCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_LastVisitedPSCellInformation_timeStay( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_LastVisitedPSCellInformation_timeStay( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_LastVisitedPSCellInformation_timeStay( SI_S1AP_DT_LastVisitedPSCellInformation_timeStay * data);


void __si_s1ap_init_NRCellIdentity( SI_S1AP_DT_NRCellIdentity ** data);

void __si_s1ap_init_NRCellIdentity2( SI_S1AP_DT_NRCellIdentity ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_NRCellIdentity( char * key, SI_S1AP_DT_NRCellIdentity * data, int lvl);

void __si_s1ap_memfree_NRCellIdentity( SI_S1AP_DT_NRCellIdentity * data);

int __si_s1ap_Encode_NRCellIdentity( SI_S1AP_DT_NRCellIdentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NR_CGI( SI_S1AP_DT_NR_CGI ** data);

void __si_s1ap_debug_NR_CGI( char * key, SI_S1AP_DT_NR_CGI * data, int lvl);

void __si_s1ap_memfree_NR_CGI( SI_S1AP_DT_NR_CGI * data);

int __si_s1ap_Encode_NR_CGI( SI_S1AP_DT_NR_CGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_PSCellInformation( SI_S1AP_DT_PSCellInformation ** data);

void __si_s1ap_debug_PSCellInformation( char * key, SI_S1AP_DT_PSCellInformation * data, int lvl);

void __si_s1ap_memfree_PSCellInformation( SI_S1AP_DT_PSCellInformation * data);

int __si_s1ap_Encode_PSCellInformation( SI_S1AP_DT_PSCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LastVisitedPSCellInformation( SI_S1AP_DT_LastVisitedPSCellInformation ** data);

void __si_s1ap_debug_LastVisitedPSCellInformation( char * key, SI_S1AP_DT_LastVisitedPSCellInformation * data, int lvl);

void __si_s1ap_memfree_LastVisitedPSCellInformation( SI_S1AP_DT_LastVisitedPSCellInformation * data);

int __si_s1ap_Encode_LastVisitedPSCellInformation( SI_S1AP_DT_LastVisitedPSCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_L3_Information( SI_S1AP_DT_L3_Information ** data);

void __si_s1ap_init_L3_Information2( SI_S1AP_DT_L3_Information ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_L3_Information( char * key, SI_S1AP_DT_L3_Information * data, int lvl);

void __si_s1ap_memfree_L3_Information( SI_S1AP_DT_L3_Information * data);

int __si_s1ap_Encode_L3_Information( SI_S1AP_DT_L3_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LPPa_PDU( SI_S1AP_DT_LPPa_PDU ** data);

void __si_s1ap_init_LPPa_PDU2( SI_S1AP_DT_LPPa_PDU ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_LPPa_PDU( char * key, SI_S1AP_DT_LPPa_PDU * data, int lvl);

void __si_s1ap_memfree_LPPa_PDU( SI_S1AP_DT_LPPa_PDU * data);

int __si_s1ap_Encode_LPPa_PDU( SI_S1AP_DT_LPPa_PDU * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LHN_ID( SI_S1AP_DT_LHN_ID ** data);

void __si_s1ap_init_LHN_ID2( SI_S1AP_DT_LHN_ID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_LHN_ID( char * key, SI_S1AP_DT_LHN_ID * data, int lvl);

void __si_s1ap_memfree_LHN_ID( SI_S1AP_DT_LHN_ID * data);

int __si_s1ap_Encode_LHN_ID( SI_S1AP_DT_LHN_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Links_to_log( char * key, uint8_t eLinks_to_log, int lvl);

int __si_s1ap_Encode_Links_to_log( uint8_t eLinks_to_log, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ListeningSubframePattern_pattern_period( char * key, uint8_t eListeningSubframePattern_pattern_period, int lvl);

int __si_s1ap_Encode_ListeningSubframePattern_pattern_period( uint8_t eListeningSubframePattern_pattern_period, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ListeningSubframePattern_pattern_offset( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ListeningSubframePattern_pattern_offset( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ListeningSubframePattern_pattern_offset( SI_S1AP_DT_ListeningSubframePattern_pattern_offset * data);


void __si_s1ap_init_ListeningSubframePattern( SI_S1AP_DT_ListeningSubframePattern ** data);

void __si_s1ap_debug_ListeningSubframePattern( char * key, SI_S1AP_DT_ListeningSubframePattern * data, int lvl);

void __si_s1ap_memfree_ListeningSubframePattern( SI_S1AP_DT_ListeningSubframePattern * data);

int __si_s1ap_Encode_ListeningSubframePattern( SI_S1AP_DT_ListeningSubframePattern * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_LoggingInterval( char * key, uint8_t eLoggingInterval, int lvl);

int __si_s1ap_Encode_LoggingInterval( uint8_t eLoggingInterval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_LoggingDuration( char * key, uint8_t eLoggingDuration, int lvl);

int __si_s1ap_Encode_LoggingDuration( uint8_t eLoggingDuration, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LoggedMDT( SI_S1AP_DT_LoggedMDT ** data);

void __si_s1ap_debug_LoggedMDT( char * key, SI_S1AP_DT_LoggedMDT * data, int lvl);

void __si_s1ap_memfree_LoggedMDT( SI_S1AP_DT_LoggedMDT * data);

int __si_s1ap_Encode_LoggedMDT( SI_S1AP_DT_LoggedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MBSFN_ResultToLog( SI_S1AP_DT_MBSFN_ResultToLog ** data);

void __si_s1ap_debug_MBSFN_ResultToLog( char * key, SI_S1AP_DT_MBSFN_ResultToLog * data, int lvl);

void __si_s1ap_memfree_MBSFN_ResultToLog( SI_S1AP_DT_MBSFN_ResultToLog * data);

int __si_s1ap_Encode_MBSFN_ResultToLog( SI_S1AP_DT_MBSFN_ResultToLog * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LoggedMBSFNMDT( SI_S1AP_DT_LoggedMBSFNMDT ** data);

void __si_s1ap_debug_LoggedMBSFNMDT( char * key, SI_S1AP_DT_LoggedMBSFNMDT * data, int lvl);

void __si_s1ap_memfree_LoggedMBSFNMDT( SI_S1AP_DT_LoggedMBSFNMDT * data);

int __si_s1ap_Encode_LoggedMBSFNMDT( SI_S1AP_DT_LoggedMBSFNMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LoggedMDTTrigger( SI_S1AP_DT_LoggedMDTTrigger ** data);

void __si_s1ap_debug_LoggedMDTTrigger( char * key, SI_S1AP_DT_LoggedMDTTrigger * data, int lvl);

void __si_s1ap_memfree_LoggedMDTTrigger( SI_S1AP_DT_LoggedMDTTrigger * data);

int __si_s1ap_Encode_LoggedMDTTrigger( SI_S1AP_DT_LoggedMDTTrigger * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_LTE_M_Indication( char * key, uint8_t eLTE_M_Indication, int lvl);

int __si_s1ap_Encode_LTE_M_Indication( uint8_t eLTE_M_Indication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TACList_In_LTE_NTN( SI_S1AP_DT_TACList_In_LTE_NTN ** data);

void __si_s1ap_debug_TACList_In_LTE_NTN( char * key, SI_S1AP_DT_TACList_In_LTE_NTN * data, int lvl);

void __si_s1ap_memfree_TACList_In_LTE_NTN( SI_S1AP_DT_TACList_In_LTE_NTN * data);

int __si_s1ap_Encode_TACList_In_LTE_NTN( SI_S1AP_DT_TACList_In_LTE_NTN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_LTE_NTN_TAI_Information( SI_S1AP_DT_LTE_NTN_TAI_Information ** data);

void __si_s1ap_debug_LTE_NTN_TAI_Information( char * key, SI_S1AP_DT_LTE_NTN_TAI_Information * data, int lvl);

void __si_s1ap_memfree_LTE_NTN_TAI_Information( SI_S1AP_DT_LTE_NTN_TAI_Information * data);

int __si_s1ap_Encode_LTE_NTN_TAI_Information( SI_S1AP_DT_LTE_NTN_TAI_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M3period( char * key, uint8_t eM3period, int lvl);

int __si_s1ap_Encode_M3period( uint8_t eM3period, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_M3Configuration( SI_S1AP_DT_M3Configuration ** data);

void __si_s1ap_debug_M3Configuration( char * key, SI_S1AP_DT_M3Configuration * data, int lvl);

void __si_s1ap_memfree_M3Configuration( SI_S1AP_DT_M3Configuration * data);

int __si_s1ap_Encode_M3Configuration( SI_S1AP_DT_M3Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M4period( char * key, uint8_t eM4period, int lvl);

int __si_s1ap_Encode_M4period( uint8_t eM4period, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_M4Configuration( SI_S1AP_DT_M4Configuration ** data);

void __si_s1ap_debug_M4Configuration( char * key, SI_S1AP_DT_M4Configuration * data, int lvl);

void __si_s1ap_memfree_M4Configuration( SI_S1AP_DT_M4Configuration * data);

int __si_s1ap_Encode_M4Configuration( SI_S1AP_DT_M4Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M4ReportAmountMDT( char * key, uint8_t eM4ReportAmountMDT, int lvl);

int __si_s1ap_Encode_M4ReportAmountMDT( uint8_t eM4ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M5period( char * key, uint8_t eM5period, int lvl);

int __si_s1ap_Encode_M5period( uint8_t eM5period, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_M5Configuration( SI_S1AP_DT_M5Configuration ** data);

void __si_s1ap_debug_M5Configuration( char * key, SI_S1AP_DT_M5Configuration * data, int lvl);

void __si_s1ap_memfree_M5Configuration( SI_S1AP_DT_M5Configuration * data);

int __si_s1ap_Encode_M5Configuration( SI_S1AP_DT_M5Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M5ReportAmountMDT( char * key, uint8_t eM5ReportAmountMDT, int lvl);

int __si_s1ap_Encode_M5ReportAmountMDT( uint8_t eM5ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M6report_Interval( char * key, uint8_t eM6report_Interval, int lvl);

int __si_s1ap_Encode_M6report_Interval( uint8_t eM6report_Interval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M6delay_threshold( char * key, uint8_t eM6delay_threshold, int lvl);

int __si_s1ap_Encode_M6delay_threshold( uint8_t eM6delay_threshold, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_M6Configuration( SI_S1AP_DT_M6Configuration ** data);

void __si_s1ap_debug_M6Configuration( char * key, SI_S1AP_DT_M6Configuration * data, int lvl);

void __si_s1ap_memfree_M6Configuration( SI_S1AP_DT_M6Configuration * data);

int __si_s1ap_Encode_M6Configuration( SI_S1AP_DT_M6Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M6ReportAmountMDT( char * key, uint8_t eM6ReportAmountMDT, int lvl);

int __si_s1ap_Encode_M6ReportAmountMDT( uint8_t eM6ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M7period( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_M7period( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_M7period( SI_S1AP_DT_M7period * data);


void __si_s1ap_init_M7Configuration( SI_S1AP_DT_M7Configuration ** data);

void __si_s1ap_debug_M7Configuration( char * key, SI_S1AP_DT_M7Configuration * data, int lvl);

void __si_s1ap_memfree_M7Configuration( SI_S1AP_DT_M7Configuration * data);

int __si_s1ap_Encode_M7Configuration( SI_S1AP_DT_M7Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_M7ReportAmountMDT( char * key, uint8_t eM7ReportAmountMDT, int lvl);

int __si_s1ap_Encode_M7ReportAmountMDT( uint8_t eM7ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_MDT_Activation( char * key, uint8_t eMDT_Activation, int lvl);

int __si_s1ap_Encode_MDT_Activation( uint8_t eMDT_Activation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MDT_Location_Info( SI_S1AP_DT_MDT_Location_Info ** data);

void __si_s1ap_init_MDT_Location_Info2( SI_S1AP_DT_MDT_Location_Info ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_MDT_Location_Info( char * key, SI_S1AP_DT_MDT_Location_Info * data, int lvl);

void __si_s1ap_memfree_MDT_Location_Info( SI_S1AP_DT_MDT_Location_Info * data);

int __si_s1ap_Encode_MDT_Location_Info( SI_S1AP_DT_MDT_Location_Info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->MDTMode-ExtensionIE<- Got NULL  L:7577

void __si_s1ap_init_MDTMode_Extension( SI_S1AP_DT_MDTMode_Extension ** data);

void __si_s1ap_debug_MDTMode_Extension( char * key, SI_S1AP_DT_MDTMode_Extension * data, int lvl);

void __si_s1ap_memfree_MDTMode_Extension( SI_S1AP_DT_MDTMode_Extension * data);

// EHS-ADT=0  DT=1 Container
int __si_s1ap_Encode_MDTMode_Extension( SI_S1AP_DT_MDTMode_Extension * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MDTMode( SI_S1AP_DT_MDTMode ** data);

void __si_s1ap_debug_MDTMode( char * key, SI_S1AP_DT_MDTMode * data, int lvl);

void __si_s1ap_memfree_MDTMode( SI_S1AP_DT_MDTMode * data);

int __si_s1ap_Encode_MDTMode( SI_S1AP_DT_MDTMode * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MDT_Configuration( SI_S1AP_DT_MDT_Configuration ** data);

void __si_s1ap_debug_MDT_Configuration( char * key, SI_S1AP_DT_MDT_Configuration * data, int lvl);

void __si_s1ap_memfree_MDT_Configuration( SI_S1AP_DT_MDT_Configuration * data);

int __si_s1ap_Encode_MDT_Configuration( SI_S1AP_DT_MDT_Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ManagementBasedMDTAllowed( char * key, uint8_t eManagementBasedMDTAllowed, int lvl);

int __si_s1ap_Encode_ManagementBasedMDTAllowed( uint8_t eManagementBasedMDTAllowed, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_MBSFNResultToLogInfo_mBSFN_AreaId( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_MBSFNResultToLogInfo_mBSFN_AreaId( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_MBSFNResultToLogInfo_mBSFN_AreaId( SI_S1AP_DT_MBSFNResultToLogInfo_mBSFN_AreaId * data);


void __si_s1ap_init_MBSFN_ResultToLogInfo( SI_S1AP_DT_MBSFN_ResultToLogInfo ** data);

void __si_s1ap_debug_MBSFN_ResultToLogInfo( char * key, SI_S1AP_DT_MBSFN_ResultToLogInfo * data, int lvl);

void __si_s1ap_memfree_MBSFN_ResultToLogInfo( SI_S1AP_DT_MBSFN_ResultToLogInfo * data);

int __si_s1ap_Encode_MBSFN_ResultToLogInfo( SI_S1AP_DT_MBSFN_ResultToLogInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MDTPLMNList( SI_S1AP_DT_MDTPLMNList ** data);

void __si_s1ap_debug_MDTPLMNList( char * key, SI_S1AP_DT_MDTPLMNList * data, int lvl);

void __si_s1ap_memfree_MDTPLMNList( SI_S1AP_DT_MDTPLMNList * data);

int __si_s1ap_Encode_MDTPLMNList( SI_S1AP_DT_MDTPLMNList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PrivacyIndicator( char * key, uint8_t ePrivacyIndicator, int lvl);

int __si_s1ap_Encode_PrivacyIndicator( uint8_t ePrivacyIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MessageIdentifier( SI_S1AP_DT_MessageIdentifier ** data);

void __si_s1ap_init_MessageIdentifier2( SI_S1AP_DT_MessageIdentifier ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_MessageIdentifier( char * key, SI_S1AP_DT_MessageIdentifier * data, int lvl);

void __si_s1ap_memfree_MessageIdentifier( SI_S1AP_DT_MessageIdentifier * data);

int __si_s1ap_Encode_MessageIdentifier( SI_S1AP_DT_MessageIdentifier * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MobilityInformation( SI_S1AP_DT_MobilityInformation ** data);

void __si_s1ap_init_MobilityInformation2( SI_S1AP_DT_MobilityInformation ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_MobilityInformation( char * key, SI_S1AP_DT_MobilityInformation * data, int lvl);

void __si_s1ap_memfree_MobilityInformation( SI_S1AP_DT_MobilityInformation * data);

int __si_s1ap_Encode_MobilityInformation( SI_S1AP_DT_MobilityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MMEname( SI_S1AP_DT_MMEname ** data);

void __si_s1ap_init_MMEname2( SI_S1AP_DT_MMEname ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_MMEname( char * key, SI_S1AP_DT_MMEname * data, int lvl);

void __si_s1ap_memfree_MMEname( SI_S1AP_DT_MMEname * data);

int __si_s1ap_Encode_MMEname( SI_S1AP_DT_MMEname * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MMEPagingTarget( SI_S1AP_DT_MMEPagingTarget ** data);

void __si_s1ap_debug_MMEPagingTarget( char * key, SI_S1AP_DT_MMEPagingTarget * data, int lvl);

void __si_s1ap_memfree_MMEPagingTarget( SI_S1AP_DT_MMEPagingTarget * data);

int __si_s1ap_Encode_MMEPagingTarget( SI_S1AP_DT_MMEPagingTarget * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_MMERelaySupportIndicator( char * key, uint8_t eMMERelaySupportIndicator, int lvl);

int __si_s1ap_Encode_MMERelaySupportIndicator( uint8_t eMMERelaySupportIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_MME_UE_S1AP_ID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_MME_UE_S1AP_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_MME_UE_S1AP_ID( SI_S1AP_DT_MME_UE_S1AP_ID * data);


void __si_s1ap_init_MSClassmark2( SI_S1AP_DT_MSClassmark2 ** data);

void __si_s1ap_init_MSClassmark22( SI_S1AP_DT_MSClassmark2 ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_MSClassmark2( char * key, SI_S1AP_DT_MSClassmark2 * data, int lvl);

void __si_s1ap_memfree_MSClassmark2( SI_S1AP_DT_MSClassmark2 * data);

int __si_s1ap_Encode_MSClassmark2( SI_S1AP_DT_MSClassmark2 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_MutingAvailabilityIndication( char * key, uint8_t eMutingAvailabilityIndication, int lvl);

int __si_s1ap_Encode_MutingAvailabilityIndication( uint8_t eMutingAvailabilityIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_MutingPatternInformation_muting_pattern_period( char * key, uint8_t eMutingPatternInformation_muting_pattern_period, int lvl);

int __si_s1ap_Encode_MutingPatternInformation_muting_pattern_period( uint8_t eMutingPatternInformation_muting_pattern_period, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_MutingPatternInformation_muting_pattern_offset( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_MutingPatternInformation_muting_pattern_offset( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_MutingPatternInformation_muting_pattern_offset( SI_S1AP_DT_MutingPatternInformation_muting_pattern_offset * data);


void __si_s1ap_init_MutingPatternInformation( SI_S1AP_DT_MutingPatternInformation ** data);

void __si_s1ap_debug_MutingPatternInformation( char * key, SI_S1AP_DT_MutingPatternInformation * data, int lvl);

void __si_s1ap_memfree_MutingPatternInformation( SI_S1AP_DT_MutingPatternInformation * data);

int __si_s1ap_Encode_MutingPatternInformation( SI_S1AP_DT_MutingPatternInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_MDT_ConfigurationNR( SI_S1AP_DT_MDT_ConfigurationNR ** data);

void __si_s1ap_init_MDT_ConfigurationNR2( SI_S1AP_DT_MDT_ConfigurationNR ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_MDT_ConfigurationNR( char * key, SI_S1AP_DT_MDT_ConfigurationNR * data, int lvl);

void __si_s1ap_memfree_MDT_ConfigurationNR( SI_S1AP_DT_MDT_ConfigurationNR * data);

int __si_s1ap_Encode_MDT_ConfigurationNR( SI_S1AP_DT_MDT_ConfigurationNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NAS_PDU( SI_S1AP_DT_NAS_PDU ** data);

void __si_s1ap_init_NAS_PDU2( SI_S1AP_DT_NAS_PDU ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_NAS_PDU( char * key, SI_S1AP_DT_NAS_PDU * data, int lvl);

void __si_s1ap_memfree_NAS_PDU( SI_S1AP_DT_NAS_PDU * data);

int __si_s1ap_Encode_NAS_PDU( SI_S1AP_DT_NAS_PDU * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NASSecurityParametersfromE_UTRAN( SI_S1AP_DT_NASSecurityParametersfromE_UTRAN ** data);

void __si_s1ap_init_NASSecurityParametersfromE_UTRAN2( SI_S1AP_DT_NASSecurityParametersfromE_UTRAN ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_NASSecurityParametersfromE_UTRAN( char * key, SI_S1AP_DT_NASSecurityParametersfromE_UTRAN * data, int lvl);

void __si_s1ap_memfree_NASSecurityParametersfromE_UTRAN( SI_S1AP_DT_NASSecurityParametersfromE_UTRAN * data);

int __si_s1ap_Encode_NASSecurityParametersfromE_UTRAN( SI_S1AP_DT_NASSecurityParametersfromE_UTRAN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NASSecurityParameterstoE_UTRAN( SI_S1AP_DT_NASSecurityParameterstoE_UTRAN ** data);

void __si_s1ap_init_NASSecurityParameterstoE_UTRAN2( SI_S1AP_DT_NASSecurityParameterstoE_UTRAN ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_NASSecurityParameterstoE_UTRAN( char * key, SI_S1AP_DT_NASSecurityParameterstoE_UTRAN * data, int lvl);

void __si_s1ap_memfree_NASSecurityParameterstoE_UTRAN( SI_S1AP_DT_NASSecurityParameterstoE_UTRAN * data);

int __si_s1ap_Encode_NASSecurityParameterstoE_UTRAN( SI_S1AP_DT_NASSecurityParameterstoE_UTRAN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NB_IoT_DefaultPagingDRX( char * key, uint8_t eNB_IoT_DefaultPagingDRX, int lvl);

int __si_s1ap_Encode_NB_IoT_DefaultPagingDRX( uint8_t eNB_IoT_DefaultPagingDRX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NB_IoT_PagingDRX( char * key, uint8_t eNB_IoT_PagingDRX, int lvl);

int __si_s1ap_Encode_NB_IoT_PagingDRX( uint8_t eNB_IoT_PagingDRX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NB_IoT_Paging_eDRX_Cycle( char * key, uint8_t eNB_IoT_Paging_eDRX_Cycle, int lvl);

int __si_s1ap_Encode_NB_IoT_Paging_eDRX_Cycle( uint8_t eNB_IoT_Paging_eDRX_Cycle, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NB_IoT_PagingTimeWindow( char * key, uint8_t eNB_IoT_PagingTimeWindow, int lvl);

int __si_s1ap_Encode_NB_IoT_PagingTimeWindow( uint8_t eNB_IoT_PagingTimeWindow, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NB_IoT_Paging_eDRXInformation( SI_S1AP_DT_NB_IoT_Paging_eDRXInformation ** data);

void __si_s1ap_debug_NB_IoT_Paging_eDRXInformation( char * key, SI_S1AP_DT_NB_IoT_Paging_eDRXInformation * data, int lvl);

void __si_s1ap_memfree_NB_IoT_Paging_eDRXInformation( SI_S1AP_DT_NB_IoT_Paging_eDRXInformation * data);

int __si_s1ap_Encode_NB_IoT_Paging_eDRXInformation( SI_S1AP_DT_NB_IoT_Paging_eDRXInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NB_IoT_RLF_Report_Container( SI_S1AP_DT_NB_IoT_RLF_Report_Container ** data);

void __si_s1ap_init_NB_IoT_RLF_Report_Container2( SI_S1AP_DT_NB_IoT_RLF_Report_Container ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_NB_IoT_RLF_Report_Container( char * key, SI_S1AP_DT_NB_IoT_RLF_Report_Container * data, int lvl);

void __si_s1ap_memfree_NB_IoT_RLF_Report_Container( SI_S1AP_DT_NB_IoT_RLF_Report_Container * data);

int __si_s1ap_Encode_NB_IoT_RLF_Report_Container( SI_S1AP_DT_NB_IoT_RLF_Report_Container * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NB_IoT_UEIdentityIndexValue( SI_S1AP_DT_NB_IoT_UEIdentityIndexValue ** data);

void __si_s1ap_init_NB_IoT_UEIdentityIndexValue2( SI_S1AP_DT_NB_IoT_UEIdentityIndexValue ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_NB_IoT_UEIdentityIndexValue( char * key, SI_S1AP_DT_NB_IoT_UEIdentityIndexValue * data, int lvl);

void __si_s1ap_memfree_NB_IoT_UEIdentityIndexValue( SI_S1AP_DT_NB_IoT_UEIdentityIndexValue * data);

int __si_s1ap_Encode_NB_IoT_UEIdentityIndexValue( SI_S1AP_DT_NB_IoT_UEIdentityIndexValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NotifySourceeNB( char * key, uint8_t eNotifySourceeNB, int lvl);

int __si_s1ap_Encode_NotifySourceeNB( uint8_t eNotifySourceeNB, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NRencryptionAlgorithms( SI_S1AP_DT_NRencryptionAlgorithms ** data);

void __si_s1ap_init_NRencryptionAlgorithms2( SI_S1AP_DT_NRencryptionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_NRencryptionAlgorithms( char * key, SI_S1AP_DT_NRencryptionAlgorithms * data, int lvl);

void __si_s1ap_memfree_NRencryptionAlgorithms( SI_S1AP_DT_NRencryptionAlgorithms * data);

int __si_s1ap_Encode_NRencryptionAlgorithms( SI_S1AP_DT_NRencryptionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NRrestrictioninEPSasSecondaryRAT( char * key, uint8_t eNRrestrictioninEPSasSecondaryRAT, int lvl);

int __si_s1ap_Encode_NRrestrictioninEPSasSecondaryRAT( uint8_t eNRrestrictioninEPSasSecondaryRAT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NRrestrictionin5GS( char * key, uint8_t eNRrestrictionin5GS, int lvl);

int __si_s1ap_Encode_NRrestrictionin5GS( uint8_t eNRrestrictionin5GS, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->NRintegrityProtectionAlgorithms<- Got NULL  L:7577

void __si_s1ap_init_NRUESecurityCapabilities( SI_S1AP_DT_NRUESecurityCapabilities ** data);

void __si_s1ap_debug_NRUESecurityCapabilities( char * key, SI_S1AP_DT_NRUESecurityCapabilities * data, int lvl);

void __si_s1ap_memfree_NRUESecurityCapabilities( SI_S1AP_DT_NRUESecurityCapabilities * data);

int __si_s1ap_Encode_NRUESecurityCapabilities( SI_S1AP_DT_NRUESecurityCapabilities * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_NumberofBroadcastRequest( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_NumberofBroadcastRequest( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_NumberofBroadcastRequest( SI_S1AP_DT_NumberofBroadcastRequest * data);


void __si_s1ap_debug_VehicleUE( char * key, uint8_t eVehicleUE, int lvl);

int __si_s1ap_Encode_VehicleUE( uint8_t eVehicleUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PedestrianUE( char * key, uint8_t ePedestrianUE, int lvl);

int __si_s1ap_Encode_PedestrianUE( uint8_t ePedestrianUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NRV2XServicesAuthorized( SI_S1AP_DT_NRV2XServicesAuthorized ** data);

void __si_s1ap_debug_NRV2XServicesAuthorized( char * key, SI_S1AP_DT_NRV2XServicesAuthorized * data, int lvl);

void __si_s1ap_memfree_NRV2XServicesAuthorized( SI_S1AP_DT_NRV2XServicesAuthorized * data);

int __si_s1ap_Encode_NRV2XServicesAuthorized( SI_S1AP_DT_NRV2XServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_NRUESidelinkAggregateMaximumBitrate( SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate ** data);

void __si_s1ap_debug_NRUESidelinkAggregateMaximumBitrate( char * key, SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate * data, int lvl);

void __si_s1ap_memfree_NRUESidelinkAggregateMaximumBitrate( SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate * data);

int __si_s1ap_Encode_NRUESidelinkAggregateMaximumBitrate( SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_OldBSS_ToNewBSS_Information( SI_S1AP_DT_OldBSS_ToNewBSS_Information ** data);

void __si_s1ap_init_OldBSS_ToNewBSS_Information2( SI_S1AP_DT_OldBSS_ToNewBSS_Information ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_OldBSS_ToNewBSS_Information( char * key, SI_S1AP_DT_OldBSS_ToNewBSS_Information * data, int lvl);

void __si_s1ap_memfree_OldBSS_ToNewBSS_Information( SI_S1AP_DT_OldBSS_ToNewBSS_Information * data);

int __si_s1ap_Encode_OldBSS_ToNewBSS_Information( SI_S1AP_DT_OldBSS_ToNewBSS_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_OverloadAction( char * key, uint8_t eOverloadAction, int lvl);

int __si_s1ap_Encode_OverloadAction( uint8_t eOverloadAction, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_OverloadResponse( SI_S1AP_DT_OverloadResponse ** data);

void __si_s1ap_debug_OverloadResponse( char * key, SI_S1AP_DT_OverloadResponse * data, int lvl);

void __si_s1ap_memfree_OverloadResponse( SI_S1AP_DT_OverloadResponse * data);

int __si_s1ap_Encode_OverloadResponse( SI_S1AP_DT_OverloadResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Packet_LossRate( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_Packet_LossRate( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_Packet_LossRate( SI_S1AP_DT_Packet_LossRate * data);


void __si_s1ap_debug_Paging_eDRX_Cycle( char * key, uint8_t ePaging_eDRX_Cycle, int lvl);

int __si_s1ap_Encode_Paging_eDRX_Cycle( uint8_t ePaging_eDRX_Cycle, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PagingTimeWindow( char * key, uint8_t ePagingTimeWindow, int lvl);

int __si_s1ap_Encode_PagingTimeWindow( uint8_t ePagingTimeWindow, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Paging_eDRXInformation( SI_S1AP_DT_Paging_eDRXInformation ** data);

void __si_s1ap_debug_Paging_eDRXInformation( char * key, SI_S1AP_DT_Paging_eDRXInformation * data, int lvl);

void __si_s1ap_memfree_Paging_eDRXInformation( SI_S1AP_DT_Paging_eDRXInformation * data);

int __si_s1ap_Encode_Paging_eDRXInformation( SI_S1AP_DT_Paging_eDRXInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PagingDRX( char * key, uint8_t ePagingDRX, int lvl);

int __si_s1ap_Encode_PagingDRX( uint8_t ePagingDRX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PagingPriority( char * key, uint8_t ePagingPriority, int lvl);

int __si_s1ap_Encode_PagingPriority( uint8_t ePagingPriority, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PagingProbabilityInformation( char * key, uint8_t ePagingProbabilityInformation, int lvl);

int __si_s1ap_Encode_PagingProbabilityInformation( uint8_t ePagingProbabilityInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PagingCause( char * key, uint8_t ePagingCause, int lvl);

int __si_s1ap_Encode_PagingCause( uint8_t ePagingCause, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_PC5QoSFlowList( SI_S1AP_DT_PC5QoSFlowList ** data);

void __si_s1ap_debug_PC5QoSFlowList( char * key, SI_S1AP_DT_PC5QoSFlowList * data, int lvl);

void __si_s1ap_memfree_PC5QoSFlowList( SI_S1AP_DT_PC5QoSFlowList * data);

int __si_s1ap_Encode_PC5QoSFlowList( SI_S1AP_DT_PC5QoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_PC5QoSParameters( SI_S1AP_DT_PC5QoSParameters ** data);

void __si_s1ap_debug_PC5QoSParameters( char * key, SI_S1AP_DT_PC5QoSParameters * data, int lvl);

void __si_s1ap_memfree_PC5QoSParameters( SI_S1AP_DT_PC5QoSParameters * data);

int __si_s1ap_Encode_PC5QoSParameters( SI_S1AP_DT_PC5QoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_PC5FlowBitRates( SI_S1AP_DT_PC5FlowBitRates ** data);

void __si_s1ap_debug_PC5FlowBitRates( char * key, SI_S1AP_DT_PC5FlowBitRates * data, int lvl);

void __si_s1ap_memfree_PC5FlowBitRates( SI_S1AP_DT_PC5FlowBitRates * data);

int __si_s1ap_Encode_PC5FlowBitRates( SI_S1AP_DT_PC5FlowBitRates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Range( char * key, uint8_t eRange, int lvl);

int __si_s1ap_Encode_Range( uint8_t eRange, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_PC5QoSFlowItem( SI_S1AP_DT_PC5QoSFlowItem ** data);

void __si_s1ap_debug_PC5QoSFlowItem( char * key, SI_S1AP_DT_PC5QoSFlowItem * data, int lvl);

void __si_s1ap_memfree_PC5QoSFlowItem( SI_S1AP_DT_PC5QoSFlowItem * data);

int __si_s1ap_Encode_PC5QoSFlowItem( SI_S1AP_DT_PC5QoSFlowItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PendingDataIndication( char * key, uint8_t ePendingDataIndication, int lvl);

int __si_s1ap_Encode_PendingDataIndication( uint8_t ePendingDataIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Port_Number( SI_S1AP_DT_Port_Number ** data);

void __si_s1ap_init_Port_Number2( SI_S1AP_DT_Port_Number ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Port_Number( char * key, SI_S1AP_DT_Port_Number * data, int lvl);

void __si_s1ap_memfree_Port_Number( SI_S1AP_DT_Port_Number * data);

int __si_s1ap_Encode_Port_Number( SI_S1AP_DT_Port_Number * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ProSeDirectDiscovery( char * key, uint8_t eProSeDirectDiscovery, int lvl);

int __si_s1ap_Encode_ProSeDirectDiscovery( uint8_t eProSeDirectDiscovery, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ProSeDirectCommunication( char * key, uint8_t eProSeDirectCommunication, int lvl);

int __si_s1ap_Encode_ProSeDirectCommunication( uint8_t eProSeDirectCommunication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ProSeAuthorized( SI_S1AP_DT_ProSeAuthorized ** data);

void __si_s1ap_debug_ProSeAuthorized( char * key, SI_S1AP_DT_ProSeAuthorized * data, int lvl);

void __si_s1ap_memfree_ProSeAuthorized( SI_S1AP_DT_ProSeAuthorized * data);

int __si_s1ap_Encode_ProSeAuthorized( SI_S1AP_DT_ProSeAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ProSeUEtoNetworkRelaying( char * key, uint8_t eProSeUEtoNetworkRelaying, int lvl);

int __si_s1ap_Encode_ProSeUEtoNetworkRelaying( uint8_t eProSeUEtoNetworkRelaying, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_PS_ServiceNotAvailable( char * key, uint8_t ePS_ServiceNotAvailable, int lvl);

int __si_s1ap_Encode_PS_ServiceNotAvailable( uint8_t ePS_ServiceNotAvailable, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RACSIndication( char * key, uint8_t eRACSIndication, int lvl);

int __si_s1ap_Encode_RACSIndication( uint8_t eRACSIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ReceiveStatusOfULPDCPSDUsExtended( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsExtended ** data);

void __si_s1ap_init_ReceiveStatusOfULPDCPSDUsExtended2( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsExtended ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_ReceiveStatusOfULPDCPSDUsExtended( char * key, SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsExtended * data, int lvl);

void __si_s1ap_memfree_ReceiveStatusOfULPDCPSDUsExtended( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsExtended * data);

int __si_s1ap_Encode_ReceiveStatusOfULPDCPSDUsExtended( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsExtended * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 ** data);

void __si_s1ap_init_ReceiveStatusOfULPDCPSDUsPDCP_SNlength182( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18( char * key, SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 * data, int lvl);

void __si_s1ap_memfree_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 * data);

int __si_s1ap_Encode_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RecommendedCellItem_timeStayedInCell( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_RecommendedCellItem_timeStayedInCell( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_RecommendedCellItem_timeStayedInCell( SI_S1AP_DT_RecommendedCellItem_timeStayedInCell * data);


void __si_s1ap_init_RecommendedCellItem( SI_S1AP_DT_RecommendedCellItem ** data);

void __si_s1ap_debug_RecommendedCellItem( char * key, SI_S1AP_DT_RecommendedCellItem * data, int lvl);

void __si_s1ap_memfree_RecommendedCellItem( SI_S1AP_DT_RecommendedCellItem * data);

int __si_s1ap_Encode_RecommendedCellItem( SI_S1AP_DT_RecommendedCellItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RecommendedENBItem( SI_S1AP_DT_RecommendedENBItem ** data);

void __si_s1ap_debug_RecommendedENBItem( char * key, SI_S1AP_DT_RecommendedENBItem * data, int lvl);

void __si_s1ap_memfree_RecommendedENBItem( SI_S1AP_DT_RecommendedENBItem * data);

int __si_s1ap_Encode_RecommendedENBItem( SI_S1AP_DT_RecommendedENBItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RelayNode_Indicator( char * key, uint8_t eRelayNode_Indicator, int lvl);

int __si_s1ap_Encode_RelayNode_Indicator( uint8_t eRelayNode_Indicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RAT_Restrictions( SI_S1AP_DT_RAT_Restrictions ** data);

void __si_s1ap_debug_RAT_Restrictions( char * key, SI_S1AP_DT_RAT_Restrictions * data, int lvl);

void __si_s1ap_memfree_RAT_Restrictions( SI_S1AP_DT_RAT_Restrictions * data);

int __si_s1ap_Encode_RAT_Restrictions( SI_S1AP_DT_RAT_Restrictions * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RATRestrictionsItem_rAT_RestrictionInformation( SI_S1AP_DT_RATRestrictionsItem_rAT_RestrictionInformation ** data);

void __si_s1ap_init_RATRestrictionsItem_rAT_RestrictionInformation2( SI_S1AP_DT_RATRestrictionsItem_rAT_RestrictionInformation ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_RATRestrictionsItem_rAT_RestrictionInformation( char * key, SI_S1AP_DT_RATRestrictionsItem_rAT_RestrictionInformation * data, int lvl);

void __si_s1ap_memfree_RATRestrictionsItem_rAT_RestrictionInformation( SI_S1AP_DT_RATRestrictionsItem_rAT_RestrictionInformation * data);

int __si_s1ap_Encode_RATRestrictionsItem_rAT_RestrictionInformation( SI_S1AP_DT_RATRestrictionsItem_rAT_RestrictionInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RAT_RestrictionsItem( SI_S1AP_DT_RAT_RestrictionsItem ** data);

void __si_s1ap_debug_RAT_RestrictionsItem( char * key, SI_S1AP_DT_RAT_RestrictionsItem * data, int lvl);

void __si_s1ap_memfree_RAT_RestrictionsItem( SI_S1AP_DT_RAT_RestrictionsItem * data);

int __si_s1ap_Encode_RAT_RestrictionsItem( SI_S1AP_DT_RAT_RestrictionsItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RAT_Type( char * key, uint8_t eRAT_Type, int lvl);

int __si_s1ap_Encode_RAT_Type( uint8_t eRAT_Type, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ReportArea( char * key, uint8_t eReportArea, int lvl);

int __si_s1ap_Encode_ReportArea( uint8_t eReportArea, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RequestType( SI_S1AP_DT_RequestType ** data);

void __si_s1ap_debug_RequestType( char * key, SI_S1AP_DT_RequestType * data, int lvl);

void __si_s1ap_memfree_RequestType( SI_S1AP_DT_RequestType * data);

int __si_s1ap_Encode_RequestType( SI_S1AP_DT_RequestType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RequestTypeAdditionalInfo( char * key, uint8_t eRequestTypeAdditionalInfo, int lvl);

int __si_s1ap_Encode_RequestTypeAdditionalInfo( uint8_t eRequestTypeAdditionalInfo, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RIMInformation( SI_S1AP_DT_RIMInformation ** data);

void __si_s1ap_init_RIMInformation2( SI_S1AP_DT_RIMInformation ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_RIMInformation( char * key, SI_S1AP_DT_RIMInformation * data, int lvl);

void __si_s1ap_memfree_RIMInformation( SI_S1AP_DT_RIMInformation * data);

int __si_s1ap_Encode_RIMInformation( SI_S1AP_DT_RIMInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RNC_ID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_RNC_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_RNC_ID( SI_S1AP_DT_RNC_ID * data);


void __si_s1ap_init_TargetRNC_ID( SI_S1AP_DT_TargetRNC_ID ** data);

void __si_s1ap_debug_TargetRNC_ID( char * key, SI_S1AP_DT_TargetRNC_ID * data, int lvl);

void __si_s1ap_memfree_TargetRNC_ID( SI_S1AP_DT_TargetRNC_ID * data);

int __si_s1ap_Encode_TargetRNC_ID( SI_S1AP_DT_TargetRNC_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RIMRoutingAddress_eHRPD_Sector_ID( SI_S1AP_DT_RIMRoutingAddress_eHRPD_Sector_ID ** data);

void __si_s1ap_init_RIMRoutingAddress_eHRPD_Sector_ID2( SI_S1AP_DT_RIMRoutingAddress_eHRPD_Sector_ID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_RIMRoutingAddress_eHRPD_Sector_ID( char * key, SI_S1AP_DT_RIMRoutingAddress_eHRPD_Sector_ID * data, int lvl);

void __si_s1ap_memfree_RIMRoutingAddress_eHRPD_Sector_ID( SI_S1AP_DT_RIMRoutingAddress_eHRPD_Sector_ID * data);

int __si_s1ap_Encode_RIMRoutingAddress_eHRPD_Sector_ID( SI_S1AP_DT_RIMRoutingAddress_eHRPD_Sector_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RIMRoutingAddress( SI_S1AP_DT_RIMRoutingAddress ** data);

void __si_s1ap_debug_RIMRoutingAddress( char * key, SI_S1AP_DT_RIMRoutingAddress * data, int lvl);

void __si_s1ap_memfree_RIMRoutingAddress( SI_S1AP_DT_RIMRoutingAddress * data);

int __si_s1ap_Encode_RIMRoutingAddress( SI_S1AP_DT_RIMRoutingAddress * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RIMTransfer( SI_S1AP_DT_RIMTransfer ** data);

void __si_s1ap_debug_RIMTransfer( char * key, SI_S1AP_DT_RIMTransfer * data, int lvl);

void __si_s1ap_memfree_RIMTransfer( SI_S1AP_DT_RIMTransfer * data);

int __si_s1ap_Encode_RIMTransfer( SI_S1AP_DT_RIMTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RepetitionPeriod( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_RepetitionPeriod( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_RepetitionPeriod( SI_S1AP_DT_RepetitionPeriod * data);


void __si_s1ap_init_UE_RLF_Report_Container( SI_S1AP_DT_UE_RLF_Report_Container ** data);

void __si_s1ap_init_UE_RLF_Report_Container2( SI_S1AP_DT_UE_RLF_Report_Container ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_UE_RLF_Report_Container( char * key, SI_S1AP_DT_UE_RLF_Report_Container * data, int lvl);

void __si_s1ap_memfree_UE_RLF_Report_Container( SI_S1AP_DT_UE_RLF_Report_Container * data);

int __si_s1ap_Encode_UE_RLF_Report_Container( SI_S1AP_DT_UE_RLF_Report_Container * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UE_RLF_Report_Container_for_extended_bands( SI_S1AP_DT_UE_RLF_Report_Container_for_extended_bands ** data);

void __si_s1ap_init_UE_RLF_Report_Container_for_extended_bands2( SI_S1AP_DT_UE_RLF_Report_Container_for_extended_bands ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_UE_RLF_Report_Container_for_extended_bands( char * key, SI_S1AP_DT_UE_RLF_Report_Container_for_extended_bands * data, int lvl);

void __si_s1ap_memfree_UE_RLF_Report_Container_for_extended_bands( SI_S1AP_DT_UE_RLF_Report_Container_for_extended_bands * data);

int __si_s1ap_Encode_UE_RLF_Report_Container_for_extended_bands( SI_S1AP_DT_UE_RLF_Report_Container_for_extended_bands * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RLFReportInformation( SI_S1AP_DT_RLFReportInformation ** data);

void __si_s1ap_debug_RLFReportInformation( char * key, SI_S1AP_DT_RLFReportInformation * data, int lvl);

void __si_s1ap_memfree_RLFReportInformation( SI_S1AP_DT_RLFReportInformation * data);

int __si_s1ap_Encode_RLFReportInformation( SI_S1AP_DT_RLFReportInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_RRC_Container( SI_S1AP_DT_RRC_Container ** data);

void __si_s1ap_init_RRC_Container2( SI_S1AP_DT_RRC_Container ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_RRC_Container( char * key, SI_S1AP_DT_RRC_Container * data, int lvl);

void __si_s1ap_memfree_RRC_Container( SI_S1AP_DT_RRC_Container * data);

int __si_s1ap_Encode_RRC_Container( SI_S1AP_DT_RRC_Container * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_RRC_Establishment_Cause( char * key, uint8_t eRRC_Establishment_Cause, int lvl);

int __si_s1ap_Encode_RRC_Establishment_Cause( uint8_t eRRC_Establishment_Cause, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ECGIListForRestart( SI_S1AP_DT_ECGIListForRestart ** data);

void __si_s1ap_debug_ECGIListForRestart( char * key, SI_S1AP_DT_ECGIListForRestart * data, int lvl);

void __si_s1ap_memfree_ECGIListForRestart( SI_S1AP_DT_ECGIListForRestart * data);

int __si_s1ap_Encode_ECGIListForRestart( SI_S1AP_DT_ECGIListForRestart * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Routing_ID( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_Routing_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_Routing_ID( SI_S1AP_DT_Routing_ID * data);


void __si_s1ap_init_SecurityKey( SI_S1AP_DT_SecurityKey ** data);

void __si_s1ap_init_SecurityKey2( SI_S1AP_DT_SecurityKey ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_SecurityKey( char * key, SI_S1AP_DT_SecurityKey * data, int lvl);

void __si_s1ap_memfree_SecurityKey( SI_S1AP_DT_SecurityKey * data);

int __si_s1ap_Encode_SecurityKey( SI_S1AP_DT_SecurityKey * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SecurityContext_nextHopChainingCount( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_SecurityContext_nextHopChainingCount( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_SecurityContext_nextHopChainingCount( SI_S1AP_DT_SecurityContext_nextHopChainingCount * data);


void __si_s1ap_init_SecurityContext( SI_S1AP_DT_SecurityContext ** data);

void __si_s1ap_debug_SecurityContext( char * key, SI_S1AP_DT_SecurityContext * data, int lvl);

void __si_s1ap_memfree_SecurityContext( SI_S1AP_DT_SecurityContext * data);

int __si_s1ap_Encode_SecurityContext( SI_S1AP_DT_SecurityContext * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SecondaryRATType( char * key, uint8_t eSecondaryRATType, int lvl);

int __si_s1ap_Encode_SecondaryRATType( uint8_t eSecondaryRATType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SecondaryRATDataUsageRequest( char * key, uint8_t eSecondaryRATDataUsageRequest, int lvl);

int __si_s1ap_Encode_SecondaryRATDataUsageRequest( uint8_t eSecondaryRATDataUsageRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SecondaryRATDataUsageReportList( SI_S1AP_DT_SecondaryRATDataUsageReportList ** data);

void __si_s1ap_debug_SecondaryRATDataUsageReportList( char * key, SI_S1AP_DT_SecondaryRATDataUsageReportList * data, int lvl);

void __si_s1ap_memfree_SecondaryRATDataUsageReportList( SI_S1AP_DT_SecondaryRATDataUsageReportList * data);

int __si_s1ap_Encode_SecondaryRATDataUsageReportList( SI_S1AP_DT_SecondaryRATDataUsageReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SecondaryRATDataUsageReportItem( SI_S1AP_DT_SecondaryRATDataUsageReportItem ** data);

void __si_s1ap_debug_SecondaryRATDataUsageReportItem( char * key, SI_S1AP_DT_SecondaryRATDataUsageReportItem * data, int lvl);

void __si_s1ap_memfree_SecondaryRATDataUsageReportItem( SI_S1AP_DT_SecondaryRATDataUsageReportItem * data);

int __si_s1ap_Encode_SecondaryRATDataUsageReportItem( SI_S1AP_DT_SecondaryRATDataUsageReportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SecurityIndication( SI_S1AP_DT_SecurityIndication ** data);

void __si_s1ap_debug_SecurityIndication( char * key, SI_S1AP_DT_SecurityIndication * data, int lvl);

void __si_s1ap_memfree_SecurityIndication( SI_S1AP_DT_SecurityIndication * data);

int __si_s1ap_Encode_SecurityIndication( SI_S1AP_DT_SecurityIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SensorMeasConfig( char * key, uint8_t eSensorMeasConfig, int lvl);

int __si_s1ap_Encode_SensorMeasConfig( uint8_t eSensorMeasConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SensorNameConfig_uncompensatedBarometricConfig( char * key, uint8_t eSensorNameConfig_uncompensatedBarometricConfig, int lvl);

int __si_s1ap_Encode_SensorNameConfig_uncompensatedBarometricConfig( uint8_t eSensorNameConfig_uncompensatedBarometricConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SensorNameConfig( SI_S1AP_DT_SensorNameConfig ** data);

void __si_s1ap_debug_SensorNameConfig( char * key, SI_S1AP_DT_SensorNameConfig * data, int lvl);

void __si_s1ap_memfree_SensorNameConfig( SI_S1AP_DT_SensorNameConfig * data);

int __si_s1ap_Encode_SensorNameConfig( SI_S1AP_DT_SensorNameConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SensorMeasConfigNameItem( SI_S1AP_DT_SensorMeasConfigNameItem ** data);

void __si_s1ap_debug_SensorMeasConfigNameItem( char * key, SI_S1AP_DT_SensorMeasConfigNameItem * data, int lvl);

void __si_s1ap_memfree_SensorMeasConfigNameItem( SI_S1AP_DT_SensorMeasConfigNameItem * data);

int __si_s1ap_Encode_SensorMeasConfigNameItem( SI_S1AP_DT_SensorMeasConfigNameItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SensorMeasConfigNameList( SI_S1AP_DT_SensorMeasConfigNameList ** data);

void __si_s1ap_debug_SensorMeasConfigNameList( char * key, SI_S1AP_DT_SensorMeasConfigNameList * data, int lvl);

void __si_s1ap_memfree_SensorMeasConfigNameList( SI_S1AP_DT_SensorMeasConfigNameList * data);

int __si_s1ap_Encode_SensorMeasConfigNameList( SI_S1AP_DT_SensorMeasConfigNameList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SensorMeasurementConfiguration( SI_S1AP_DT_SensorMeasurementConfiguration ** data);

void __si_s1ap_debug_SensorMeasurementConfiguration( char * key, SI_S1AP_DT_SensorMeasurementConfiguration * data, int lvl);

void __si_s1ap_memfree_SensorMeasurementConfiguration( SI_S1AP_DT_SensorMeasurementConfiguration * data);

int __si_s1ap_Encode_SensorMeasurementConfiguration( SI_S1AP_DT_SensorMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SerialNumber( SI_S1AP_DT_SerialNumber ** data);

void __si_s1ap_init_SerialNumber2( SI_S1AP_DT_SerialNumber ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_SerialNumber( char * key, SI_S1AP_DT_SerialNumber * data, int lvl);

void __si_s1ap_memfree_SerialNumber( SI_S1AP_DT_SerialNumber * data);

int __si_s1ap_Encode_SerialNumber( SI_S1AP_DT_SerialNumber * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ServiceType( char * key, uint8_t eServiceType, int lvl);

int __si_s1ap_Encode_ServiceType( uint8_t eServiceType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SONInformationReport( SI_S1AP_DT_SONInformationReport ** data);

void __si_s1ap_debug_SONInformationReport( char * key, SI_S1AP_DT_SONInformationReport * data, int lvl);

void __si_s1ap_memfree_SONInformationReport( SI_S1AP_DT_SONInformationReport * data);

int __si_s1ap_Encode_SONInformationReport( SI_S1AP_DT_SONInformationReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TargeteNB_ID( SI_S1AP_DT_TargeteNB_ID ** data);

void __si_s1ap_debug_TargeteNB_ID( char * key, SI_S1AP_DT_TargeteNB_ID * data, int lvl);

void __si_s1ap_memfree_TargeteNB_ID( SI_S1AP_DT_TargeteNB_ID * data);

int __si_s1ap_Encode_TargeteNB_ID( SI_S1AP_DT_TargeteNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SourceeNB_ID( SI_S1AP_DT_SourceeNB_ID ** data);

void __si_s1ap_debug_SourceeNB_ID( char * key, SI_S1AP_DT_SourceeNB_ID * data, int lvl);

void __si_s1ap_memfree_SourceeNB_ID( SI_S1AP_DT_SourceeNB_ID * data);

int __si_s1ap_Encode_SourceeNB_ID( SI_S1AP_DT_SourceeNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SONConfigurationTransfer( SI_S1AP_DT_SONConfigurationTransfer ** data);

void __si_s1ap_debug_SONConfigurationTransfer( char * key, SI_S1AP_DT_SONConfigurationTransfer * data, int lvl);

void __si_s1ap_memfree_SONConfigurationTransfer( SI_S1AP_DT_SONConfigurationTransfer * data);

int __si_s1ap_Encode_SONConfigurationTransfer( SI_S1AP_DT_SONConfigurationTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_StratumLevel( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_StratumLevel( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_StratumLevel( SI_S1AP_DT_StratumLevel * data);


void __si_s1ap_init_SynchronisationInformation( SI_S1AP_DT_SynchronisationInformation ** data);

void __si_s1ap_debug_SynchronisationInformation( char * key, SI_S1AP_DT_SynchronisationInformation * data, int lvl);

void __si_s1ap_memfree_SynchronisationInformation( SI_S1AP_DT_SynchronisationInformation * data);

int __si_s1ap_Encode_SynchronisationInformation( SI_S1AP_DT_SynchronisationInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Source_ToTarget_TransparentContainer( SI_S1AP_DT_Source_ToTarget_TransparentContainer ** data);

void __si_s1ap_init_Source_ToTarget_TransparentContainer2( SI_S1AP_DT_Source_ToTarget_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Source_ToTarget_TransparentContainer( char * key, SI_S1AP_DT_Source_ToTarget_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_Source_ToTarget_TransparentContainer( SI_S1AP_DT_Source_ToTarget_TransparentContainer * data);

int __si_s1ap_Encode_Source_ToTarget_TransparentContainer( SI_S1AP_DT_Source_ToTarget_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SourceBSS_ToTargetBSS_TransparentContainer( SI_S1AP_DT_SourceBSS_ToTargetBSS_TransparentContainer ** data);

void __si_s1ap_init_SourceBSS_ToTargetBSS_TransparentContainer2( SI_S1AP_DT_SourceBSS_ToTargetBSS_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_SourceBSS_ToTargetBSS_TransparentContainer( char * key, SI_S1AP_DT_SourceBSS_ToTargetBSS_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_SourceBSS_ToTargetBSS_TransparentContainer( SI_S1AP_DT_SourceBSS_ToTargetBSS_TransparentContainer * data);

int __si_s1ap_Encode_SourceBSS_ToTargetBSS_TransparentContainer( SI_S1AP_DT_SourceBSS_ToTargetBSS_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SRVCCOperationNotPossible( char * key, uint8_t eSRVCCOperationNotPossible, int lvl);

int __si_s1ap_Encode_SRVCCOperationNotPossible( uint8_t eSRVCCOperationNotPossible, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SRVCCOperationPossible( char * key, uint8_t eSRVCCOperationPossible, int lvl);

int __si_s1ap_Encode_SRVCCOperationPossible( uint8_t eSRVCCOperationPossible, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SRVCCHOIndication( char * key, uint8_t eSRVCCHOIndication, int lvl);

int __si_s1ap_Encode_SRVCCHOIndication( uint8_t eSRVCCHOIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SourceNgRanNode_ID( SI_S1AP_DT_SourceNgRanNode_ID ** data);

void __si_s1ap_debug_SourceNgRanNode_ID( char * key, SI_S1AP_DT_SourceNgRanNode_ID * data, int lvl);

void __si_s1ap_memfree_SourceNgRanNode_ID( SI_S1AP_DT_SourceNgRanNode_ID * data);

int __si_s1ap_Encode_SourceNgRanNode_ID( SI_S1AP_DT_SourceNgRanNode_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->SourceNodeID-ExtensionIE<- Got NULL  L:7577

void __si_s1ap_init_SourceNodeID_Extension( SI_S1AP_DT_SourceNodeID_Extension ** data);

void __si_s1ap_debug_SourceNodeID_Extension( char * key, SI_S1AP_DT_SourceNodeID_Extension * data, int lvl);

void __si_s1ap_memfree_SourceNodeID_Extension( SI_S1AP_DT_SourceNodeID_Extension * data);

// EHS-ADT=0  DT=1 Container
int __si_s1ap_Encode_SourceNodeID_Extension( SI_S1AP_DT_SourceNodeID_Extension * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SourceNodeID( SI_S1AP_DT_SourceNodeID ** data);

void __si_s1ap_debug_SourceNodeID( char * key, SI_S1AP_DT_SourceNodeID * data, int lvl);

void __si_s1ap_memfree_SourceNodeID( SI_S1AP_DT_SourceNodeID * data);

int __si_s1ap_Encode_SourceNodeID( SI_S1AP_DT_SourceNodeID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SubscriberProfileIDforRFP( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_SubscriberProfileIDforRFP( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_SubscriberProfileIDforRFP( SI_S1AP_DT_SubscriberProfileIDforRFP * data);


void __si_s1ap_init_UE_HistoryInformation( SI_S1AP_DT_UE_HistoryInformation ** data);

void __si_s1ap_debug_UE_HistoryInformation( char * key, SI_S1AP_DT_UE_HistoryInformation * data, int lvl);

void __si_s1ap_memfree_UE_HistoryInformation( SI_S1AP_DT_UE_HistoryInformation * data);

int __si_s1ap_Encode_UE_HistoryInformation( SI_S1AP_DT_UE_HistoryInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SourceeNB_ToTargeteNB_TransparentContainer( SI_S1AP_DT_SourceeNB_ToTargeteNB_TransparentContainer ** data);

void __si_s1ap_debug_SourceeNB_ToTargeteNB_TransparentContainer( char * key, SI_S1AP_DT_SourceeNB_ToTargeteNB_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_SourceeNB_ToTargeteNB_TransparentContainer( SI_S1AP_DT_SourceeNB_ToTargeteNB_TransparentContainer * data);

int __si_s1ap_Encode_SourceeNB_ToTargeteNB_TransparentContainer( SI_S1AP_DT_SourceeNB_ToTargeteNB_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SourceRNC_ToTargetRNC_TransparentContainer( SI_S1AP_DT_SourceRNC_ToTargetRNC_TransparentContainer ** data);

void __si_s1ap_init_SourceRNC_ToTargetRNC_TransparentContainer2( SI_S1AP_DT_SourceRNC_ToTargetRNC_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_SourceRNC_ToTargetRNC_TransparentContainer( char * key, SI_S1AP_DT_SourceRNC_ToTargetRNC_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_SourceRNC_ToTargetRNC_TransparentContainer( SI_S1AP_DT_SourceRNC_ToTargetRNC_TransparentContainer * data);

int __si_s1ap_Encode_SourceRNC_ToTargetRNC_TransparentContainer( SI_S1AP_DT_SourceRNC_ToTargetRNC_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer( SI_S1AP_DT_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer ** data);

void __si_s1ap_init_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer2( SI_S1AP_DT_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer( char * key, SI_S1AP_DT_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer( SI_S1AP_DT_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer * data);

int __si_s1ap_Encode_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer( SI_S1AP_DT_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ServedGUMMEIs( SI_S1AP_DT_ServedGUMMEIs ** data);

void __si_s1ap_debug_ServedGUMMEIs( char * key, SI_S1AP_DT_ServedGUMMEIs * data, int lvl);

void __si_s1ap_memfree_ServedGUMMEIs( SI_S1AP_DT_ServedGUMMEIs * data);

int __si_s1ap_Encode_ServedGUMMEIs( SI_S1AP_DT_ServedGUMMEIs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ServedPLMNs( SI_S1AP_DT_ServedPLMNs ** data);

void __si_s1ap_debug_ServedPLMNs( char * key, SI_S1AP_DT_ServedPLMNs * data, int lvl);

void __si_s1ap_memfree_ServedPLMNs( SI_S1AP_DT_ServedPLMNs * data);

int __si_s1ap_Encode_ServedPLMNs( SI_S1AP_DT_ServedPLMNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ServedGroupIDs( SI_S1AP_DT_ServedGroupIDs ** data);

void __si_s1ap_debug_ServedGroupIDs( char * key, SI_S1AP_DT_ServedGroupIDs * data, int lvl);

void __si_s1ap_memfree_ServedGroupIDs( SI_S1AP_DT_ServedGroupIDs * data);

int __si_s1ap_Encode_ServedGroupIDs( SI_S1AP_DT_ServedGroupIDs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ServedMMECs( SI_S1AP_DT_ServedMMECs ** data);

void __si_s1ap_debug_ServedMMECs( char * key, SI_S1AP_DT_ServedMMECs * data, int lvl);

void __si_s1ap_memfree_ServedMMECs( SI_S1AP_DT_ServedMMECs * data);

int __si_s1ap_Encode_ServedMMECs( SI_S1AP_DT_ServedMMECs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ServedGUMMEIsItem( SI_S1AP_DT_ServedGUMMEIsItem ** data);

void __si_s1ap_debug_ServedGUMMEIsItem( char * key, SI_S1AP_DT_ServedGUMMEIsItem * data, int lvl);

void __si_s1ap_memfree_ServedGUMMEIsItem( SI_S1AP_DT_ServedGUMMEIsItem * data);

int __si_s1ap_Encode_ServedGUMMEIsItem( SI_S1AP_DT_ServedGUMMEIsItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator( char * key, uint8_t eSubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator, int lvl);

int __si_s1ap_Encode_SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator( uint8_t eSubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SubscriptionBasedUEDifferentiationInfo_periodicTime( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_SubscriptionBasedUEDifferentiationInfo_periodicTime( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_SubscriptionBasedUEDifferentiationInfo_periodicTime( SI_S1AP_DT_SubscriptionBasedUEDifferentiationInfo_periodicTime * data);


void __si_s1ap_debug_SubscriptionBasedUEDifferentiationInfo_stationaryIndication( char * key, uint8_t eSubscriptionBasedUEDifferentiationInfo_stationaryIndication, int lvl);

int __si_s1ap_Encode_SubscriptionBasedUEDifferentiationInfo_stationaryIndication( uint8_t eSubscriptionBasedUEDifferentiationInfo_stationaryIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SubscriptionBasedUEDifferentiationInfo_trafficProfile( char * key, uint8_t eSubscriptionBasedUEDifferentiationInfo_trafficProfile, int lvl);

int __si_s1ap_Encode_SubscriptionBasedUEDifferentiationInfo_trafficProfile( uint8_t eSubscriptionBasedUEDifferentiationInfo_trafficProfile, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SubscriptionBasedUEDifferentiationInfo_batteryIndication( char * key, uint8_t eSubscriptionBasedUEDifferentiationInfo_batteryIndication, int lvl);

int __si_s1ap_Encode_SubscriptionBasedUEDifferentiationInfo_batteryIndication( uint8_t eSubscriptionBasedUEDifferentiationInfo_batteryIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ScheduledCommunicationTime_dayofWeek( SI_S1AP_DT_ScheduledCommunicationTime_dayofWeek ** data);

void __si_s1ap_init_ScheduledCommunicationTime_dayofWeek2( SI_S1AP_DT_ScheduledCommunicationTime_dayofWeek ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_ScheduledCommunicationTime_dayofWeek( char * key, SI_S1AP_DT_ScheduledCommunicationTime_dayofWeek * data, int lvl);

void __si_s1ap_memfree_ScheduledCommunicationTime_dayofWeek( SI_S1AP_DT_ScheduledCommunicationTime_dayofWeek * data);

int __si_s1ap_Encode_ScheduledCommunicationTime_dayofWeek( SI_S1AP_DT_ScheduledCommunicationTime_dayofWeek * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ScheduledCommunicationTime_timeofDayStart( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ScheduledCommunicationTime_timeofDayStart( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ScheduledCommunicationTime_timeofDayStart( SI_S1AP_DT_ScheduledCommunicationTime_timeofDayStart * data);


void __si_s1ap_debug_ScheduledCommunicationTime_timeofDayEnd( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_ScheduledCommunicationTime_timeofDayEnd( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_ScheduledCommunicationTime_timeofDayEnd( SI_S1AP_DT_ScheduledCommunicationTime_timeofDayEnd * data);


void __si_s1ap_init_ScheduledCommunicationTime( SI_S1AP_DT_ScheduledCommunicationTime ** data);

void __si_s1ap_debug_ScheduledCommunicationTime( char * key, SI_S1AP_DT_ScheduledCommunicationTime * data, int lvl);

void __si_s1ap_memfree_ScheduledCommunicationTime( SI_S1AP_DT_ScheduledCommunicationTime * data);

int __si_s1ap_Encode_ScheduledCommunicationTime( SI_S1AP_DT_ScheduledCommunicationTime * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Subscription_Based_UE_DifferentiationInfo( SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo ** data);

void __si_s1ap_debug_Subscription_Based_UE_DifferentiationInfo( char * key, SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo * data, int lvl);

void __si_s1ap_memfree_Subscription_Based_UE_DifferentiationInfo( SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo * data);

int __si_s1ap_Encode_Subscription_Based_UE_DifferentiationInfo( SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_SupportedTAs_Item( SI_S1AP_DT_SupportedTAs_Item ** data);

void __si_s1ap_debug_SupportedTAs_Item( char * key, SI_S1AP_DT_SupportedTAs_Item * data, int lvl);

void __si_s1ap_memfree_SupportedTAs_Item( SI_S1AP_DT_SupportedTAs_Item * data);

int __si_s1ap_Encode_SupportedTAs_Item( SI_S1AP_DT_SupportedTAs_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_SynchronisationStatus( char * key, uint8_t eSynchronisationStatus, int lvl);

int __si_s1ap_Encode_SynchronisationStatus( uint8_t eSynchronisationStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TimeSynchronisationInfo( SI_S1AP_DT_TimeSynchronisationInfo ** data);

void __si_s1ap_debug_TimeSynchronisationInfo( char * key, SI_S1AP_DT_TimeSynchronisationInfo * data, int lvl);

void __si_s1ap_memfree_TimeSynchronisationInfo( SI_S1AP_DT_TimeSynchronisationInfo * data);

int __si_s1ap_Encode_TimeSynchronisationInfo( SI_S1AP_DT_TimeSynchronisationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_S_TMSI( SI_S1AP_DT_S_TMSI ** data);

void __si_s1ap_debug_S_TMSI( char * key, SI_S1AP_DT_S_TMSI * data, int lvl);

void __si_s1ap_memfree_S_TMSI( SI_S1AP_DT_S_TMSI * data);

int __si_s1ap_Encode_S_TMSI( SI_S1AP_DT_S_TMSI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAIListforWarning( SI_S1AP_DT_TAIListforWarning ** data);

void __si_s1ap_debug_TAIListforWarning( char * key, SI_S1AP_DT_TAIListforWarning * data, int lvl);

void __si_s1ap_memfree_TAIListforWarning( SI_S1AP_DT_TAIListforWarning * data);

int __si_s1ap_Encode_TAIListforWarning( SI_S1AP_DT_TAIListforWarning * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CompletedCellinTAI( SI_S1AP_DT_CompletedCellinTAI ** data);

void __si_s1ap_debug_CompletedCellinTAI( char * key, SI_S1AP_DT_CompletedCellinTAI * data, int lvl);

void __si_s1ap_memfree_CompletedCellinTAI( SI_S1AP_DT_CompletedCellinTAI * data);

int __si_s1ap_Encode_CompletedCellinTAI( SI_S1AP_DT_CompletedCellinTAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAI_Broadcast_Item( SI_S1AP_DT_TAI_Broadcast_Item ** data);

void __si_s1ap_debug_TAI_Broadcast_Item( char * key, SI_S1AP_DT_TAI_Broadcast_Item * data, int lvl);

void __si_s1ap_memfree_TAI_Broadcast_Item( SI_S1AP_DT_TAI_Broadcast_Item * data);

int __si_s1ap_Encode_TAI_Broadcast_Item( SI_S1AP_DT_TAI_Broadcast_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAI_Cancelled_Item( SI_S1AP_DT_TAI_Cancelled_Item ** data);

void __si_s1ap_debug_TAI_Cancelled_Item( char * key, SI_S1AP_DT_TAI_Cancelled_Item * data, int lvl);

void __si_s1ap_memfree_TAI_Cancelled_Item( SI_S1AP_DT_TAI_Cancelled_Item * data);

int __si_s1ap_Encode_TAI_Cancelled_Item( SI_S1AP_DT_TAI_Cancelled_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CompletedCellinTAI_Item( SI_S1AP_DT_CompletedCellinTAI_Item ** data);

void __si_s1ap_debug_CompletedCellinTAI_Item( char * key, SI_S1AP_DT_CompletedCellinTAI_Item * data, int lvl);

void __si_s1ap_memfree_CompletedCellinTAI_Item( SI_S1AP_DT_CompletedCellinTAI_Item * data);

int __si_s1ap_Encode_CompletedCellinTAI_Item( SI_S1AP_DT_CompletedCellinTAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TBCD_STRING( SI_S1AP_DT_TBCD_STRING ** data);

void __si_s1ap_init_TBCD_STRING2( SI_S1AP_DT_TBCD_STRING ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_TBCD_STRING( char * key, SI_S1AP_DT_TBCD_STRING * data, int lvl);

void __si_s1ap_memfree_TBCD_STRING( SI_S1AP_DT_TBCD_STRING * data);

int __si_s1ap_Encode_TBCD_STRING( SI_S1AP_DT_TBCD_STRING * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TargetNgRanNode_ID( SI_S1AP_DT_TargetNgRanNode_ID ** data);

void __si_s1ap_debug_TargetNgRanNode_ID( char * key, SI_S1AP_DT_TargetNgRanNode_ID * data, int lvl);

void __si_s1ap_memfree_TargetNgRanNode_ID( SI_S1AP_DT_TargetNgRanNode_ID * data);

int __si_s1ap_Encode_TargetNgRanNode_ID( SI_S1AP_DT_TargetNgRanNode_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TargetID( SI_S1AP_DT_TargetID ** data);

void __si_s1ap_debug_TargetID( char * key, SI_S1AP_DT_TargetID * data, int lvl);

void __si_s1ap_memfree_TargetID( SI_S1AP_DT_TargetID * data);

int __si_s1ap_Encode_TargetID( SI_S1AP_DT_TargetID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TargeteNB_ToSourceeNB_TransparentContainer( SI_S1AP_DT_TargeteNB_ToSourceeNB_TransparentContainer ** data);

void __si_s1ap_debug_TargeteNB_ToSourceeNB_TransparentContainer( char * key, SI_S1AP_DT_TargeteNB_ToSourceeNB_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_TargeteNB_ToSourceeNB_TransparentContainer( SI_S1AP_DT_TargeteNB_ToSourceeNB_TransparentContainer * data);

int __si_s1ap_Encode_TargeteNB_ToSourceeNB_TransparentContainer( SI_S1AP_DT_TargeteNB_ToSourceeNB_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Target_ToSource_TransparentContainer( SI_S1AP_DT_Target_ToSource_TransparentContainer ** data);

void __si_s1ap_init_Target_ToSource_TransparentContainer2( SI_S1AP_DT_Target_ToSource_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_Target_ToSource_TransparentContainer( char * key, SI_S1AP_DT_Target_ToSource_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_Target_ToSource_TransparentContainer( SI_S1AP_DT_Target_ToSource_TransparentContainer * data);

int __si_s1ap_Encode_Target_ToSource_TransparentContainer( SI_S1AP_DT_Target_ToSource_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TargetRNC_ToSourceRNC_TransparentContainer( SI_S1AP_DT_TargetRNC_ToSourceRNC_TransparentContainer ** data);

void __si_s1ap_init_TargetRNC_ToSourceRNC_TransparentContainer2( SI_S1AP_DT_TargetRNC_ToSourceRNC_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_TargetRNC_ToSourceRNC_TransparentContainer( char * key, SI_S1AP_DT_TargetRNC_ToSourceRNC_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_TargetRNC_ToSourceRNC_TransparentContainer( SI_S1AP_DT_TargetRNC_ToSourceRNC_TransparentContainer * data);

int __si_s1ap_Encode_TargetRNC_ToSourceRNC_TransparentContainer( SI_S1AP_DT_TargetRNC_ToSourceRNC_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TargetBSS_ToSourceBSS_TransparentContainer( SI_S1AP_DT_TargetBSS_ToSourceBSS_TransparentContainer ** data);

void __si_s1ap_init_TargetBSS_ToSourceBSS_TransparentContainer2( SI_S1AP_DT_TargetBSS_ToSourceBSS_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_TargetBSS_ToSourceBSS_TransparentContainer( char * key, SI_S1AP_DT_TargetBSS_ToSourceBSS_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_TargetBSS_ToSourceBSS_TransparentContainer( SI_S1AP_DT_TargetBSS_ToSourceBSS_TransparentContainer * data);

int __si_s1ap_Encode_TargetBSS_ToSourceBSS_TransparentContainer( SI_S1AP_DT_TargetBSS_ToSourceBSS_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer( SI_S1AP_DT_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer ** data);

void __si_s1ap_init_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer2( SI_S1AP_DT_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer( char * key, SI_S1AP_DT_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer * data, int lvl);

void __si_s1ap_memfree_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer( SI_S1AP_DT_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer * data);

int __si_s1ap_Encode_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer( SI_S1AP_DT_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_HandoverWindowStart( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_HandoverWindowStart( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_HandoverWindowStart( SI_S1AP_DT_HandoverWindowStart * data);


void __si_s1ap_debug_HandoverWindowDuration( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_HandoverWindowDuration( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_HandoverWindowDuration( SI_S1AP_DT_HandoverWindowDuration * data);


void __si_s1ap_init_TimeBasedHandoverInformation( SI_S1AP_DT_TimeBasedHandoverInformation ** data);

void __si_s1ap_debug_TimeBasedHandoverInformation( char * key, SI_S1AP_DT_TimeBasedHandoverInformation * data, int lvl);

void __si_s1ap_memfree_TimeBasedHandoverInformation( SI_S1AP_DT_TimeBasedHandoverInformation * data);

int __si_s1ap_Encode_TimeBasedHandoverInformation( SI_S1AP_DT_TimeBasedHandoverInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_TimeToWait( char * key, uint8_t eTimeToWait, int lvl);

int __si_s1ap_Encode_TimeToWait( uint8_t eTimeToWait, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_Time_UE_StayedInCell_EnhancedGranularity( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_Time_UE_StayedInCell_EnhancedGranularity( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_Time_UE_StayedInCell_EnhancedGranularity( SI_S1AP_DT_Time_UE_StayedInCell_EnhancedGranularity * data);


void __si_s1ap_init_TimeSinceSecondaryNodeRelease( SI_S1AP_DT_TimeSinceSecondaryNodeRelease ** data);

void __si_s1ap_init_TimeSinceSecondaryNodeRelease2( SI_S1AP_DT_TimeSinceSecondaryNodeRelease ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_TimeSinceSecondaryNodeRelease( char * key, SI_S1AP_DT_TimeSinceSecondaryNodeRelease * data, int lvl);

void __si_s1ap_memfree_TimeSinceSecondaryNodeRelease( SI_S1AP_DT_TimeSinceSecondaryNodeRelease * data);

int __si_s1ap_Encode_TimeSinceSecondaryNodeRelease( SI_S1AP_DT_TimeSinceSecondaryNodeRelease * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TransportLayerAddress( SI_S1AP_DT_TransportLayerAddress ** data);

void __si_s1ap_init_TransportLayerAddress2( SI_S1AP_DT_TransportLayerAddress ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_TransportLayerAddress( char * key, SI_S1AP_DT_TransportLayerAddress * data, int lvl);

void __si_s1ap_memfree_TransportLayerAddress( SI_S1AP_DT_TransportLayerAddress * data);

int __si_s1ap_Encode_TransportLayerAddress( SI_S1AP_DT_TransportLayerAddress * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TransportInformation( SI_S1AP_DT_TransportInformation ** data);

void __si_s1ap_debug_TransportInformation( char * key, SI_S1AP_DT_TransportInformation * data, int lvl);

void __si_s1ap_memfree_TransportInformation( SI_S1AP_DT_TransportInformation * data);

int __si_s1ap_Encode_TransportInformation( SI_S1AP_DT_TransportInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_UTRAN_Trace_ID( SI_S1AP_DT_E_UTRAN_Trace_ID ** data);

void __si_s1ap_init_E_UTRAN_Trace_ID2( SI_S1AP_DT_E_UTRAN_Trace_ID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_E_UTRAN_Trace_ID( char * key, SI_S1AP_DT_E_UTRAN_Trace_ID * data, int lvl);

void __si_s1ap_memfree_E_UTRAN_Trace_ID( SI_S1AP_DT_E_UTRAN_Trace_ID * data);

int __si_s1ap_Encode_E_UTRAN_Trace_ID( SI_S1AP_DT_E_UTRAN_Trace_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_TraceDepth( char * key, uint8_t eTraceDepth, int lvl);

int __si_s1ap_Encode_TraceDepth( uint8_t eTraceDepth, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TraceActivation( SI_S1AP_DT_TraceActivation ** data);

void __si_s1ap_debug_TraceActivation( char * key, SI_S1AP_DT_TraceActivation * data, int lvl);

void __si_s1ap_memfree_TraceActivation( SI_S1AP_DT_TraceActivation * data);

int __si_s1ap_Encode_TraceActivation( SI_S1AP_DT_TraceActivation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_TrafficLoadReductionIndication( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_TrafficLoadReductionIndication( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_TrafficLoadReductionIndication( SI_S1AP_DT_TrafficLoadReductionIndication * data);


void __si_s1ap_init_TunnelInformation( SI_S1AP_DT_TunnelInformation ** data);

void __si_s1ap_debug_TunnelInformation( char * key, SI_S1AP_DT_TunnelInformation * data, int lvl);

void __si_s1ap_memfree_TunnelInformation( SI_S1AP_DT_TunnelInformation * data);

int __si_s1ap_Encode_TunnelInformation( SI_S1AP_DT_TunnelInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAIListForRestart( SI_S1AP_DT_TAIListForRestart ** data);

void __si_s1ap_debug_TAIListForRestart( char * key, SI_S1AP_DT_TAIListForRestart * data, int lvl);

void __si_s1ap_memfree_TAIListForRestart( SI_S1AP_DT_TAIListForRestart * data);

int __si_s1ap_Encode_TAIListForRestart( SI_S1AP_DT_TAIListForRestart * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UEAggregateMaximumBitrate( SI_S1AP_DT_UEAggregateMaximumBitrate ** data);

void __si_s1ap_debug_UEAggregateMaximumBitrate( char * key, SI_S1AP_DT_UEAggregateMaximumBitrate * data, int lvl);

void __si_s1ap_memfree_UEAggregateMaximumBitrate( SI_S1AP_DT_UEAggregateMaximumBitrate * data);

int __si_s1ap_Encode_UEAggregateMaximumBitrate( SI_S1AP_DT_UEAggregateMaximumBitrate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UEAppLayerMeasConfig_containerForAppLayerMeasConfig( SI_S1AP_DT_UEAppLayerMeasConfig_containerForAppLayerMeasConfig ** data);

void __si_s1ap_init_UEAppLayerMeasConfig_containerForAppLayerMeasConfig2( SI_S1AP_DT_UEAppLayerMeasConfig_containerForAppLayerMeasConfig ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_UEAppLayerMeasConfig_containerForAppLayerMeasConfig( char * key, SI_S1AP_DT_UEAppLayerMeasConfig_containerForAppLayerMeasConfig * data, int lvl);

void __si_s1ap_memfree_UEAppLayerMeasConfig_containerForAppLayerMeasConfig( SI_S1AP_DT_UEAppLayerMeasConfig_containerForAppLayerMeasConfig * data);

int __si_s1ap_Encode_UEAppLayerMeasConfig_containerForAppLayerMeasConfig( SI_S1AP_DT_UEAppLayerMeasConfig_containerForAppLayerMeasConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UEAppLayerMeasConfig( SI_S1AP_DT_UEAppLayerMeasConfig ** data);

void __si_s1ap_debug_UEAppLayerMeasConfig( char * key, SI_S1AP_DT_UEAppLayerMeasConfig * data, int lvl);

void __si_s1ap_memfree_UEAppLayerMeasConfig( SI_S1AP_DT_UEAppLayerMeasConfig * data);

int __si_s1ap_Encode_UEAppLayerMeasConfig( SI_S1AP_DT_UEAppLayerMeasConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_UECapabilityInfoRequest( char * key, uint8_t eUECapabilityInfoRequest, int lvl);

int __si_s1ap_Encode_UECapabilityInfoRequest( uint8_t eUECapabilityInfoRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_UE_RetentionInformation( char * key, uint8_t eUE_RetentionInformation, int lvl);

int __si_s1ap_Encode_UE_RetentionInformation( uint8_t eUE_RetentionInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UE_S1AP_ID_pair( SI_S1AP_DT_UE_S1AP_ID_pair ** data);

void __si_s1ap_debug_UE_S1AP_ID_pair( char * key, SI_S1AP_DT_UE_S1AP_ID_pair * data, int lvl);

void __si_s1ap_memfree_UE_S1AP_ID_pair( SI_S1AP_DT_UE_S1AP_ID_pair * data);

int __si_s1ap_Encode_UE_S1AP_ID_pair( SI_S1AP_DT_UE_S1AP_ID_pair * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UE_S1AP_IDs( SI_S1AP_DT_UE_S1AP_IDs ** data);

void __si_s1ap_debug_UE_S1AP_IDs( char * key, SI_S1AP_DT_UE_S1AP_IDs * data, int lvl);

void __si_s1ap_memfree_UE_S1AP_IDs( SI_S1AP_DT_UE_S1AP_IDs * data);

int __si_s1ap_Encode_UE_S1AP_IDs( SI_S1AP_DT_UE_S1AP_IDs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{UE-associatedLogicalS1-ConnectionItemExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_UE_associatedLogicalS1_ConnectionItem( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionItem ** data);

void __si_s1ap_debug_UE_associatedLogicalS1_ConnectionItem( char * key, SI_S1AP_DT_UE_associatedLogicalS1_ConnectionItem * data, int lvl);

void __si_s1ap_memfree_UE_associatedLogicalS1_ConnectionItem( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionItem * data);

int __si_s1ap_Encode_UE_associatedLogicalS1_ConnectionItem( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UEIdentityIndexValue( SI_S1AP_DT_UEIdentityIndexValue ** data);

void __si_s1ap_init_UEIdentityIndexValue2( SI_S1AP_DT_UEIdentityIndexValue ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_UEIdentityIndexValue( char * key, SI_S1AP_DT_UEIdentityIndexValue * data, int lvl);

void __si_s1ap_memfree_UEIdentityIndexValue( SI_S1AP_DT_UEIdentityIndexValue * data);

int __si_s1ap_Encode_UEIdentityIndexValue( SI_S1AP_DT_UEIdentityIndexValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UE_HistoryInformationFromTheUE( SI_S1AP_DT_UE_HistoryInformationFromTheUE ** data);

void __si_s1ap_init_UE_HistoryInformationFromTheUE2( SI_S1AP_DT_UE_HistoryInformationFromTheUE ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_UE_HistoryInformationFromTheUE( char * key, SI_S1AP_DT_UE_HistoryInformationFromTheUE * data, int lvl);

void __si_s1ap_memfree_UE_HistoryInformationFromTheUE( SI_S1AP_DT_UE_HistoryInformationFromTheUE * data);

int __si_s1ap_Encode_UE_HistoryInformationFromTheUE( SI_S1AP_DT_UE_HistoryInformationFromTheUE * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UEPagingID( SI_S1AP_DT_UEPagingID ** data);

void __si_s1ap_debug_UEPagingID( char * key, SI_S1AP_DT_UEPagingID * data, int lvl);

void __si_s1ap_memfree_UEPagingID( SI_S1AP_DT_UEPagingID * data);

int __si_s1ap_Encode_UEPagingID( SI_S1AP_DT_UEPagingID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UERadioCapability( SI_S1AP_DT_UERadioCapability ** data);

void __si_s1ap_init_UERadioCapability2( SI_S1AP_DT_UERadioCapability ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_UERadioCapability( char * key, SI_S1AP_DT_UERadioCapability * data, int lvl);

void __si_s1ap_memfree_UERadioCapability( SI_S1AP_DT_UERadioCapability * data);

int __si_s1ap_Encode_UERadioCapability( SI_S1AP_DT_UERadioCapability * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UERadioCapabilityForPaging( SI_S1AP_DT_UERadioCapabilityForPaging ** data);

void __si_s1ap_init_UERadioCapabilityForPaging2( SI_S1AP_DT_UERadioCapabilityForPaging ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_UERadioCapabilityForPaging( char * key, SI_S1AP_DT_UERadioCapabilityForPaging * data, int lvl);

void __si_s1ap_memfree_UERadioCapabilityForPaging( SI_S1AP_DT_UERadioCapabilityForPaging * data);

int __si_s1ap_Encode_UERadioCapabilityForPaging( SI_S1AP_DT_UERadioCapabilityForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UERadioCapabilityID( SI_S1AP_DT_UERadioCapabilityID ** data);

void __si_s1ap_init_UERadioCapabilityID2( SI_S1AP_DT_UERadioCapabilityID ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_UERadioCapabilityID( char * key, SI_S1AP_DT_UERadioCapabilityID * data, int lvl);

void __si_s1ap_memfree_UERadioCapabilityID( SI_S1AP_DT_UERadioCapabilityID * data);

int __si_s1ap_Encode_UERadioCapabilityID( SI_S1AP_DT_UERadioCapabilityID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UESecurityCapabilities( SI_S1AP_DT_UESecurityCapabilities ** data);

void __si_s1ap_debug_UESecurityCapabilities( char * key, SI_S1AP_DT_UESecurityCapabilities * data, int lvl);

void __si_s1ap_memfree_UESecurityCapabilities( SI_S1AP_DT_UESecurityCapabilities * data);

int __si_s1ap_Encode_UESecurityCapabilities( SI_S1AP_DT_UESecurityCapabilities * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UESidelinkAggregateMaximumBitrate( SI_S1AP_DT_UESidelinkAggregateMaximumBitrate ** data);

void __si_s1ap_debug_UESidelinkAggregateMaximumBitrate( char * key, SI_S1AP_DT_UESidelinkAggregateMaximumBitrate * data, int lvl);

void __si_s1ap_memfree_UESidelinkAggregateMaximumBitrate( SI_S1AP_DT_UESidelinkAggregateMaximumBitrate * data);

int __si_s1ap_Encode_UESidelinkAggregateMaximumBitrate( SI_S1AP_DT_UESidelinkAggregateMaximumBitrate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_UE_Usage_Type( char * key, unsigned long long int data, int lvl);

int __si_s1ap_Encode_UE_Usage_Type( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_memfree_UE_Usage_Type( SI_S1AP_DT_UE_Usage_Type * data);


void __si_s1ap_init_UL_NAS_MAC( SI_S1AP_DT_UL_NAS_MAC ** data);

void __si_s1ap_init_UL_NAS_MAC2( SI_S1AP_DT_UL_NAS_MAC ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_UL_NAS_MAC( char * key, SI_S1AP_DT_UL_NAS_MAC * data, int lvl);

void __si_s1ap_memfree_UL_NAS_MAC( SI_S1AP_DT_UL_NAS_MAC * data);

int __si_s1ap_Encode_UL_NAS_MAC( SI_S1AP_DT_UL_NAS_MAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UL_NAS_Count( SI_S1AP_DT_UL_NAS_Count ** data);

void __si_s1ap_init_UL_NAS_Count2( SI_S1AP_DT_UL_NAS_Count ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_UL_NAS_Count( char * key, SI_S1AP_DT_UL_NAS_Count * data, int lvl);

void __si_s1ap_memfree_UL_NAS_Count( SI_S1AP_DT_UL_NAS_Count * data);

int __si_s1ap_Encode_UL_NAS_Count( SI_S1AP_DT_UL_NAS_Count * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UL_CP_SecurityInformation( SI_S1AP_DT_UL_CP_SecurityInformation ** data);

void __si_s1ap_debug_UL_CP_SecurityInformation( char * key, SI_S1AP_DT_UL_CP_SecurityInformation * data, int lvl);

void __si_s1ap_memfree_UL_CP_SecurityInformation( SI_S1AP_DT_UL_CP_SecurityInformation * data);

int __si_s1ap_Encode_UL_CP_SecurityInformation( SI_S1AP_DT_UL_CP_SecurityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_UnlicensedSpectrumRestriction( char * key, uint8_t eUnlicensedSpectrumRestriction, int lvl);

int __si_s1ap_Encode_UnlicensedSpectrumRestriction( uint8_t eUnlicensedSpectrumRestriction, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_URI_Address( SI_S1AP_DT_URI_Address ** data);

void __si_s1ap_init_URI_Address2( SI_S1AP_DT_URI_Address ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_URI_Address( char * key, SI_S1AP_DT_URI_Address * data, int lvl);

void __si_s1ap_memfree_URI_Address( SI_S1AP_DT_URI_Address * data);

int __si_s1ap_Encode_URI_Address( SI_S1AP_DT_URI_Address * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UserLocationInformation( SI_S1AP_DT_UserLocationInformation ** data);

void __si_s1ap_debug_UserLocationInformation( char * key, SI_S1AP_DT_UserLocationInformation * data, int lvl);

void __si_s1ap_memfree_UserLocationInformation( SI_S1AP_DT_UserLocationInformation * data);

int __si_s1ap_Encode_UserLocationInformation( SI_S1AP_DT_UserLocationInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_UEUserPlaneCIoTSupportIndicator( char * key, uint8_t eUEUserPlaneCIoTSupportIndicator, int lvl);

int __si_s1ap_Encode_UEUserPlaneCIoTSupportIndicator( uint8_t eUEUserPlaneCIoTSupportIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UE_Application_Layer_Measurement_Capability( SI_S1AP_DT_UE_Application_Layer_Measurement_Capability ** data);

void __si_s1ap_init_UE_Application_Layer_Measurement_Capability2( SI_S1AP_DT_UE_Application_Layer_Measurement_Capability ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_s1ap_debug_UE_Application_Layer_Measurement_Capability( char * key, SI_S1AP_DT_UE_Application_Layer_Measurement_Capability * data, int lvl);

void __si_s1ap_memfree_UE_Application_Layer_Measurement_Capability( SI_S1AP_DT_UE_Application_Layer_Measurement_Capability * data);

int __si_s1ap_Encode_UE_Application_Layer_Measurement_Capability( SI_S1AP_DT_UE_Application_Layer_Measurement_Capability * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_VoiceSupportMatchIndicator( char * key, uint8_t eVoiceSupportMatchIndicator, int lvl);

int __si_s1ap_Encode_VoiceSupportMatchIndicator( uint8_t eVoiceSupportMatchIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_V2XServicesAuthorized( SI_S1AP_DT_V2XServicesAuthorized ** data);

void __si_s1ap_debug_V2XServicesAuthorized( char * key, SI_S1AP_DT_V2XServicesAuthorized * data, int lvl);

void __si_s1ap_memfree_V2XServicesAuthorized( SI_S1AP_DT_V2XServicesAuthorized * data);

int __si_s1ap_Encode_V2XServicesAuthorized( SI_S1AP_DT_V2XServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_WarningAreaCoordinates( SI_S1AP_DT_WarningAreaCoordinates ** data);

void __si_s1ap_init_WarningAreaCoordinates2( SI_S1AP_DT_WarningAreaCoordinates ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_WarningAreaCoordinates( char * key, SI_S1AP_DT_WarningAreaCoordinates * data, int lvl);

void __si_s1ap_memfree_WarningAreaCoordinates( SI_S1AP_DT_WarningAreaCoordinates * data);

int __si_s1ap_Encode_WarningAreaCoordinates( SI_S1AP_DT_WarningAreaCoordinates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_WarningAreaList( SI_S1AP_DT_WarningAreaList ** data);

void __si_s1ap_debug_WarningAreaList( char * key, SI_S1AP_DT_WarningAreaList * data, int lvl);

void __si_s1ap_memfree_WarningAreaList( SI_S1AP_DT_WarningAreaList * data);

int __si_s1ap_Encode_WarningAreaList( SI_S1AP_DT_WarningAreaList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_WarningType( SI_S1AP_DT_WarningType ** data);

void __si_s1ap_init_WarningType2( SI_S1AP_DT_WarningType ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_WarningType( char * key, SI_S1AP_DT_WarningType * data, int lvl);

void __si_s1ap_memfree_WarningType( SI_S1AP_DT_WarningType * data);

int __si_s1ap_Encode_WarningType( SI_S1AP_DT_WarningType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_WarningSecurityInfo( SI_S1AP_DT_WarningSecurityInfo ** data);

void __si_s1ap_init_WarningSecurityInfo2( SI_S1AP_DT_WarningSecurityInfo ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_WarningSecurityInfo( char * key, SI_S1AP_DT_WarningSecurityInfo * data, int lvl);

void __si_s1ap_memfree_WarningSecurityInfo( SI_S1AP_DT_WarningSecurityInfo * data);

int __si_s1ap_Encode_WarningSecurityInfo( SI_S1AP_DT_WarningSecurityInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_WarningMessageContents( SI_S1AP_DT_WarningMessageContents ** data);

void __si_s1ap_init_WarningMessageContents2( SI_S1AP_DT_WarningMessageContents ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_WarningMessageContents( char * key, SI_S1AP_DT_WarningMessageContents * data, int lvl);

void __si_s1ap_memfree_WarningMessageContents( SI_S1AP_DT_WarningMessageContents * data);

int __si_s1ap_Encode_WarningMessageContents( SI_S1AP_DT_WarningMessageContents * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_WLANMeasurementConfiguration_wlan_rssi( char * key, uint8_t eWLANMeasurementConfiguration_wlan_rssi, int lvl);

int __si_s1ap_Encode_WLANMeasurementConfiguration_wlan_rssi( uint8_t eWLANMeasurementConfiguration_wlan_rssi, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_WLANMeasurementConfiguration_wlan_rtt( char * key, uint8_t eWLANMeasurementConfiguration_wlan_rtt, int lvl);

int __si_s1ap_Encode_WLANMeasurementConfiguration_wlan_rtt( uint8_t eWLANMeasurementConfiguration_wlan_rtt, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_WLANMeasConfig( char * key, uint8_t eWLANMeasConfig, int lvl);

int __si_s1ap_Encode_WLANMeasConfig( uint8_t eWLANMeasConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_WLANMeasConfigNameList( SI_S1AP_DT_WLANMeasConfigNameList ** data);

void __si_s1ap_debug_WLANMeasConfigNameList( char * key, SI_S1AP_DT_WLANMeasConfigNameList * data, int lvl);

void __si_s1ap_memfree_WLANMeasConfigNameList( SI_S1AP_DT_WLANMeasConfigNameList * data);

int __si_s1ap_Encode_WLANMeasConfigNameList( SI_S1AP_DT_WLANMeasConfigNameList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_WLANMeasurementConfiguration( SI_S1AP_DT_WLANMeasurementConfiguration ** data);

void __si_s1ap_debug_WLANMeasurementConfiguration( char * key, SI_S1AP_DT_WLANMeasurementConfiguration * data, int lvl);

void __si_s1ap_memfree_WLANMeasurementConfiguration( SI_S1AP_DT_WLANMeasurementConfiguration * data);

int __si_s1ap_Encode_WLANMeasurementConfiguration( SI_S1AP_DT_WLANMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_WLANName( SI_S1AP_DT_WLANName ** data);

void __si_s1ap_init_WLANName2( SI_S1AP_DT_WLANName ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_WLANName( char * key, SI_S1AP_DT_WLANName * data, int lvl);

void __si_s1ap_memfree_WLANName( SI_S1AP_DT_WLANName * data);

int __si_s1ap_Encode_WLANName( SI_S1AP_DT_WLANName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_WUS_Assistance_Information( SI_S1AP_DT_WUS_Assistance_Information ** data);

void __si_s1ap_debug_WUS_Assistance_Information( char * key, SI_S1AP_DT_WUS_Assistance_Information * data, int lvl);

void __si_s1ap_memfree_WUS_Assistance_Information( SI_S1AP_DT_WUS_Assistance_Information * data);

int __si_s1ap_Encode_WUS_Assistance_Information( SI_S1AP_DT_WUS_Assistance_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENBX2ExtTLAs( SI_S1AP_DT_ENBX2ExtTLAs ** data);

void __si_s1ap_debug_ENBX2ExtTLAs( char * key, SI_S1AP_DT_ENBX2ExtTLAs * data, int lvl);

void __si_s1ap_memfree_ENBX2ExtTLAs( SI_S1AP_DT_ENBX2ExtTLAs * data);

int __si_s1ap_Encode_ENBX2ExtTLAs( SI_S1AP_DT_ENBX2ExtTLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENBX2GTPTLAs( SI_S1AP_DT_ENBX2GTPTLAs ** data);

void __si_s1ap_debug_ENBX2GTPTLAs( char * key, SI_S1AP_DT_ENBX2GTPTLAs * data, int lvl);

void __si_s1ap_memfree_ENBX2GTPTLAs( SI_S1AP_DT_ENBX2GTPTLAs * data);

int __si_s1ap_Encode_ENBX2GTPTLAs( SI_S1AP_DT_ENBX2GTPTLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENBX2ExtTLA( SI_S1AP_DT_ENBX2ExtTLA ** data);

void __si_s1ap_debug_ENBX2ExtTLA( char * key, SI_S1AP_DT_ENBX2ExtTLA * data, int lvl);

void __si_s1ap_memfree_ENBX2ExtTLA( SI_S1AP_DT_ENBX2ExtTLA * data);

int __si_s1ap_Encode_ENBX2ExtTLA( SI_S1AP_DT_ENBX2ExtTLA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ENBIndirectX2TransportLayerAddresses( SI_S1AP_DT_ENBIndirectX2TransportLayerAddresses ** data);

void __si_s1ap_debug_ENBIndirectX2TransportLayerAddresses( char * key, SI_S1AP_DT_ENBIndirectX2TransportLayerAddresses * data, int lvl);

void __si_s1ap_memfree_ENBIndirectX2TransportLayerAddresses( SI_S1AP_DT_ENBIndirectX2TransportLayerAddresses * data);

int __si_s1ap_Encode_ENBIndirectX2TransportLayerAddresses( SI_S1AP_DT_ENBIndirectX2TransportLayerAddresses * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_debug_ResetAll( char * key, uint8_t eResetAll, int lvl);

int __si_s1ap_Encode_ResetAll( uint8_t eResetAll, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UE_associatedLogicalS1_ConnectionListRes( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListRes ** data);

void __si_s1ap_debug_UE_associatedLogicalS1_ConnectionListRes( char * key, SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListRes * data, int lvl);

void __si_s1ap_memfree_UE_associatedLogicalS1_ConnectionListRes( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListRes * data);

int __si_s1ap_Encode_UE_associatedLogicalS1_ConnectionListRes( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_ResetType( SI_S1AP_DT_ResetType ** data);

void __si_s1ap_debug_ResetType( char * key, SI_S1AP_DT_ResetType * data, int lvl);

void __si_s1ap_memfree_ResetType( SI_S1AP_DT_ResetType * data);

int __si_s1ap_Encode_ResetType( SI_S1AP_DT_ResetType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_Inter_SystemInformationTransferType( SI_S1AP_DT_Inter_SystemInformationTransferType ** data);

void __si_s1ap_debug_Inter_SystemInformationTransferType( char * key, SI_S1AP_DT_Inter_SystemInformationTransferType * data, int lvl);

void __si_s1ap_memfree_Inter_SystemInformationTransferType( SI_S1AP_DT_Inter_SystemInformationTransferType * data);

int __si_s1ap_Encode_Inter_SystemInformationTransferType( SI_S1AP_DT_Inter_SystemInformationTransferType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABDataForwardingItem( SI_S1AP_DT_E_RABDataForwardingItem ** data);

void __si_s1ap_debug_E_RABDataForwardingItem( char * key, SI_S1AP_DT_E_RABDataForwardingItem * data, int lvl);

void __si_s1ap_memfree_E_RABDataForwardingItem( SI_S1AP_DT_E_RABDataForwardingItem * data);

int __si_s1ap_Encode_E_RABDataForwardingItem( SI_S1AP_DT_E_RABDataForwardingItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABToBeSetupItemHOReq( SI_S1AP_DT_E_RABToBeSetupItemHOReq ** data);

void __si_s1ap_debug_E_RABToBeSetupItemHOReq( char * key, SI_S1AP_DT_E_RABToBeSetupItemHOReq * data, int lvl);

void __si_s1ap_memfree_E_RABToBeSetupItemHOReq( SI_S1AP_DT_E_RABToBeSetupItemHOReq * data);

int __si_s1ap_Encode_E_RABToBeSetupItemHOReq( SI_S1AP_DT_E_RABToBeSetupItemHOReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABAdmittedItem( SI_S1AP_DT_E_RABAdmittedItem ** data);

void __si_s1ap_debug_E_RABAdmittedItem( char * key, SI_S1AP_DT_E_RABAdmittedItem * data, int lvl);

void __si_s1ap_memfree_E_RABAdmittedItem( SI_S1AP_DT_E_RABAdmittedItem * data);

int __si_s1ap_Encode_E_RABAdmittedItem( SI_S1AP_DT_E_RABAdmittedItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABFailedToSetupItemHOReqAckExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_E_RABFailedToSetupItemHOReqAck( SI_S1AP_DT_E_RABFailedToSetupItemHOReqAck ** data);

void __si_s1ap_debug_E_RABFailedToSetupItemHOReqAck( char * key, SI_S1AP_DT_E_RABFailedToSetupItemHOReqAck * data, int lvl);

void __si_s1ap_memfree_E_RABFailedToSetupItemHOReqAck( SI_S1AP_DT_E_RABFailedToSetupItemHOReqAck * data);

int __si_s1ap_Encode_E_RABFailedToSetupItemHOReqAck( SI_S1AP_DT_E_RABFailedToSetupItemHOReqAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABToBeSwitchedDLItem( SI_S1AP_DT_E_RABToBeSwitchedDLItem ** data);

void __si_s1ap_debug_E_RABToBeSwitchedDLItem( char * key, SI_S1AP_DT_E_RABToBeSwitchedDLItem * data, int lvl);

void __si_s1ap_memfree_E_RABToBeSwitchedDLItem( SI_S1AP_DT_E_RABToBeSwitchedDLItem * data);

int __si_s1ap_Encode_E_RABToBeSwitchedDLItem( SI_S1AP_DT_E_RABToBeSwitchedDLItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABToBeSwitchedULItem( SI_S1AP_DT_E_RABToBeSwitchedULItem ** data);

void __si_s1ap_debug_E_RABToBeSwitchedULItem( char * key, SI_S1AP_DT_E_RABToBeSwitchedULItem * data, int lvl);

void __si_s1ap_memfree_E_RABToBeSwitchedULItem( SI_S1AP_DT_E_RABToBeSwitchedULItem * data);

int __si_s1ap_Encode_E_RABToBeSwitchedULItem( SI_S1AP_DT_E_RABToBeSwitchedULItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABToBeUpdatedItem( SI_S1AP_DT_E_RABToBeUpdatedItem ** data);

void __si_s1ap_debug_E_RABToBeUpdatedItem( char * key, SI_S1AP_DT_E_RABToBeUpdatedItem * data, int lvl);

void __si_s1ap_memfree_E_RABToBeUpdatedItem( SI_S1AP_DT_E_RABToBeUpdatedItem * data);

int __si_s1ap_Encode_E_RABToBeUpdatedItem( SI_S1AP_DT_E_RABToBeUpdatedItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABToBeSetupListBearerSUReq( SI_S1AP_DT_E_RABToBeSetupListBearerSUReq ** data);

void __si_s1ap_debug_E_RABToBeSetupListBearerSUReq( char * key, SI_S1AP_DT_E_RABToBeSetupListBearerSUReq * data, int lvl);

void __si_s1ap_memfree_E_RABToBeSetupListBearerSUReq( SI_S1AP_DT_E_RABToBeSetupListBearerSUReq * data);

int __si_s1ap_Encode_E_RABToBeSetupListBearerSUReq( SI_S1AP_DT_E_RABToBeSetupListBearerSUReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABToBeSetupItemBearerSUReqExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_E_RABToBeSetupItemBearerSUReq( SI_S1AP_DT_E_RABToBeSetupItemBearerSUReq ** data);

void __si_s1ap_debug_E_RABToBeSetupItemBearerSUReq( char * key, SI_S1AP_DT_E_RABToBeSetupItemBearerSUReq * data, int lvl);

void __si_s1ap_memfree_E_RABToBeSetupItemBearerSUReq( SI_S1AP_DT_E_RABToBeSetupItemBearerSUReq * data);

int __si_s1ap_Encode_E_RABToBeSetupItemBearerSUReq( SI_S1AP_DT_E_RABToBeSetupItemBearerSUReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABSetupListBearerSURes( SI_S1AP_DT_E_RABSetupListBearerSURes ** data);

void __si_s1ap_debug_E_RABSetupListBearerSURes( char * key, SI_S1AP_DT_E_RABSetupListBearerSURes * data, int lvl);

void __si_s1ap_memfree_E_RABSetupListBearerSURes( SI_S1AP_DT_E_RABSetupListBearerSURes * data);

int __si_s1ap_Encode_E_RABSetupListBearerSURes( SI_S1AP_DT_E_RABSetupListBearerSURes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABSetupItemBearerSUResExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_E_RABSetupItemBearerSURes( SI_S1AP_DT_E_RABSetupItemBearerSURes ** data);

void __si_s1ap_debug_E_RABSetupItemBearerSURes( char * key, SI_S1AP_DT_E_RABSetupItemBearerSURes * data, int lvl);

void __si_s1ap_memfree_E_RABSetupItemBearerSURes( SI_S1AP_DT_E_RABSetupItemBearerSURes * data);

int __si_s1ap_Encode_E_RABSetupItemBearerSURes( SI_S1AP_DT_E_RABSetupItemBearerSURes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABToBeModifiedListBearerModReq( SI_S1AP_DT_E_RABToBeModifiedListBearerModReq ** data);

void __si_s1ap_debug_E_RABToBeModifiedListBearerModReq( char * key, SI_S1AP_DT_E_RABToBeModifiedListBearerModReq * data, int lvl);

void __si_s1ap_memfree_E_RABToBeModifiedListBearerModReq( SI_S1AP_DT_E_RABToBeModifiedListBearerModReq * data);

int __si_s1ap_Encode_E_RABToBeModifiedListBearerModReq( SI_S1AP_DT_E_RABToBeModifiedListBearerModReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABToBeModifyItemBearerModReqExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_E_RABToBeModifiedItemBearerModReq( SI_S1AP_DT_E_RABToBeModifiedItemBearerModReq ** data);

void __si_s1ap_debug_E_RABToBeModifiedItemBearerModReq( char * key, SI_S1AP_DT_E_RABToBeModifiedItemBearerModReq * data, int lvl);

void __si_s1ap_memfree_E_RABToBeModifiedItemBearerModReq( SI_S1AP_DT_E_RABToBeModifiedItemBearerModReq * data);

int __si_s1ap_Encode_E_RABToBeModifiedItemBearerModReq( SI_S1AP_DT_E_RABToBeModifiedItemBearerModReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABModifyListBearerModRes( SI_S1AP_DT_E_RABModifyListBearerModRes ** data);

void __si_s1ap_debug_E_RABModifyListBearerModRes( char * key, SI_S1AP_DT_E_RABModifyListBearerModRes * data, int lvl);

void __si_s1ap_memfree_E_RABModifyListBearerModRes( SI_S1AP_DT_E_RABModifyListBearerModRes * data);

int __si_s1ap_Encode_E_RABModifyListBearerModRes( SI_S1AP_DT_E_RABModifyListBearerModRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABModifyItemBearerModResExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_E_RABModifyItemBearerModRes( SI_S1AP_DT_E_RABModifyItemBearerModRes ** data);

void __si_s1ap_debug_E_RABModifyItemBearerModRes( char * key, SI_S1AP_DT_E_RABModifyItemBearerModRes * data, int lvl);

void __si_s1ap_memfree_E_RABModifyItemBearerModRes( SI_S1AP_DT_E_RABModifyItemBearerModRes * data);

int __si_s1ap_Encode_E_RABModifyItemBearerModRes( SI_S1AP_DT_E_RABModifyItemBearerModRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABReleaseListBearerRelComp( SI_S1AP_DT_E_RABReleaseListBearerRelComp ** data);

void __si_s1ap_debug_E_RABReleaseListBearerRelComp( char * key, SI_S1AP_DT_E_RABReleaseListBearerRelComp * data, int lvl);

void __si_s1ap_memfree_E_RABReleaseListBearerRelComp( SI_S1AP_DT_E_RABReleaseListBearerRelComp * data);

int __si_s1ap_Encode_E_RABReleaseListBearerRelComp( SI_S1AP_DT_E_RABReleaseListBearerRelComp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABReleaseItemBearerRelCompExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_E_RABReleaseItemBearerRelComp( SI_S1AP_DT_E_RABReleaseItemBearerRelComp ** data);

void __si_s1ap_debug_E_RABReleaseItemBearerRelComp( char * key, SI_S1AP_DT_E_RABReleaseItemBearerRelComp * data, int lvl);

void __si_s1ap_memfree_E_RABReleaseItemBearerRelComp( SI_S1AP_DT_E_RABReleaseItemBearerRelComp * data);

int __si_s1ap_Encode_E_RABReleaseItemBearerRelComp( SI_S1AP_DT_E_RABReleaseItemBearerRelComp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABToBeSetupListCtxtSUReq( SI_S1AP_DT_E_RABToBeSetupListCtxtSUReq ** data);

void __si_s1ap_debug_E_RABToBeSetupListCtxtSUReq( char * key, SI_S1AP_DT_E_RABToBeSetupListCtxtSUReq * data, int lvl);

void __si_s1ap_memfree_E_RABToBeSetupListCtxtSUReq( SI_S1AP_DT_E_RABToBeSetupListCtxtSUReq * data);

int __si_s1ap_Encode_E_RABToBeSetupListCtxtSUReq( SI_S1AP_DT_E_RABToBeSetupListCtxtSUReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABToBeSetupItemCtxtSUReqExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_E_RABToBeSetupItemCtxtSUReq( SI_S1AP_DT_E_RABToBeSetupItemCtxtSUReq ** data);

void __si_s1ap_debug_E_RABToBeSetupItemCtxtSUReq( char * key, SI_S1AP_DT_E_RABToBeSetupItemCtxtSUReq * data, int lvl);

void __si_s1ap_memfree_E_RABToBeSetupItemCtxtSUReq( SI_S1AP_DT_E_RABToBeSetupItemCtxtSUReq * data);

int __si_s1ap_Encode_E_RABToBeSetupItemCtxtSUReq( SI_S1AP_DT_E_RABToBeSetupItemCtxtSUReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABSetupListCtxtSURes( SI_S1AP_DT_E_RABSetupListCtxtSURes ** data);

void __si_s1ap_debug_E_RABSetupListCtxtSURes( char * key, SI_S1AP_DT_E_RABSetupListCtxtSURes * data, int lvl);

void __si_s1ap_memfree_E_RABSetupListCtxtSURes( SI_S1AP_DT_E_RABSetupListCtxtSURes * data);

int __si_s1ap_Encode_E_RABSetupListCtxtSURes( SI_S1AP_DT_E_RABSetupListCtxtSURes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABSetupItemCtxtSUResExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_E_RABSetupItemCtxtSURes( SI_S1AP_DT_E_RABSetupItemCtxtSURes ** data);

void __si_s1ap_debug_E_RABSetupItemCtxtSURes( char * key, SI_S1AP_DT_E_RABSetupItemCtxtSURes * data, int lvl);

void __si_s1ap_memfree_E_RABSetupItemCtxtSURes( SI_S1AP_DT_E_RABSetupItemCtxtSURes * data);

int __si_s1ap_Encode_E_RABSetupItemCtxtSURes( SI_S1AP_DT_E_RABSetupItemCtxtSURes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_TAIList( SI_S1AP_DT_TAIList ** data);

void __si_s1ap_debug_TAIList( char * key, SI_S1AP_DT_TAIList * data, int lvl);

void __si_s1ap_memfree_TAIList( SI_S1AP_DT_TAIList * data);

int __si_s1ap_Encode_TAIList( SI_S1AP_DT_TAIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{TAIItemExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_TAIItem( SI_S1AP_DT_TAIItem ** data);

void __si_s1ap_debug_TAIItem( char * key, SI_S1AP_DT_TAIItem * data, int lvl);

void __si_s1ap_memfree_TAIItem( SI_S1AP_DT_TAIItem * data);

int __si_s1ap_Encode_TAIItem( SI_S1AP_DT_TAIItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_UE_associatedLogicalS1_ConnectionListResAck( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListResAck ** data);

void __si_s1ap_debug_UE_associatedLogicalS1_ConnectionListResAck( char * key, SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListResAck * data, int lvl);

void __si_s1ap_memfree_UE_associatedLogicalS1_ConnectionListResAck( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListResAck * data);

int __si_s1ap_Encode_UE_associatedLogicalS1_ConnectionListResAck( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListResAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABToBeModifiedItemBearerModInd( SI_S1AP_DT_E_RABToBeModifiedItemBearerModInd ** data);

void __si_s1ap_debug_E_RABToBeModifiedItemBearerModInd( char * key, SI_S1AP_DT_E_RABToBeModifiedItemBearerModInd * data, int lvl);

void __si_s1ap_memfree_E_RABToBeModifiedItemBearerModInd( SI_S1AP_DT_E_RABToBeModifiedItemBearerModInd * data);

int __si_s1ap_Encode_E_RABToBeModifiedItemBearerModInd( SI_S1AP_DT_E_RABToBeModifiedItemBearerModInd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABNotToBeModifiedItemBearerModInd( SI_S1AP_DT_E_RABNotToBeModifiedItemBearerModInd ** data);

void __si_s1ap_debug_E_RABNotToBeModifiedItemBearerModInd( char * key, SI_S1AP_DT_E_RABNotToBeModifiedItemBearerModInd * data, int lvl);

void __si_s1ap_memfree_E_RABNotToBeModifiedItemBearerModInd( SI_S1AP_DT_E_RABNotToBeModifiedItemBearerModInd * data);

int __si_s1ap_Encode_E_RABNotToBeModifiedItemBearerModInd( SI_S1AP_DT_E_RABNotToBeModifiedItemBearerModInd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_CSGMembershipInfo( SI_S1AP_DT_CSGMembershipInfo ** data);

void __si_s1ap_debug_CSGMembershipInfo( char * key, SI_S1AP_DT_CSGMembershipInfo * data, int lvl);

void __si_s1ap_memfree_CSGMembershipInfo( SI_S1AP_DT_CSGMembershipInfo * data);

int __si_s1ap_Encode_CSGMembershipInfo( SI_S1AP_DT_CSGMembershipInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABModifyListBearerModConf( SI_S1AP_DT_E_RABModifyListBearerModConf ** data);

void __si_s1ap_debug_E_RABModifyListBearerModConf( char * key, SI_S1AP_DT_E_RABModifyListBearerModConf * data, int lvl);

void __si_s1ap_memfree_E_RABModifyListBearerModConf( SI_S1AP_DT_E_RABModifyListBearerModConf * data);

int __si_s1ap_Encode_E_RABModifyListBearerModConf( SI_S1AP_DT_E_RABModifyListBearerModConf * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABModifyItemBearerModConfExtIEs}}<- Got NULL  L:7577

void __si_s1ap_init_E_RABModifyItemBearerModConf( SI_S1AP_DT_E_RABModifyItemBearerModConf ** data);

void __si_s1ap_debug_E_RABModifyItemBearerModConf( char * key, SI_S1AP_DT_E_RABModifyItemBearerModConf * data, int lvl);

void __si_s1ap_memfree_E_RABModifyItemBearerModConf( SI_S1AP_DT_E_RABModifyItemBearerModConf * data);

int __si_s1ap_Encode_E_RABModifyItemBearerModConf( SI_S1AP_DT_E_RABModifyItemBearerModConf * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABFailedToResumeItemResumeReq( SI_S1AP_DT_E_RABFailedToResumeItemResumeReq ** data);

void __si_s1ap_debug_E_RABFailedToResumeItemResumeReq( char * key, SI_S1AP_DT_E_RABFailedToResumeItemResumeReq * data, int lvl);

void __si_s1ap_memfree_E_RABFailedToResumeItemResumeReq( SI_S1AP_DT_E_RABFailedToResumeItemResumeReq * data);

int __si_s1ap_Encode_E_RABFailedToResumeItemResumeReq( SI_S1AP_DT_E_RABFailedToResumeItemResumeReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_E_RABFailedToResumeItemResumeRes( SI_S1AP_DT_E_RABFailedToResumeItemResumeRes ** data);

void __si_s1ap_debug_E_RABFailedToResumeItemResumeRes( char * key, SI_S1AP_DT_E_RABFailedToResumeItemResumeRes * data, int lvl);

void __si_s1ap_memfree_E_RABFailedToResumeItemResumeRes( SI_S1AP_DT_E_RABFailedToResumeItemResumeRes * data);

int __si_s1ap_Encode_E_RABFailedToResumeItemResumeRes( SI_S1AP_DT_E_RABFailedToResumeItemResumeRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_s1ap_init_DefaultOctetString( SI_S1AP_DT_DefaultOctetString ** data);

void __si_s1ap_init_DefaultOctetString2( SI_S1AP_DT_DefaultOctetString ** data, u_char * cstr, uint32_t len);

void __si_s1ap_debug_DefaultOctetString( char * key, SI_S1AP_DT_DefaultOctetString * data, int lvl);

void __si_s1ap_memfree_DefaultOctetString( SI_S1AP_DT_DefaultOctetString * data);

int __si_s1ap_Encode_DefaultOctetString( SI_S1AP_DT_DefaultOctetString * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType -><- Got NULL L:7716

int __si_s1ap_Decode_Criticality( uint8_t * eCriticality,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Presence( uint8_t * ePresence,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PrivateIEID_local( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PrivateIE_ID( SI_S1AP_DT_PrivateIE_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ProcedureCode( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ProtocolExtensionID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ProtocolIE_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TriggeringMessage( uint8_t * eTriggeringMessage,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NULL( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PLMNidentity( SI_S1AP_DT_PLMNidentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MME_Group_ID( SI_S1AP_DT_MME_Group_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MME_Code( SI_S1AP_DT_MME_Code ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GUMMEI( SI_S1AP_DT_GUMMEI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M_TMSI( SI_S1AP_DT_M_TMSI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Additional_GUTI( SI_S1AP_DT_Additional_GUTI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_AdditionalRRMPriorityIndex( SI_S1AP_DT_AdditionalRRMPriorityIndex ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_AerialUEsubscriptionInformation( uint8_t * eAerialUEsubscriptionInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellIdListforMDT( SI_S1AP_DT_CellIdListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellBasedMDT( SI_S1AP_DT_CellBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAListforMDT( SI_S1AP_DT_TAListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TABasedMDT( SI_S1AP_DT_TABasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAIListforMDT( SI_S1AP_DT_TAIListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAIBasedMDT( SI_S1AP_DT_TAIBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_AreaScopeOfMDT( SI_S1AP_DT_AreaScopeOfMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellIdListforQMC( SI_S1AP_DT_CellIdListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellBasedQMC( SI_S1AP_DT_CellBasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAListforQMC( SI_S1AP_DT_TAListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TABasedQMC( SI_S1AP_DT_TABasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAIListforQMC( SI_S1AP_DT_TAIListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAIBasedQMC( SI_S1AP_DT_TAIBasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PLMNListforQMC( SI_S1AP_DT_PLMNListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PLMNAreaBasedQMC( SI_S1AP_DT_PLMNAreaBasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_AreaScopeOfQMC( SI_S1AP_DT_AreaScopeOfQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PriorityLevel( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Pre_emptionCapability( uint8_t * ePre_emptionCapability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Pre_emptionVulnerability( uint8_t * ePre_emptionVulnerability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_AllocationAndRetentionPriority( SI_S1AP_DT_AllocationAndRetentionPriority ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellIdentity( SI_S1AP_DT_CellIdentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EUTRAN_CGI( SI_S1AP_DT_EUTRAN_CGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CELevel( SI_S1AP_DT_CELevel ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellIdentifierAndCELevelForCECapableUEs( SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_AssistanceDataForCECapableUEs( SI_S1AP_DT_AssistanceDataForCECapableUEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RecommendedCellList( SI_S1AP_DT_RecommendedCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RecommendedCellsForPaging( SI_S1AP_DT_RecommendedCellsForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_AssistanceDataForRecommendedCells( SI_S1AP_DT_AssistanceDataForRecommendedCells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PagingAttemptCount( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IntendedNumberOfPagingAttempts( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NextPagingAreaScope( uint8_t * eNextPagingAreaScope,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PagingAttemptInformation( SI_S1AP_DT_PagingAttemptInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_AssistanceDataForPaging( SI_S1AP_DT_AssistanceDataForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Bearers_SubjectToStatusTransferList( SI_S1AP_DT_Bearers_SubjectToStatusTransferList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RAB_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PDCP_SN( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_HFN( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_COUNTvalue( SI_S1AP_DT_COUNTvalue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ReceiveStatusofULPDCPSDUs( SI_S1AP_DT_ReceiveStatusofULPDCPSDUs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{Bearers-SubjectToStatusTransfer-ItemExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_Bearers_SubjectToStatusTransfer_Item( SI_S1AP_DT_Bearers_SubjectToStatusTransfer_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Bearers_SubjectToEarlyStatusTransferList( SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransferList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PDCP_SNExtended( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_HFNModified( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_COUNTValueExtended( SI_S1AP_DT_COUNTValueExtended ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PDCP_SNlength18( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_HFNforPDCP_SNlength18( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_COUNTvaluePDCP_SNlength18( SI_S1AP_DT_COUNTvaluePDCP_SNlength18 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DLCOUNT_PDCP_SNlength( SI_S1AP_DT_DLCOUNT_PDCP_SNlength ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{Bearers-SubjectToEarlyStatusTransfer-ItemExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_Bearers_SubjectToEarlyStatusTransfer_Item( SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransfer_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Bearers_SubjectToDLDiscardingList( SI_S1AP_DT_Bearers_SubjectToDLDiscardingList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DLDiscarding( SI_S1AP_DT_DLDiscarding ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{Bearers-SubjectToDLDiscarding-ItemExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_Bearers_SubjectToDLDiscarding_Item( SI_S1AP_DT_Bearers_SubjectToDLDiscarding_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BearerType( uint8_t * eBearerType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BitRate( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BluetoothMeasurementConfiguration_bt_rssi( uint8_t * eBluetoothMeasurementConfiguration_bt_rssi,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BluetoothMeasConfig( uint8_t * eBluetoothMeasConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BluetoothMeasConfigNameList( SI_S1AP_DT_BluetoothMeasConfigNameList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BluetoothMeasurementConfiguration( SI_S1AP_DT_BluetoothMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BluetoothName( SI_S1AP_DT_BluetoothName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BPLMNs( SI_S1AP_DT_BPLMNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellID_Cancelled( SI_S1AP_DT_CellID_Cancelled ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAI_Cancelled( SI_S1AP_DT_TAI_Cancelled ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EmergencyAreaID_Cancelled( SI_S1AP_DT_EmergencyAreaID_Cancelled ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BroadcastCancelledAreaList( SI_S1AP_DT_BroadcastCancelledAreaList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellID_Broadcast( SI_S1AP_DT_CellID_Broadcast ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAI_Broadcast( SI_S1AP_DT_TAI_Broadcast ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EmergencyAreaID_Broadcast( SI_S1AP_DT_EmergencyAreaID_Broadcast ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_BroadcastCompletedAreaList( SI_S1AP_DT_BroadcastCompletedAreaList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CancelledCellinEAI( SI_S1AP_DT_CancelledCellinEAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NumberOfBroadcasts( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CancelledCellinEAI_Item( SI_S1AP_DT_CancelledCellinEAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CancelledCellinTAI( SI_S1AP_DT_CancelledCellinTAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CancelledCellinTAI_Item( SI_S1AP_DT_CancelledCellinTAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CauseRadioNetwork( uint8_t * eCauseRadioNetwork,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CauseTransport( uint8_t * eCauseTransport,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CauseNas( uint8_t * eCauseNas,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CauseProtocol( uint8_t * eCauseProtocol,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CauseMisc( uint8_t * eCauseMisc,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cause( SI_S1AP_DT_Cause ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellAccessMode( uint8_t * eCellAccessMode,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CE_mode_B_SupportIndicator( uint8_t * eCE_mode_B_SupportIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellID_Broadcast_Item( SI_S1AP_DT_CellID_Broadcast_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellID_Cancelled_Item( SI_S1AP_DT_CellID_Cancelled_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000PDU( SI_S1AP_DT_Cdma2000PDU ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000RATType( uint8_t * eCdma2000RATType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000SectorID( SI_S1AP_DT_Cdma2000SectorID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000HOStatus( uint8_t * eCdma2000HOStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000HORequiredIndication( uint8_t * eCdma2000HORequiredIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000OneXMEID( SI_S1AP_DT_Cdma2000OneXMEID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000OneXMSI( SI_S1AP_DT_Cdma2000OneXMSI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000OneXPilot( SI_S1AP_DT_Cdma2000OneXPilot ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000OneXSRVCCInfo( SI_S1AP_DT_Cdma2000OneXSRVCCInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cdma2000OneXRAND( SI_S1AP_DT_Cdma2000OneXRAND ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Cell_Size( uint8_t * eCell_Size,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CellType( SI_S1AP_DT_CellType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LAC( SI_S1AP_DT_LAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CI( SI_S1AP_DT_CI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RAC( SI_S1AP_DT_RAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CGI( SI_S1AP_DT_CGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CNDomain( uint8_t * eCNDomain,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CNTypeRestrictions( SI_S1AP_DT_CNTypeRestrictions ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CNType( uint8_t * eCNType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CNTypeRestrictions_Item( SI_S1AP_DT_CNTypeRestrictions_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CoarseUELocationRequested( uint8_t * eCoarseUELocationRequested,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CoarseUELocation( SI_S1AP_DT_CoarseUELocation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ConcurrentWarningMessageIndicator( uint8_t * eConcurrentWarningMessageIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ConnectedengNBList( SI_S1AP_DT_ConnectedengNBList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_En_gNB_ID( SI_S1AP_DT_En_gNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SupportedTAs( SI_S1AP_DT_SupportedTAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ConnectedengNBItem( SI_S1AP_DT_ConnectedengNBItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GNB_ID( SI_S1AP_DT_GNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GNB_Identity( SI_S1AP_DT_GNB_Identity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Global_GNB_ID( SI_S1AP_DT_Global_GNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GNB( SI_S1AP_DT_GNB ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBID_macroENB_ID( SI_S1AP_DT_ENBID_macroENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBID_homeENB_ID( SI_S1AP_DT_ENBID_homeENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBID_short_macroENB_ID( SI_S1AP_DT_ENBID_short_macroENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBID_long_macroENB_ID( SI_S1AP_DT_ENBID_long_macroENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENB_ID( SI_S1AP_DT_ENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Global_ENB_ID( SI_S1AP_DT_Global_ENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NG_eNB( SI_S1AP_DT_NG_eNB ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Global_RAN_NODE_ID( SI_S1AP_DT_Global_RAN_NODE_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RAN_UE_NGAP_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ContextatSource( SI_S1AP_DT_ContextatSource ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Correlation_ID( SI_S1AP_DT_Correlation_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CSFallbackIndicator( uint8_t * eCSFallbackIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_AdditionalCSFallbackIndicator( uint8_t * eAdditionalCSFallbackIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CSG_Id( SI_S1AP_DT_CSG_Id ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CSG_IdList( SI_S1AP_DT_CSG_IdList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CSG_IdList_Item( SI_S1AP_DT_CSG_IdList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CSGMembershipStatus( uint8_t * eCSGMembershipStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Coverage_Level( uint8_t * eCoverage_Level,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CriticalityDiagnostics_IE_List( SI_S1AP_DT_CriticalityDiagnostics_IE_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CriticalityDiagnostics( SI_S1AP_DT_CriticalityDiagnostics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TypeOfError( uint8_t * eTypeOfError,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CriticalityDiagnostics_IE_Item( SI_S1AP_DT_CriticalityDiagnostics_IE_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DAPSRequestInfo_dAPSIndicator( uint8_t * eDAPSRequestInfo_dAPSIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DAPSRequestInfo( SI_S1AP_DT_DAPSRequestInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DAPSResponseInfoList( SI_S1AP_DT_DAPSResponseInfoList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DAPSResponseInfo_dapsresponseindicator( uint8_t * eDAPSResponseInfo_dapsresponseindicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DAPSResponseInfo( SI_S1AP_DT_DAPSResponseInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DAPSResponseInfoItem( SI_S1AP_DT_DAPSResponseInfoItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

// DHS-ADT=2  DT=3 Container L:4014
int __si_s1ap_Decode_DAPSResponseInfoListIEs( SI_S1AP_DT_DAPSResponseInfoListIEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DataCodingScheme( SI_S1AP_DT_DataCodingScheme ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DataSize( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DCN_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ServedDCNs( SI_S1AP_DT_ServedDCNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RelativeMMECapacity( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ServedDCNsItem( SI_S1AP_DT_ServedDCNsItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DL_NAS_MAC( SI_S1AP_DT_DL_NAS_MAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DL_CP_SecurityInformation( SI_S1AP_DT_DL_CP_SecurityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DL_Forwarding( uint8_t * eDL_Forwarding,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Direct_Forwarding_Path_Availability( uint8_t * eDirect_Forwarding_Path_Availability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Data_Forwarding_Not_Possible( uint8_t * eData_Forwarding_Not_Possible,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DLNASPDUDeliveryAckRequest( uint8_t * eDLNASPDUDeliveryAckRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EARFCN( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ECGIList( SI_S1AP_DT_ECGIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PWSfailedECGIList( SI_S1AP_DT_PWSfailedECGIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EDT_Session( uint8_t * eEDT_Session,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EmergencyAreaIDList( SI_S1AP_DT_EmergencyAreaIDList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EmergencyAreaID( SI_S1AP_DT_EmergencyAreaID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CompletedCellinEAI( SI_S1AP_DT_CompletedCellinEAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EmergencyAreaID_Broadcast_Item( SI_S1AP_DT_EmergencyAreaID_Broadcast_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EmergencyAreaID_Cancelled_Item( SI_S1AP_DT_EmergencyAreaID_Cancelled_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CompletedCellinEAI_Item( SI_S1AP_DT_CompletedCellinEAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ECGI_List( SI_S1AP_DT_ECGI_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EmergencyAreaIDListForRestart( SI_S1AP_DT_EmergencyAreaIDListForRestart ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EmergencyIndicator( uint8_t * eEmergencyIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENB_EarlyStatusTransfer_TransparentContainer( SI_S1AP_DT_ENB_EarlyStatusTransfer_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LAI( SI_S1AP_DT_LAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GERAN_Cell_ID( SI_S1AP_DT_GERAN_Cell_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Global_en_gNB_ID( SI_S1AP_DT_Global_en_gNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GUMMEIList( SI_S1AP_DT_GUMMEIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENB_StatusTransfer_TransparentContainer( SI_S1AP_DT_ENB_StatusTransfer_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENB_UE_S1AP_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBname( SI_S1AP_DT_ENBname ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBX2TLAs( SI_S1AP_DT_ENBX2TLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EncryptionAlgorithms( SI_S1AP_DT_EncryptionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAC( SI_S1AP_DT_TAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAI( SI_S1AP_DT_TAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EN_DCSONeNBIdentification( SI_S1AP_DT_EN_DCSONeNBIdentification ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EN_DCSONengNBIdentification( SI_S1AP_DT_EN_DCSONengNBIdentification ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_FiveGSTAC( SI_S1AP_DT_FiveGSTAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_FiveGSTAI( SI_S1AP_DT_FiveGSTAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EN_DCTransferTypeRequest( SI_S1AP_DT_EN_DCTransferTypeRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EN_DCTransferTypeReply( SI_S1AP_DT_EN_DCTransferTypeReply ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EN_DCSONTransferType( SI_S1AP_DT_EN_DCSONTransferType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SONInformationRequest( uint8_t * eSONInformationRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_X2TNLConfigurationInfo( SI_S1AP_DT_X2TNLConfigurationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SONInformationReply( SI_S1AP_DT_SONInformationReply ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->SONInformation-ExtensionIE<- Got NULL L:7716

// DHS-ADT=0  DT=1 Container L:4014
int __si_s1ap_Decode_SONInformation_Extension( SI_S1AP_DT_SONInformation_Extension ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SONInformation( SI_S1AP_DT_SONInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EN_DCSONConfigurationTransfer( SI_S1AP_DT_EN_DCSONConfigurationTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EndIndication( uint8_t * eEndIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EnhancedCoverageRestricted( uint8_t * eEnhancedCoverageRestricted,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CE_ModeBRestricted( uint8_t * eCE_ModeBRestricted,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EPLMNs( SI_S1AP_DT_EPLMNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EventType( uint8_t * eEventType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABInformationList( SI_S1AP_DT_E_RABInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABInformationListItem( SI_S1AP_DT_E_RABInformationListItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

// DHS-ADT=2  DT=3 Container L:4014
int __si_s1ap_Decode_E_RABInformationListIEs( SI_S1AP_DT_E_RABInformationListIEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABList( SI_S1AP_DT_E_RABList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABItem( SI_S1AP_DT_E_RABItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_QCI( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GBR_QosInformation( SI_S1AP_DT_GBR_QosInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABLevelQoSParameters( SI_S1AP_DT_E_RABLevelQoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABSecurityResultList( SI_S1AP_DT_E_RABSecurityResultList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IntegrityProtectionResult( uint8_t * eIntegrityProtectionResult,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SecurityResult( SI_S1AP_DT_SecurityResult ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABSecurityResultItem( SI_S1AP_DT_E_RABSecurityResultItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

// DHS-ADT=2  DT=3 Container L:4014
int __si_s1ap_Decode_E_RABSecurityResultListIEs( SI_S1AP_DT_E_RABSecurityResultListIEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABUsageReportList( SI_S1AP_DT_E_RABUsageReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ERABUsageReportItem_startTimestamp( SI_S1AP_DT_ERABUsageReportItem_startTimestamp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ERABUsageReportItem_endTimestamp( SI_S1AP_DT_ERABUsageReportItem_endTimestamp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ERABUsageReportItem_usageCountUL( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ERABUsageReportItem_usageCountDL( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABUsageReportItem( SI_S1AP_DT_E_RABUsageReportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Ethernet_Type( uint8_t * eEthernet_Type,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EUTRANRoundTripDelayEstimationInfo( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Threshold_RSRP( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Threshold_RSRQ( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MeasurementThresholdL1LoggedMDT( SI_S1AP_DT_MeasurementThresholdL1LoggedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Hysteresis( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TimeToTrigger( uint8_t * eTimeToTrigger,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EventL1LoggedMDTConfig( SI_S1AP_DT_EventL1LoggedMDTConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EventTrigger_outOfCoverage( uint8_t * eEventTrigger_outOfCoverage,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_EventTrigger( SI_S1AP_DT_EventTrigger ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ExpectedActivityPeriod( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ExpectedIdlePeriod( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SourceOfUEActivityBehaviourInformation( uint8_t * eSourceOfUEActivityBehaviourInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ExpectedUEActivityBehaviour( SI_S1AP_DT_ExpectedUEActivityBehaviour ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ExpectedHOInterval( uint8_t * eExpectedHOInterval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ExpectedUEBehaviour( SI_S1AP_DT_ExpectedUEBehaviour ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ExtendedBitRate( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ExtendedRNC_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ExtendedRepetitionPeriod( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Extended_UEIdentityIndexValue( SI_S1AP_DT_Extended_UEIdentityIndexValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_FiveQI( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ForbiddenInterRATs( uint8_t * eForbiddenInterRATs,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ForbiddenTAs( SI_S1AP_DT_ForbiddenTAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ForbiddenTACs( SI_S1AP_DT_ForbiddenTACs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ForbiddenTAs_Item( SI_S1AP_DT_ForbiddenTAs_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ForbiddenLAs( SI_S1AP_DT_ForbiddenLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ForbiddenLACs( SI_S1AP_DT_ForbiddenLACs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ForbiddenLAs_Item( SI_S1AP_DT_ForbiddenLAs_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GTP_TEID( SI_S1AP_DT_GTP_TEID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GUMMEIType( uint8_t * eGUMMEIType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_GWContextReleaseIndication( uint8_t * eGWContextReleaseIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_HandoverFlag( uint8_t * eHandoverFlag,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_HandoverRestrictionList( SI_S1AP_DT_HandoverRestrictionList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_HandoverType( uint8_t * eHandoverType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Masked_IMEISV( SI_S1AP_DT_Masked_IMEISV ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MeasurementsToActivate( SI_S1AP_DT_MeasurementsToActivate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M1ReportingTrigger( uint8_t * eM1ReportingTrigger,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MeasurementThresholdA2( SI_S1AP_DT_MeasurementThresholdA2 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M1ThresholdEventA2( SI_S1AP_DT_M1ThresholdEventA2 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ReportIntervalMDT( uint8_t * eReportIntervalMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ReportAmountMDT( uint8_t * eReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M1PeriodicReporting( SI_S1AP_DT_M1PeriodicReporting ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ImmediateMDT( SI_S1AP_DT_ImmediateMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IMSI( SI_S1AP_DT_IMSI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RecommendedENBList( SI_S1AP_DT_RecommendedENBList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RecommendedENBsForPaging( SI_S1AP_DT_RecommendedENBsForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InformationOnRecommendedCellsAndENBsForPaging( SI_S1AP_DT_InformationOnRecommendedCellsAndENBsForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IntegrityProtectionAlgorithms( SI_S1AP_DT_IntegrityProtectionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IntegrityProtectionIndication( uint8_t * eIntegrityProtectionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterfacesToTrace( SI_S1AP_DT_InterfacesToTrace ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IntersystemMeasurementConfiguration_rSRP( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IntersystemMeasurementConfiguration_rSRQ( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IntersystemMeasurementConfiguration_sINR( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementParameters_measurementDuration( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementList( SI_S1AP_DT_InterSystemMeasurementList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementParameters( SI_S1AP_DT_InterSystemMeasurementParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IntersystemMeasurementConfiguration( SI_S1AP_DT_IntersystemMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_freqBandIndicatorNR( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_sSBfrequencies( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_subcarrierSpacingSSB( uint8_t * eInterSystemMeasurementItem_subcarrierSpacingSSB,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_maxRSIndexCellQual( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_sMTC( SI_S1AP_DT_InterSystemMeasurementItem_sMTC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_threshRS_Index_r15( SI_S1AP_DT_InterSystemMeasurementItem_threshRS_Index_r15 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_sSBToMeasure( SI_S1AP_DT_InterSystemMeasurementItem_sSBToMeasure ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_sSRSSIMeasurement( SI_S1AP_DT_InterSystemMeasurementItem_sSRSSIMeasurement ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_quantityConfigNR_R15( SI_S1AP_DT_InterSystemMeasurementItem_quantityConfigNR_R15 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem_excludedCellsToAddModList( SI_S1AP_DT_InterSystemMeasurementItem_excludedCellsToAddModList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_InterSystemMeasurementItem( SI_S1AP_DT_InterSystemMeasurementItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IntersystemSONConfigurationTransfer( SI_S1AP_DT_IntersystemSONConfigurationTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IMSvoiceEPSfallbackfrom5G( uint8_t * eIMSvoiceEPSfallbackfrom5G,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IAB_Authorized( uint8_t * eIAB_Authorized,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IAB_Node_Indication( uint8_t * eIAB_Node_Indication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_IAB_Supported( uint8_t * eIAB_Supported,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_KillAllWarningMessages( uint8_t * eKillAllWarningMessages,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Time_UE_StayedInCell( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LastVisitedEUTRANCellInformation( SI_S1AP_DT_LastVisitedEUTRANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LastVisitedUTRANCellInformation( SI_S1AP_DT_LastVisitedUTRANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LastVisitedGERANCellInformation( SI_S1AP_DT_LastVisitedGERANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LastVisitedNGRANCellInformation( SI_S1AP_DT_LastVisitedNGRANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LastVisitedCell_Item( SI_S1AP_DT_LastVisitedCell_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LastVisitedPSCellList( SI_S1AP_DT_LastVisitedPSCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LastVisitedPSCellInformation_timeStay( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NRCellIdentity( SI_S1AP_DT_NRCellIdentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NR_CGI( SI_S1AP_DT_NR_CGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PSCellInformation( SI_S1AP_DT_PSCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LastVisitedPSCellInformation( SI_S1AP_DT_LastVisitedPSCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_L3_Information( SI_S1AP_DT_L3_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LPPa_PDU( SI_S1AP_DT_LPPa_PDU ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LHN_ID( SI_S1AP_DT_LHN_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Links_to_log( uint8_t * eLinks_to_log,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ListeningSubframePattern_pattern_period( uint8_t * eListeningSubframePattern_pattern_period,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ListeningSubframePattern_pattern_offset( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ListeningSubframePattern( SI_S1AP_DT_ListeningSubframePattern ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LoggingInterval( uint8_t * eLoggingInterval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LoggingDuration( uint8_t * eLoggingDuration,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LoggedMDT( SI_S1AP_DT_LoggedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MBSFN_ResultToLog( SI_S1AP_DT_MBSFN_ResultToLog ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LoggedMBSFNMDT( SI_S1AP_DT_LoggedMBSFNMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LoggedMDTTrigger( SI_S1AP_DT_LoggedMDTTrigger ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LTE_M_Indication( uint8_t * eLTE_M_Indication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TACList_In_LTE_NTN( SI_S1AP_DT_TACList_In_LTE_NTN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_LTE_NTN_TAI_Information( SI_S1AP_DT_LTE_NTN_TAI_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M3period( uint8_t * eM3period,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M3Configuration( SI_S1AP_DT_M3Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M4period( uint8_t * eM4period,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M4Configuration( SI_S1AP_DT_M4Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M4ReportAmountMDT( uint8_t * eM4ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M5period( uint8_t * eM5period,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M5Configuration( SI_S1AP_DT_M5Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M5ReportAmountMDT( uint8_t * eM5ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M6report_Interval( uint8_t * eM6report_Interval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M6delay_threshold( uint8_t * eM6delay_threshold,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M6Configuration( SI_S1AP_DT_M6Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M6ReportAmountMDT( uint8_t * eM6ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M7period( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M7Configuration( SI_S1AP_DT_M7Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_M7ReportAmountMDT( uint8_t * eM7ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MDT_Activation( uint8_t * eMDT_Activation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MDT_Location_Info( SI_S1AP_DT_MDT_Location_Info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->MDTMode-ExtensionIE<- Got NULL L:7716

// DHS-ADT=0  DT=1 Container L:4014
int __si_s1ap_Decode_MDTMode_Extension( SI_S1AP_DT_MDTMode_Extension ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MDTMode( SI_S1AP_DT_MDTMode ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MDT_Configuration( SI_S1AP_DT_MDT_Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ManagementBasedMDTAllowed( uint8_t * eManagementBasedMDTAllowed,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MBSFNResultToLogInfo_mBSFN_AreaId( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MBSFN_ResultToLogInfo( SI_S1AP_DT_MBSFN_ResultToLogInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MDTPLMNList( SI_S1AP_DT_MDTPLMNList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PrivacyIndicator( uint8_t * ePrivacyIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MessageIdentifier( SI_S1AP_DT_MessageIdentifier ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MobilityInformation( SI_S1AP_DT_MobilityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MMEname( SI_S1AP_DT_MMEname ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MMEPagingTarget( SI_S1AP_DT_MMEPagingTarget ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MMERelaySupportIndicator( uint8_t * eMMERelaySupportIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MME_UE_S1AP_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MSClassmark2( SI_S1AP_DT_MSClassmark2 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MutingAvailabilityIndication( uint8_t * eMutingAvailabilityIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MutingPatternInformation_muting_pattern_period( uint8_t * eMutingPatternInformation_muting_pattern_period,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MutingPatternInformation_muting_pattern_offset( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MutingPatternInformation( SI_S1AP_DT_MutingPatternInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_MDT_ConfigurationNR( SI_S1AP_DT_MDT_ConfigurationNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NAS_PDU( SI_S1AP_DT_NAS_PDU ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NASSecurityParametersfromE_UTRAN( SI_S1AP_DT_NASSecurityParametersfromE_UTRAN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NASSecurityParameterstoE_UTRAN( SI_S1AP_DT_NASSecurityParameterstoE_UTRAN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NB_IoT_DefaultPagingDRX( uint8_t * eNB_IoT_DefaultPagingDRX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NB_IoT_PagingDRX( uint8_t * eNB_IoT_PagingDRX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NB_IoT_Paging_eDRX_Cycle( uint8_t * eNB_IoT_Paging_eDRX_Cycle,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NB_IoT_PagingTimeWindow( uint8_t * eNB_IoT_PagingTimeWindow,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NB_IoT_Paging_eDRXInformation( SI_S1AP_DT_NB_IoT_Paging_eDRXInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NB_IoT_RLF_Report_Container( SI_S1AP_DT_NB_IoT_RLF_Report_Container ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NB_IoT_UEIdentityIndexValue( SI_S1AP_DT_NB_IoT_UEIdentityIndexValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NotifySourceeNB( uint8_t * eNotifySourceeNB,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NRencryptionAlgorithms( SI_S1AP_DT_NRencryptionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NRrestrictioninEPSasSecondaryRAT( uint8_t * eNRrestrictioninEPSasSecondaryRAT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NRrestrictionin5GS( uint8_t * eNRrestrictionin5GS,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->NRintegrityProtectionAlgorithms<- Got NULL L:7716

int __si_s1ap_Decode_NRUESecurityCapabilities( SI_S1AP_DT_NRUESecurityCapabilities ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NumberofBroadcastRequest( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_VehicleUE( uint8_t * eVehicleUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PedestrianUE( uint8_t * ePedestrianUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NRV2XServicesAuthorized( SI_S1AP_DT_NRV2XServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_NRUESidelinkAggregateMaximumBitrate( SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_OldBSS_ToNewBSS_Information( SI_S1AP_DT_OldBSS_ToNewBSS_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_OverloadAction( uint8_t * eOverloadAction,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_OverloadResponse( SI_S1AP_DT_OverloadResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Packet_LossRate( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Paging_eDRX_Cycle( uint8_t * ePaging_eDRX_Cycle,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PagingTimeWindow( uint8_t * ePagingTimeWindow,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Paging_eDRXInformation( SI_S1AP_DT_Paging_eDRXInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PagingDRX( uint8_t * ePagingDRX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PagingPriority( uint8_t * ePagingPriority,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PagingProbabilityInformation( uint8_t * ePagingProbabilityInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PagingCause( uint8_t * ePagingCause,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PC5QoSFlowList( SI_S1AP_DT_PC5QoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PC5QoSParameters( SI_S1AP_DT_PC5QoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PC5FlowBitRates( SI_S1AP_DT_PC5FlowBitRates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Range( uint8_t * eRange,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PC5QoSFlowItem( SI_S1AP_DT_PC5QoSFlowItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PendingDataIndication( uint8_t * ePendingDataIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Port_Number( SI_S1AP_DT_Port_Number ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ProSeDirectDiscovery( uint8_t * eProSeDirectDiscovery,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ProSeDirectCommunication( uint8_t * eProSeDirectCommunication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ProSeAuthorized( SI_S1AP_DT_ProSeAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ProSeUEtoNetworkRelaying( uint8_t * eProSeUEtoNetworkRelaying,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_PS_ServiceNotAvailable( uint8_t * ePS_ServiceNotAvailable,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RACSIndication( uint8_t * eRACSIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ReceiveStatusOfULPDCPSDUsExtended( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsExtended ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18( SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RecommendedCellItem_timeStayedInCell( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RecommendedCellItem( SI_S1AP_DT_RecommendedCellItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RecommendedENBItem( SI_S1AP_DT_RecommendedENBItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RelayNode_Indicator( uint8_t * eRelayNode_Indicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RAT_Restrictions( SI_S1AP_DT_RAT_Restrictions ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RATRestrictionsItem_rAT_RestrictionInformation( SI_S1AP_DT_RATRestrictionsItem_rAT_RestrictionInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RAT_RestrictionsItem( SI_S1AP_DT_RAT_RestrictionsItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RAT_Type( uint8_t * eRAT_Type,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ReportArea( uint8_t * eReportArea,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RequestType( SI_S1AP_DT_RequestType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RequestTypeAdditionalInfo( uint8_t * eRequestTypeAdditionalInfo,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RIMInformation( SI_S1AP_DT_RIMInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RNC_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TargetRNC_ID( SI_S1AP_DT_TargetRNC_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RIMRoutingAddress_eHRPD_Sector_ID( SI_S1AP_DT_RIMRoutingAddress_eHRPD_Sector_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RIMRoutingAddress( SI_S1AP_DT_RIMRoutingAddress ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RIMTransfer( SI_S1AP_DT_RIMTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RepetitionPeriod( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_RLF_Report_Container( SI_S1AP_DT_UE_RLF_Report_Container ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_RLF_Report_Container_for_extended_bands( SI_S1AP_DT_UE_RLF_Report_Container_for_extended_bands ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RLFReportInformation( SI_S1AP_DT_RLFReportInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RRC_Container( SI_S1AP_DT_RRC_Container ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_RRC_Establishment_Cause( uint8_t * eRRC_Establishment_Cause,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ECGIListForRestart( SI_S1AP_DT_ECGIListForRestart ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Routing_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SecurityKey( SI_S1AP_DT_SecurityKey ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SecurityContext_nextHopChainingCount( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SecurityContext( SI_S1AP_DT_SecurityContext ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SecondaryRATType( uint8_t * eSecondaryRATType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SecondaryRATDataUsageRequest( uint8_t * eSecondaryRATDataUsageRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SecondaryRATDataUsageReportList( SI_S1AP_DT_SecondaryRATDataUsageReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SecondaryRATDataUsageReportItem( SI_S1AP_DT_SecondaryRATDataUsageReportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SecurityIndication( SI_S1AP_DT_SecurityIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SensorMeasConfig( uint8_t * eSensorMeasConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SensorNameConfig_uncompensatedBarometricConfig( uint8_t * eSensorNameConfig_uncompensatedBarometricConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SensorNameConfig( SI_S1AP_DT_SensorNameConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SensorMeasConfigNameItem( SI_S1AP_DT_SensorMeasConfigNameItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SensorMeasConfigNameList( SI_S1AP_DT_SensorMeasConfigNameList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SensorMeasurementConfiguration( SI_S1AP_DT_SensorMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SerialNumber( SI_S1AP_DT_SerialNumber ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ServiceType( uint8_t * eServiceType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SONInformationReport( SI_S1AP_DT_SONInformationReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TargeteNB_ID( SI_S1AP_DT_TargeteNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SourceeNB_ID( SI_S1AP_DT_SourceeNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SONConfigurationTransfer( SI_S1AP_DT_SONConfigurationTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_StratumLevel( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SynchronisationInformation( SI_S1AP_DT_SynchronisationInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Source_ToTarget_TransparentContainer( SI_S1AP_DT_Source_ToTarget_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SourceBSS_ToTargetBSS_TransparentContainer( SI_S1AP_DT_SourceBSS_ToTargetBSS_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SRVCCOperationNotPossible( uint8_t * eSRVCCOperationNotPossible,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SRVCCOperationPossible( uint8_t * eSRVCCOperationPossible,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SRVCCHOIndication( uint8_t * eSRVCCHOIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SourceNgRanNode_ID( SI_S1AP_DT_SourceNgRanNode_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->SourceNodeID-ExtensionIE<- Got NULL L:7716

// DHS-ADT=0  DT=1 Container L:4014
int __si_s1ap_Decode_SourceNodeID_Extension( SI_S1AP_DT_SourceNodeID_Extension ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SourceNodeID( SI_S1AP_DT_SourceNodeID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SubscriberProfileIDforRFP( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_HistoryInformation( SI_S1AP_DT_UE_HistoryInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SourceeNB_ToTargeteNB_TransparentContainer( SI_S1AP_DT_SourceeNB_ToTargeteNB_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SourceRNC_ToTargetRNC_TransparentContainer( SI_S1AP_DT_SourceRNC_ToTargetRNC_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer( SI_S1AP_DT_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ServedGUMMEIs( SI_S1AP_DT_ServedGUMMEIs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ServedPLMNs( SI_S1AP_DT_ServedPLMNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ServedGroupIDs( SI_S1AP_DT_ServedGroupIDs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ServedMMECs( SI_S1AP_DT_ServedMMECs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ServedGUMMEIsItem( SI_S1AP_DT_ServedGUMMEIsItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator( uint8_t * eSubscriptionBasedUEDifferentiationInfo_periodicCommunicationIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SubscriptionBasedUEDifferentiationInfo_periodicTime( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SubscriptionBasedUEDifferentiationInfo_stationaryIndication( uint8_t * eSubscriptionBasedUEDifferentiationInfo_stationaryIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SubscriptionBasedUEDifferentiationInfo_trafficProfile( uint8_t * eSubscriptionBasedUEDifferentiationInfo_trafficProfile,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SubscriptionBasedUEDifferentiationInfo_batteryIndication( uint8_t * eSubscriptionBasedUEDifferentiationInfo_batteryIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ScheduledCommunicationTime_dayofWeek( SI_S1AP_DT_ScheduledCommunicationTime_dayofWeek ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ScheduledCommunicationTime_timeofDayStart( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ScheduledCommunicationTime_timeofDayEnd( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ScheduledCommunicationTime( SI_S1AP_DT_ScheduledCommunicationTime ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Subscription_Based_UE_DifferentiationInfo( SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SupportedTAs_Item( SI_S1AP_DT_SupportedTAs_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_SynchronisationStatus( uint8_t * eSynchronisationStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TimeSynchronisationInfo( SI_S1AP_DT_TimeSynchronisationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_S_TMSI( SI_S1AP_DT_S_TMSI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAIListforWarning( SI_S1AP_DT_TAIListforWarning ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CompletedCellinTAI( SI_S1AP_DT_CompletedCellinTAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAI_Broadcast_Item( SI_S1AP_DT_TAI_Broadcast_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAI_Cancelled_Item( SI_S1AP_DT_TAI_Cancelled_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CompletedCellinTAI_Item( SI_S1AP_DT_CompletedCellinTAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TBCD_STRING( SI_S1AP_DT_TBCD_STRING ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TargetNgRanNode_ID( SI_S1AP_DT_TargetNgRanNode_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TargetID( SI_S1AP_DT_TargetID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TargeteNB_ToSourceeNB_TransparentContainer( SI_S1AP_DT_TargeteNB_ToSourceeNB_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Target_ToSource_TransparentContainer( SI_S1AP_DT_Target_ToSource_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TargetRNC_ToSourceRNC_TransparentContainer( SI_S1AP_DT_TargetRNC_ToSourceRNC_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TargetBSS_ToSourceBSS_TransparentContainer( SI_S1AP_DT_TargetBSS_ToSourceBSS_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer( SI_S1AP_DT_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_HandoverWindowStart( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_HandoverWindowDuration( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TimeBasedHandoverInformation( SI_S1AP_DT_TimeBasedHandoverInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TimeToWait( uint8_t * eTimeToWait,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Time_UE_StayedInCell_EnhancedGranularity( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TimeSinceSecondaryNodeRelease( SI_S1AP_DT_TimeSinceSecondaryNodeRelease ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TransportLayerAddress( SI_S1AP_DT_TransportLayerAddress ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TransportInformation( SI_S1AP_DT_TransportInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_UTRAN_Trace_ID( SI_S1AP_DT_E_UTRAN_Trace_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TraceDepth( uint8_t * eTraceDepth,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TraceActivation( SI_S1AP_DT_TraceActivation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TrafficLoadReductionIndication( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TunnelInformation( SI_S1AP_DT_TunnelInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAIListForRestart( SI_S1AP_DT_TAIListForRestart ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UEAggregateMaximumBitrate( SI_S1AP_DT_UEAggregateMaximumBitrate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UEAppLayerMeasConfig_containerForAppLayerMeasConfig( SI_S1AP_DT_UEAppLayerMeasConfig_containerForAppLayerMeasConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UEAppLayerMeasConfig( SI_S1AP_DT_UEAppLayerMeasConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UECapabilityInfoRequest( uint8_t * eUECapabilityInfoRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_RetentionInformation( uint8_t * eUE_RetentionInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_S1AP_ID_pair( SI_S1AP_DT_UE_S1AP_ID_pair ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_S1AP_IDs( SI_S1AP_DT_UE_S1AP_IDs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{UE-associatedLogicalS1-ConnectionItemExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_UE_associatedLogicalS1_ConnectionItem( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UEIdentityIndexValue( SI_S1AP_DT_UEIdentityIndexValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_HistoryInformationFromTheUE( SI_S1AP_DT_UE_HistoryInformationFromTheUE ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UEPagingID( SI_S1AP_DT_UEPagingID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UERadioCapability( SI_S1AP_DT_UERadioCapability ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UERadioCapabilityForPaging( SI_S1AP_DT_UERadioCapabilityForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UERadioCapabilityID( SI_S1AP_DT_UERadioCapabilityID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UESecurityCapabilities( SI_S1AP_DT_UESecurityCapabilities ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UESidelinkAggregateMaximumBitrate( SI_S1AP_DT_UESidelinkAggregateMaximumBitrate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_Usage_Type( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UL_NAS_MAC( SI_S1AP_DT_UL_NAS_MAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UL_NAS_Count( SI_S1AP_DT_UL_NAS_Count ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UL_CP_SecurityInformation( SI_S1AP_DT_UL_CP_SecurityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UnlicensedSpectrumRestriction( uint8_t * eUnlicensedSpectrumRestriction,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_URI_Address( SI_S1AP_DT_URI_Address ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UserLocationInformation( SI_S1AP_DT_UserLocationInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UEUserPlaneCIoTSupportIndicator( uint8_t * eUEUserPlaneCIoTSupportIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_Application_Layer_Measurement_Capability( SI_S1AP_DT_UE_Application_Layer_Measurement_Capability ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_VoiceSupportMatchIndicator( uint8_t * eVoiceSupportMatchIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_V2XServicesAuthorized( SI_S1AP_DT_V2XServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WarningAreaCoordinates( SI_S1AP_DT_WarningAreaCoordinates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WarningAreaList( SI_S1AP_DT_WarningAreaList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WarningType( SI_S1AP_DT_WarningType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WarningSecurityInfo( SI_S1AP_DT_WarningSecurityInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WarningMessageContents( SI_S1AP_DT_WarningMessageContents ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WLANMeasurementConfiguration_wlan_rssi( uint8_t * eWLANMeasurementConfiguration_wlan_rssi,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WLANMeasurementConfiguration_wlan_rtt( uint8_t * eWLANMeasurementConfiguration_wlan_rtt,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WLANMeasConfig( uint8_t * eWLANMeasConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WLANMeasConfigNameList( SI_S1AP_DT_WLANMeasConfigNameList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WLANMeasurementConfiguration( SI_S1AP_DT_WLANMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WLANName( SI_S1AP_DT_WLANName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_WUS_Assistance_Information( SI_S1AP_DT_WUS_Assistance_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBX2ExtTLAs( SI_S1AP_DT_ENBX2ExtTLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBX2GTPTLAs( SI_S1AP_DT_ENBX2GTPTLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBX2ExtTLA( SI_S1AP_DT_ENBX2ExtTLA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ENBIndirectX2TransportLayerAddresses( SI_S1AP_DT_ENBIndirectX2TransportLayerAddresses ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ResetAll( uint8_t * eResetAll,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_associatedLogicalS1_ConnectionListRes( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_ResetType( SI_S1AP_DT_ResetType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_Inter_SystemInformationTransferType( SI_S1AP_DT_Inter_SystemInformationTransferType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABDataForwardingItem( SI_S1AP_DT_E_RABDataForwardingItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABToBeSetupItemHOReq( SI_S1AP_DT_E_RABToBeSetupItemHOReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABAdmittedItem( SI_S1AP_DT_E_RABAdmittedItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABFailedToSetupItemHOReqAckExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_E_RABFailedToSetupItemHOReqAck( SI_S1AP_DT_E_RABFailedToSetupItemHOReqAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABToBeSwitchedDLItem( SI_S1AP_DT_E_RABToBeSwitchedDLItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABToBeSwitchedULItem( SI_S1AP_DT_E_RABToBeSwitchedULItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABToBeUpdatedItem( SI_S1AP_DT_E_RABToBeUpdatedItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABToBeSetupListBearerSUReq( SI_S1AP_DT_E_RABToBeSetupListBearerSUReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABToBeSetupItemBearerSUReqExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_E_RABToBeSetupItemBearerSUReq( SI_S1AP_DT_E_RABToBeSetupItemBearerSUReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABSetupListBearerSURes( SI_S1AP_DT_E_RABSetupListBearerSURes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABSetupItemBearerSUResExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_E_RABSetupItemBearerSURes( SI_S1AP_DT_E_RABSetupItemBearerSURes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABToBeModifiedListBearerModReq( SI_S1AP_DT_E_RABToBeModifiedListBearerModReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABToBeModifyItemBearerModReqExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_E_RABToBeModifiedItemBearerModReq( SI_S1AP_DT_E_RABToBeModifiedItemBearerModReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABModifyListBearerModRes( SI_S1AP_DT_E_RABModifyListBearerModRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABModifyItemBearerModResExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_E_RABModifyItemBearerModRes( SI_S1AP_DT_E_RABModifyItemBearerModRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABReleaseListBearerRelComp( SI_S1AP_DT_E_RABReleaseListBearerRelComp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABReleaseItemBearerRelCompExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_E_RABReleaseItemBearerRelComp( SI_S1AP_DT_E_RABReleaseItemBearerRelComp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABToBeSetupListCtxtSUReq( SI_S1AP_DT_E_RABToBeSetupListCtxtSUReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABToBeSetupItemCtxtSUReqExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_E_RABToBeSetupItemCtxtSUReq( SI_S1AP_DT_E_RABToBeSetupItemCtxtSUReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABSetupListCtxtSURes( SI_S1AP_DT_E_RABSetupListCtxtSURes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABSetupItemCtxtSUResExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_E_RABSetupItemCtxtSURes( SI_S1AP_DT_E_RABSetupItemCtxtSURes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_TAIList( SI_S1AP_DT_TAIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{TAIItemExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_TAIItem( SI_S1AP_DT_TAIItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_UE_associatedLogicalS1_ConnectionListResAck( SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListResAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABToBeModifiedItemBearerModInd( SI_S1AP_DT_E_RABToBeModifiedItemBearerModInd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABNotToBeModifiedItemBearerModInd( SI_S1AP_DT_E_RABNotToBeModifiedItemBearerModInd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_CSGMembershipInfo( SI_S1AP_DT_CSGMembershipInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABModifyListBearerModConf( SI_S1AP_DT_E_RABModifyListBearerModConf ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{E-RABModifyItemBearerModConfExtIEs}}<- Got NULL L:7716

int __si_s1ap_Decode_E_RABModifyItemBearerModConf( SI_S1AP_DT_E_RABModifyItemBearerModConf ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABFailedToResumeItemResumeReq( SI_S1AP_DT_E_RABFailedToResumeItemResumeReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_E_RABFailedToResumeItemResumeRes( SI_S1AP_DT_E_RABFailedToResumeItemResumeRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_Decode_DefaultOctetString( SI_S1AP_DT_DefaultOctetString ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

// PDU-Message Dependencies List = 310
// dlist -> 1 - Additional-GUTI-ExtIEs
// dlist -> 2 - AllocationAndRetentionPriority-ExtIEs
// dlist -> 3 - InformationForCECapableUEs-ExtIEs
// dlist -> 4 - AssistanceDataForPaging-ExtIEs
// dlist -> 5 - AssistanceDataForRecommendedCells-ExtIEs
// dlist -> 6 - Bearers-SubjectToStatusTransfer-ItemIEs
// dlist -> 7 - Bearers-SubjectToStatusTransfer-ItemExtIEs
// dlist -> 8 - Bearers-SubjectToEarlyStatusTransfer-ItemIEs
// dlist -> 9 - Bearers-SubjectToEarlyStatusTransfer-ItemExtIEs
// dlist -> 10 - Bearers-SubjectToDLDiscarding-ItemIEs
// dlist -> 11 - Bearers-SubjectToDLDiscarding-ItemExtIEs
// dlist -> 12 - BluetoothMeasurementConfiguration-ExtIEs
// dlist -> 13 - CancelledCellinEAI-Item-ExtIEs
// dlist -> 14 - CancelledCellinTAI-Item-ExtIEs
// dlist -> 15 - CellIdentifierAndCELevelForCECapableUEs-ExtIEs
// dlist -> 16 - CellID-Broadcast-Item-ExtIEs
// dlist -> 17 - CellID-Cancelled-Item-ExtIEs
// dlist -> 18 - CellBasedMDT-ExtIEs
// dlist -> 19 - CellBasedQMC-ExtIEs
// dlist -> 20 - Cdma2000OneXSRVCCInfo-ExtIEs
// dlist -> 21 - CellType-ExtIEs
// dlist -> 22 - CGI-ExtIEs
// dlist -> 23 - CNTypeRestrictions-Item-ExtIEs
// dlist -> 24 - ConnectedengNBItem-ExtIEs
// dlist -> 25 - ContextatSource-ExtIEs
// dlist -> 26 - CSG-IdList-Item-ExtIEs
// dlist -> 27 - COUNTvalue-ExtIEs
// dlist -> 28 - COUNTValueExtended-ExtIEs
// dlist -> 29 - COUNTvaluePDCP-SNlength18-ExtIEs
// dlist -> 30 - CriticalityDiagnostics-ExtIEs
// dlist -> 31 - CriticalityDiagnostics-IE-Item-ExtIEs
// dlist -> 32 - DAPSRequestInfo-ExtIEs
// dlist -> 33 - DAPSResponseInfoItem-ExtIEs
// dlist -> 34 - DAPSResponseInfo-ExtIEs
// dlist -> 35 - ServedDCNsItem-ExtIEs
// dlist -> 36 - DL-CP-SecurityInformation-ExtIEs
// dlist -> 37 - EmergencyAreaID-Broadcast-Item-ExtIEs
// dlist -> 38 - EmergencyAreaID-Cancelled-Item-ExtIEs
// dlist -> 39 - CompletedCellinEAI-Item-ExtIEs
// dlist -> 40 - ENB-EarlyStatusTransfer-TransparentContainer-ExtIEs
// dlist -> 41 - GERAN-Cell-ID-ExtIEs
// dlist -> 42 - GlobalENB-ID-ExtIEs
// dlist -> 43 - Global-en-gNB-ID-ExtIEs
// dlist -> 44 - ENB-StatusTransfer-TransparentContainer-ExtIEs
// dlist -> 45 - EN-DCSONConfigurationTransfer-ExtIEs
// dlist -> 46 - EN-DCTransferTypeRequest-ExtIEs
// dlist -> 47 - EN-DCTransferTypeReply-ExtIEs
// dlist -> 48 - EN-DCSONeNBIdentification-ExtIEs
// dlist -> 49 - EN-DCSONengNBIdentification-ExtIEs
// dlist -> 50 - E-RABInformationListItem-ExtIEs
// dlist -> 51 - E-RABItemIEs
// dlist -> 52 - E-RABItem-ExtIEs
// dlist -> 53 - E-RABSecurityResultItem-ExtIEs
// dlist -> 54 - E-RABUsageReportItemIEs
// dlist -> 55 - E-RABUsageReportItem-ExtIEs
// dlist -> 56 - E-RABQoSParameters-ExtIEs
// dlist -> 57 - EUTRAN-CGI-ExtIEs
// dlist -> 58 - EventL1LoggedMDTConfig-ExtIEs
// dlist -> 59 - EventTrigger-ExtIEs
// dlist -> 60 - ExpectedUEBehaviour-ExtIEs
// dlist -> 61 - ExpectedUEActivityBehaviour-ExtIEs
// dlist -> 62 - FiveGSTAI-ExtIEs
// dlist -> 63 - ForbiddenTAs-Item-ExtIEs
// dlist -> 64 - ForbiddenLAs-Item-ExtIEs
// dlist -> 65 - GBR-QosInformation-ExtIEs
// dlist -> 66 - GUMMEI-ExtIEs
// dlist -> 67 - HandoverRestrictionList-ExtIEs
// dlist -> 68 - ImmediateMDT-ExtIEs
// dlist -> 69 - InformationOnRecommendedCellsAndENBsForPaging-ExtIEs
// dlist -> 70 - IntersystemMeasurementConfiguration-ExtIEs
// dlist -> 71 - InterSystemMeasurementParameters-ExtIEs
// dlist -> 72 - InterSystemMeasurementItem-ExtIEs
// dlist -> 73 - LAI-ExtIEs
// dlist -> 74 - LastVisitedEUTRANCellInformation-ExtIEs
// dlist -> 75 - LastVisitedPSCellInformation-ExtIEs
// dlist -> 76 - ListeningSubframePattern-ExtIEs
// dlist -> 77 - LoggedMDT-ExtIEs
// dlist -> 78 - LoggedMBSFNMDT-ExtIEs
// dlist -> 79 - LTE-NTN-TAI-Information-ExtIEs
// dlist -> 80 - M3Configuration-ExtIEs
// dlist -> 81 - M4Configuration-ExtIEs
// dlist -> 82 - M5Configuration-ExtIEs
// dlist -> 83 - M6Configuration-ExtIEs
// dlist -> 84 - M7Configuration-ExtIEs
// dlist -> 85 - MDT-Configuration-ExtIEs
// dlist -> 86 - MBSFN-ResultToLogInfo-ExtIEs
// dlist -> 87 - MDTMode-ExtensionIE
// dlist -> 88 - MeasurementThresholdL1LoggedMDT-ExtIEs
// dlist -> 89 - MutingPatternInformation-ExtIEs
// dlist -> 90 - NB-IoT-Paging-eDRXInformation-ExtIEs
// dlist -> 91 - NR-CGI-ExtIEs
// dlist -> 92 - NRUESecurityCapabilities-ExtIEs
// dlist -> 93 - NRV2XServicesAuthorized-ExtIEs
// dlist -> 94 - NRUESidelinkAggregateMaximumBitrate-ExtIEs
// dlist -> 95 - PagingAttemptInformation-ExtIEs
// dlist -> 96 - Paging-eDRXInformation-ExtIEs
// dlist -> 97 - PC5QoSParameters-ExtIEs
// dlist -> 98 - PC5QoSFlowItem-ExtIEs
// dlist -> 99 - PC5FlowBitRates-ExtIEs
// dlist -> 100 - M1PeriodicReporting-ExtIEs
// dlist -> 101 - PLMNAreaBasedQMC-ExtIEs
// dlist -> 102 - ProSeAuthorized-ExtIEs
// dlist -> 103 - PSCellInformation-ExtIEs
// dlist -> 104 - RecommendedCellsForPaging-ExtIEs
// dlist -> 105 - RecommendedCellItemIEs
// dlist -> 106 - RecommendedCellsForPagingItem-ExtIEs
// dlist -> 107 - RecommendedENBsForPaging-ExtIEs
// dlist -> 108 - RecommendedENBItemIEs
// dlist -> 109 - RecommendedENBItem-ExtIEs
// dlist -> 110 - RAT-RestrictionsItem-ExtIEs
// dlist -> 111 - RequestType-ExtIEs
// dlist -> 112 - RIMTransfer-ExtIEs
// dlist -> 113 - RLFReportInformation-ExtIEs
// dlist -> 114 - SecurityContext-ExtIEs
// dlist -> 115 - SecondaryRATDataUsageReportItemIEs
// dlist -> 116 - SecondaryRATDataUsageReportItem-ExtIEs
// dlist -> 117 - SecurityIndication-ExtIEs
// dlist -> 118 - SecurityResult-ExtIEs
// dlist -> 119 - SensorMeasConfigNameItem-ExtIEs
// dlist -> 120 - SensorMeasurementConfiguration-ExtIEs
// dlist -> 121 - SensorNameConfig-ExtIEs
// dlist -> 122 - SONInformation-ExtensionIE
// dlist -> 123 - SONInformationReply-ExtIEs
// dlist -> 124 - SONConfigurationTransfer-ExtIEs
// dlist -> 125 - SynchronisationInformation-ExtIEs
// dlist -> 126 - SourceeNB-ID-ExtIEs
// dlist -> 127 - SourceNodeID-ExtensionIE
// dlist -> 128 - SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs
// dlist -> 129 - SourceNgRanNode-ID-ExtIEs
// dlist -> 130 - ServedGUMMEIsItem-ExtIEs
// dlist -> 131 - Subscription-Based-UE-DifferentiationInfo-ExtIEs
// dlist -> 132 - ScheduledCommunicationTime-ExtIEs
// dlist -> 133 - SupportedTAs-Item-ExtIEs
// dlist -> 134 - TimeSynchronisationInfo-ExtIEs
// dlist -> 135 - S-TMSI-ExtIEs
// dlist -> 136 - TAIBasedMDT-ExtIEs
// dlist -> 137 - TAI-ExtIEs
// dlist -> 138 - TAI-Broadcast-Item-ExtIEs
// dlist -> 139 - TAI-Cancelled-Item-ExtIEs
// dlist -> 140 - TABasedMDT-ExtIEs
// dlist -> 141 - TABasedQMC-ExtIEs
// dlist -> 142 - TAIBasedQMC-ExtIEs
// dlist -> 143 - CompletedCellinTAI-Item-ExtIEs
// dlist -> 144 - TargeteNB-ID-ExtIEs
// dlist -> 145 - TargetRNC-ID-ExtIEs
// dlist -> 146 - TargetNgRanNode-ID-ExtIEs
// dlist -> 147 - GNB-ExtIEs
// dlist -> 148 - Global-GNB-ID-ExtIEs
// dlist -> 149 - NG-eNB-ExtIEs
// dlist -> 150 - TargeteNB-ToSourceeNB-TransparentContainer-ExtIEs
// dlist -> 151 - M1ThresholdEventA2-ExtIEs
// dlist -> 152 - TimeBasedHandoverInformation-ExtIEs
// dlist -> 153 - TraceActivation-ExtIEs
// dlist -> 154 - Tunnel-Information-ExtIEs
// dlist -> 155 - UEAggregate-MaximumBitrates-ExtIEs
// dlist -> 156 - UEAppLayerMeasConfig-ExtIEs
// dlist -> 157 - UE-S1AP-ID-pair-ExtIEs
// dlist -> 158 - UE-associatedLogicalS1-ConnectionItemExtIEs
// dlist -> 159 - UESecurityCapabilities-ExtIEs
// dlist -> 160 - UE-Sidelink-Aggregate-MaximumBitrates-ExtIEs
// dlist -> 161 - UL-CP-SecurityInformation-ExtIEs
// dlist -> 162 - UserLocationInformation-ExtIEs
// dlist -> 163 - V2XServicesAuthorized-ExtIEs
// dlist -> 164 - WLANMeasurementConfiguration-ExtIEs
// dlist -> 165 - WUS-Assistance-Information-ExtIEs
// dlist -> 166 - X2TNLConfigurationInfo-ExtIEs
// dlist -> 167 - ENBX2ExtTLA-ExtIEs
// dlist -> 168 - MSClassmark3
// dlist -> 169 - HandoverRequired
// dlist -> 170 - E-RABSubjecttoDataForwardingList
// dlist -> 171 - HandoverCommand
// dlist -> 172 - HandoverPreparationFailure
// dlist -> 173 - E-RABToBeSetupListHOReq
// dlist -> 174 - HandoverRequest
// dlist -> 175 - E-RABAdmittedList
// dlist -> 176 - E-RABFailedtoSetupListHOReqAck
// dlist -> 177 - HandoverRequestAcknowledge
// dlist -> 178 - HandoverFailure
// dlist -> 179 - HandoverNotify
// dlist -> 180 - E-RABToBeSwitchedDLList
// dlist -> 181 - PathSwitchRequest
// dlist -> 182 - E-RABToBeSwitchedULList
// dlist -> 183 - E-RABToBeUpdatedList
// dlist -> 184 - PathSwitchRequestAcknowledge
// dlist -> 185 - PathSwitchRequestFailure
// dlist -> 186 - HandoverCancel
// dlist -> 187 - HandoverCancelAcknowledge
// dlist -> 188 - HandoverSuccess
// dlist -> 189 - ENBEarlyStatusTransfer
// dlist -> 190 - MMEEarlyStatusTransfer
// dlist -> 191 - E-RABSetupRequest
// dlist -> 192 - E-RABSetupResponse
// dlist -> 193 - E-RABModifyRequest
// dlist -> 194 - E-RABModifyResponse
// dlist -> 195 - E-RABReleaseCommand
// dlist -> 196 - E-RABReleaseResponse
// dlist -> 197 - E-RABReleaseIndication
// dlist -> 198 - InitialContextSetupRequest
// dlist -> 199 - InitialContextSetupResponse
// dlist -> 200 - InitialContextSetupFailure
// dlist -> 201 - Paging
// dlist -> 202 - UEContextReleaseRequest
// dlist -> 203 - UEContextReleaseCommand
// dlist -> 204 - UEContextReleaseComplete
// dlist -> 205 - UEContextModificationRequest
// dlist -> 206 - UEContextModificationResponse
// dlist -> 207 - UEContextModificationFailure
// dlist -> 208 - UERadioCapabilityMatchRequest
// dlist -> 209 - UERadioCapabilityMatchResponse
// dlist -> 210 - DownlinkNASTransport
// dlist -> 211 - InitialUEMessage
// dlist -> 212 - UplinkNASTransport
// dlist -> 213 - NASNonDeliveryIndication
// dlist -> 214 - OCTET
// dlist -> 215 - RerouteNASRequest
// dlist -> 216 - NASDeliveryIndication
// dlist -> 217 - Reset
// dlist -> 218 - ResetAcknowledge
// dlist -> 219 - ErrorIndication
// dlist -> 220 - S1SetupRequest
// dlist -> 221 - S1SetupResponse
// dlist -> 222 - S1SetupFailure
// dlist -> 223 - ENBConfigurationUpdate
// dlist -> 224 - ENBConfigurationUpdateAcknowledge
// dlist -> 225 - ENBConfigurationUpdateFailure
// dlist -> 226 - MMEConfigurationUpdate
// dlist -> 227 - MMEConfigurationUpdateAcknowledge
// dlist -> 228 - MMEConfigurationUpdateFailure
// dlist -> 229 - DownlinkS1cdma2000tunnelling
// dlist -> 230 - UplinkS1cdma2000tunnelling
// dlist -> 231 - UECapabilityInfoIndication
// dlist -> 232 - ENBStatusTransfer
// dlist -> 233 - MMEStatusTransfer
// dlist -> 234 - TraceStart
// dlist -> 235 - TraceFailureIndication
// dlist -> 236 - DeactivateTrace
// dlist -> 237 - CellTrafficTrace
// dlist -> 238 - LocationReportingControl
// dlist -> 239 - LocationReportingFailureIndication
// dlist -> 240 - LocationReport
// dlist -> 241 - OverloadStart
// dlist -> 242 - OverloadStop
// dlist -> 243 - WriteReplaceWarningRequest
// dlist -> 244 - WriteReplaceWarningResponse
// dlist -> 245 - ENBDirectInformationTransfer
// dlist -> 246 - MMEDirectInformationTransfer
// dlist -> 247 - ENBConfigurationTransfer
// dlist -> 248 - MMEConfigurationTransfer
// dlist -> 249 - PrivateMessage
// dlist -> 250 - KillRequest
// dlist -> 251 - KillResponse
// dlist -> 252 - PWSRestartIndication
// dlist -> 253 - PWSFailureIndication
// dlist -> 254 - DownlinkUEAssociatedLPPaTransport
// dlist -> 255 - UplinkUEAssociatedLPPaTransport
// dlist -> 256 - DownlinkNonUEAssociatedLPPaTransport
// dlist -> 257 - UplinkNonUEAssociatedLPPaTransport
// dlist -> 258 - E-RABToBeModifiedListBearerModInd
// dlist -> 259 - E-RABNotToBeModifiedListBearerModInd
// dlist -> 260 - E-RABModificationIndication
// dlist -> 261 - E-RABModificationConfirm
// dlist -> 262 - UEContextModificationIndication
// dlist -> 263 - UEContextModificationConfirm
// dlist -> 264 - UEContextSuspendRequest
// dlist -> 265 - UEContextSuspendResponse
// dlist -> 266 - E-RABFailedToResumeListResumeReq
// dlist -> 267 - UEContextResumeRequest
// dlist -> 268 - E-RABFailedToResumeListResumeRes
// dlist -> 269 - UEContextResumeResponse
// dlist -> 270 - UEContextResumeFailure
// dlist -> 271 - ConnectionEstablishmentIndication
// dlist -> 272 - RetrieveUEInformation
// dlist -> 273 - UEInformationTransfer
// dlist -> 274 - ENBCPRelocationIndication
// dlist -> 275 - MMECPRelocationIndication
// dlist -> 276 - SecondaryRATDataUsageReport
// dlist -> 277 - UERadioCapabilityIDMappingRequest
// dlist -> 278 - UERadioCapabilityIDMappingResponse
// dlist -> 279 - E-RABDataForwardingItem-ExtIEs
// dlist -> 280 - E-RABToBeSetupItemHOReq-ExtIEs
// dlist -> 281 - E-RABAdmittedItem-ExtIEs
// dlist -> 282 - E-RABFailedToSetupItemHOReqAckExtIEs
// dlist -> 283 - E-RABToBeSwitchedDLItem-ExtIEs
// dlist -> 284 - E-RABToBeSwitchedULItem-ExtIEs
// dlist -> 285 - E-RABToBeUpdatedItem-ExtIEs
// dlist -> 286 - E-RABToBeSetupItemBearerSUReqIEs
// dlist -> 287 - E-RABToBeSetupItemBearerSUReqExtIEs
// dlist -> 288 - E-RABSetupItemBearerSUResIEs
// dlist -> 289 - E-RABSetupItemBearerSUResExtIEs
// dlist -> 290 - E-RABToBeModifiedItemBearerModReqIEs
// dlist -> 291 - E-RABToBeModifyItemBearerModReqExtIEs
// dlist -> 292 - E-RABModifyItemBearerModResIEs
// dlist -> 293 - E-RABModifyItemBearerModResExtIEs
// dlist -> 294 - E-RABReleaseItemBearerRelCompIEs
// dlist -> 295 - E-RABReleaseItemBearerRelCompExtIEs
// dlist -> 296 - E-RABToBeSetupItemCtxtSUReqIEs
// dlist -> 297 - E-RABToBeSetupItemCtxtSUReqExtIEs
// dlist -> 298 - E-RABSetupItemCtxtSUResIEs
// dlist -> 299 - E-RABSetupItemCtxtSUResExtIEs
// dlist -> 300 - TAIItemIEs
// dlist -> 301 - TAIItemExtIEs
// dlist -> 302 - UE-associatedLogicalS1-ConnectionItemRes
// dlist -> 303 - UE-associatedLogicalS1-ConnectionItemResAck
// dlist -> 304 - E-RABToBeModifiedItemBearerModInd-ExtIEs
// dlist -> 305 - E-RABNotToBeModifiedItemBearerModInd-ExtIEs
// dlist -> 306 - CSGMembershipInfo-ExtIEs
// dlist -> 307 - E-RABModifyItemBearerModConfIEs
// dlist -> 308 - E-RABModifyItemBearerModConfExtIEs
// dlist -> 309 - E-RABFailedToResumeItemResumeReq-ExtIEs
// dlist -> 310 - E-RABFailedToResumeItemResumeRes-ExtIEs
// ------------------------------------------------------------ 
//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Additional_GUTI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_Additional_GUTI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_AllocationAndRetentionPriority_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_AllocationAndRetentionPriority_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_InformationForCECapableUEs_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_InformationForCECapableUEs_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_AssistanceDataForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_AssistanceDataForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_AssistanceDataForRecommendedCells_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Bearers_SubjectToStatusTransfer_ItemIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Bearers-SubjectToStatusTransfer-Item, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Bearers_SubjectToStatusTransfer_Item * bearersSubjectToStatusTransferItem;
	int bearersSubjectToStatusTransferItem_isset;

	
} SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Bearers_SubjectToStatusTransfer_ItemExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ULCOUNTValueExtended, PRESENCE = optional L:10913
	SI_S1AP_DT_COUNTValueExtended * uLCOUNTValueExtended;
	int uLCOUNTValueExtended_isset;

	// ID = id-DLCOUNTValueExtended, PRESENCE = optional L:10913
	SI_S1AP_DT_COUNTValueExtended * dLCOUNTValueExtended;
	int dLCOUNTValueExtended_isset;

	// ID = id-ReceiveStatusOfULPDCPSDUsExtended, PRESENCE = optional L:10913
	SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsExtended * receiveStatusOfULPDCPSDUsExtended;
	int receiveStatusOfULPDCPSDUsExtended_isset;

	// ID = id-ULCOUNTValuePDCP-SNlength18, PRESENCE = optional L:10913
	SI_S1AP_DT_COUNTvaluePDCP_SNlength18 * uLCOUNTValuePDCPSNlength18;
	int uLCOUNTValuePDCPSNlength18_isset;

	// ID = id-DLCOUNTValuePDCP-SNlength18, PRESENCE = optional L:10913
	SI_S1AP_DT_COUNTvaluePDCP_SNlength18 * dLCOUNTValuePDCPSNlength18;
	int dLCOUNTValuePDCPSNlength18_isset;

	// ID = id-ReceiveStatusOfULPDCPSDUsPDCP-SNlength18, PRESENCE = optional L:10913
	SI_S1AP_DT_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 * receiveStatusOfULPDCPSDUsPDCPSNlength18;
	int receiveStatusOfULPDCPSDUsPDCPSNlength18_isset;

	
} SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Bearers_SubjectToEarlyStatusTransfer_ItemIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Bearers-SubjectToEarlyStatusTransfer-Item, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Bearers_SubjectToEarlyStatusTransfer_Item * bearersSubjectToEarlyStatusTransferItem;
	int bearersSubjectToEarlyStatusTransferItem_isset;

	
} SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Bearers_SubjectToDLDiscarding_ItemIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Bearers-SubjectToDLDiscarding-Item, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Bearers_SubjectToDLDiscarding_Item * bearersSubjectToDLDiscardingItem;
	int bearersSubjectToDLDiscardingItem_isset;

	
} SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Bearers_SubjectToDLDiscarding_ItemExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_BluetoothMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CancelledCellinEAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CancelledCellinEAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CancelledCellinTAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CancelledCellinTAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CellIdentifierAndCELevelForCECapableUEs_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CellID_Broadcast_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CellID_Broadcast_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CellID_Cancelled_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CellID_Cancelled_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CellBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CellBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CellBasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CellBasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Cdma2000OneXSRVCCInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_Cdma2000OneXSRVCCInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CellType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CellType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CGI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CGI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CNTypeRestrictions_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CNTypeRestrictions_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ConnectedengNBItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ConnectedengNBItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ContextatSource_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ContextatSource_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CSG_IdList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CSG_IdList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_COUNTvalue_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_COUNTvalue_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_COUNTValueExtended_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_COUNTValueExtended_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_COUNTvaluePDCP_SNlength18_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_COUNTvaluePDCP_SNlength18_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CriticalityDiagnostics_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CriticalityDiagnostics_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CriticalityDiagnostics_IE_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_DAPSRequestInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_DAPSRequestInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_DAPSResponseInfoItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_DAPSResponseInfoItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_DAPSResponseInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_DAPSResponseInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ServedDCNsItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ServedDCNsItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_DL_CP_SecurityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_DL_CP_SecurityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EmergencyAreaID_Broadcast_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EmergencyAreaID_Cancelled_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CompletedCellinEAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CompletedCellinEAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Bearers-SubjectToDLDiscardingList, PRESENCE = optional L:10913
	SI_S1AP_DT_Bearers_SubjectToDLDiscardingList * bearersSubjectToDLDiscardingList;
	int bearersSubjectToDLDiscardingList_isset;

	
} SI_S1AP_DT_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_GERAN_Cell_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_GERAN_Cell_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_GlobalENB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_GlobalENB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Global_en_gNB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_Global_en_gNB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENB_StatusTransfer_TransparentContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EN_DCSONConfigurationTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EN_DCSONConfigurationTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EN_DCTransferTypeRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EN_DCTransferTypeRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EN_DCTransferTypeReply_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EN_DCTransferTypeReply_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EN_DCSONeNBIdentification_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EN_DCSONeNBIdentification_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EN_DCSONengNBIdentification_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EN_DCSONengNBIdentification_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABInformationListItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DAPSRequestInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_DAPSRequestInfo * dAPSRequestInfo;
	int dAPSRequestInfo_isset;

	// ID = id-SourceTransportLayerAddress, PRESENCE = optional L:10913
	SI_S1AP_DT_TransportLayerAddress * sourceTransportLayerAddress;
	int sourceTransportLayerAddress_isset;

	// ID = id-SecurityIndication, PRESENCE = optional L:10913
	SI_S1AP_DT_SecurityIndication * securityIndication;
	int securityIndication_isset;

	// ID = id-SourceNodeTransportLayerAddress, PRESENCE = optional L:10913
	SI_S1AP_DT_TransportLayerAddress * sourceNodeTransportLayerAddress;
	int sourceNodeTransportLayerAddress_isset;

	
} SI_S1AP_DT_PDU_E_RABInformationListItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABItemIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABItem, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABItem * eRABItem;
	int eRABItem_isset;

	
} SI_S1AP_DT_PDU_E_RABItemIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABSecurityResultItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABSecurityResultItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABUsageReportItemIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABUsageReportItem, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABUsageReportItem * eRABUsageReportItem;
	int eRABUsageReportItem_isset;

	
} SI_S1AP_DT_PDU_E_RABUsageReportItemIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABUsageReportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABUsageReportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABQoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DownlinkPacketLossRate, PRESENCE = optional L:10913
	unsigned long long int downlinkPacketLossRate;
	int downlinkPacketLossRate_isset;

	// ID = id-UplinkPacketLossRate, PRESENCE = optional L:10913
	unsigned long long int uplinkPacketLossRate;
	int uplinkPacketLossRate_isset;

	
} SI_S1AP_DT_PDU_E_RABQoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EUTRAN_CGI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EUTRAN_CGI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EventL1LoggedMDTConfig_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EventL1LoggedMDTConfig_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_EventTrigger_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_EventTrigger_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ExpectedUEBehaviour_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ExpectedUEBehaviour_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ExpectedUEActivityBehaviour_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_FiveGSTAI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_FiveGSTAI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ForbiddenTAs_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ForbiddenTAs_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ForbiddenLAs_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ForbiddenLAs_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_GBR_QosInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-extended-e-RAB-MaximumBitrateDL, PRESENCE = optional L:10913
	unsigned long long int extendedeRABMaximumBitrateDL;
	int extendedeRABMaximumBitrateDL_isset;

	// ID = id-extended-e-RAB-MaximumBitrateUL, PRESENCE = optional L:10913
	unsigned long long int extendedeRABMaximumBitrateUL;
	int extendedeRABMaximumBitrateUL_isset;

	// ID = id-extended-e-RAB-GuaranteedBitrateDL, PRESENCE = optional L:10913
	unsigned long long int extendedeRABGuaranteedBitrateDL;
	int extendedeRABGuaranteedBitrateDL_isset;

	// ID = id-extended-e-RAB-GuaranteedBitrateUL, PRESENCE = optional L:10913
	unsigned long long int extendedeRABGuaranteedBitrateUL;
	int extendedeRABGuaranteedBitrateUL_isset;

	
} SI_S1AP_DT_PDU_GBR_QosInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_GUMMEI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_GUMMEI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverRestrictionList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NRrestrictioninEPSasSecondaryRAT, PRESENCE = optional L:10913
	uint8_t nRrestrictioninEPSasSecondaryRAT;
	int nRrestrictioninEPSasSecondaryRAT_isset;

	// ID = id-UnlicensedSpectrumRestriction, PRESENCE = optional L:10913
	uint8_t unlicensedSpectrumRestriction;
	int unlicensedSpectrumRestriction_isset;

	// ID = id-CNTypeRestrictions, PRESENCE = optional L:10913
	SI_S1AP_DT_CNTypeRestrictions * cNTypeRestrictions;
	int cNTypeRestrictions_isset;

	// ID = id-NRrestrictionin5GS, PRESENCE = optional L:10913
	uint8_t nRrestrictionin5GS;
	int nRrestrictionin5GS_isset;

	// ID = id-LastNG-RANPLMNIdentity, PRESENCE = optional L:10913
	SI_S1AP_DT_PLMNidentity * lastNGRANPLMNIdentity;
	int lastNGRANPLMNIdentity_isset;

	// ID = id-RAT-Restrictions, PRESENCE = optional L:10913
	SI_S1AP_DT_RAT_Restrictions * rATRestrictions;
	int rATRestrictions_isset;

	
} SI_S1AP_DT_PDU_HandoverRestrictionList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ImmediateMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M3Configuration, PRESENCE = conditional L:10913
	SI_S1AP_DT_M3Configuration * m3Configuration;
	int m3Configuration_isset;

	// ID = id-M4Configuration, PRESENCE = conditional L:10913
	SI_S1AP_DT_M4Configuration * m4Configuration;
	int m4Configuration_isset;

	// ID = id-M5Configuration, PRESENCE = conditional L:10913
	SI_S1AP_DT_M5Configuration * m5Configuration;
	int m5Configuration_isset;

	// ID = id-MDT-Location-Info, PRESENCE = optional L:10913
	SI_S1AP_DT_MDT_Location_Info * mDTLocationInfo;
	int mDTLocationInfo_isset;

	// ID = id-M6Configuration, PRESENCE = conditional L:10913
	SI_S1AP_DT_M6Configuration * m6Configuration;
	int m6Configuration_isset;

	// ID = id-M7Configuration, PRESENCE = conditional L:10913
	SI_S1AP_DT_M7Configuration * m7Configuration;
	int m7Configuration_isset;

	// ID = id-BluetoothMeasurementConfiguration, PRESENCE = optional L:10913
	SI_S1AP_DT_BluetoothMeasurementConfiguration * bluetoothMeasurementConfiguration;
	int bluetoothMeasurementConfiguration_isset;

	// ID = id-WLANMeasurementConfiguration, PRESENCE = optional L:10913
	SI_S1AP_DT_WLANMeasurementConfiguration * wLANMeasurementConfiguration;
	int wLANMeasurementConfiguration_isset;

	// ID = id-SensorMeasurementConfiguration, PRESENCE = optional L:10913
	SI_S1AP_DT_SensorMeasurementConfiguration * sensorMeasurementConfiguration;
	int sensorMeasurementConfiguration_isset;

	
} SI_S1AP_DT_PDU_ImmediateMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_IntersystemMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_IntersystemMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_InterSystemMeasurementParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_InterSystemMeasurementParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_InterSystemMeasurementItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_InterSystemMeasurementItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_LAI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_LAI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_LastVisitedEUTRANCellInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Time-UE-StayedInCell-EnhancedGranularity, PRESENCE = optional L:10913
	unsigned long long int timeUEStayedInCellEnhancedGranularity;
	int timeUEStayedInCellEnhancedGranularity_isset;

	// ID = id-HO-Cause, PRESENCE = optional L:10913
	SI_S1AP_DT_Cause * hOCause;
	int hOCause_isset;

	// ID = id-lastVisitedPSCellList, PRESENCE = optional L:10913
	SI_S1AP_DT_LastVisitedPSCellList * lastVisitedPSCellList;
	int lastVisitedPSCellList_isset;

	
} SI_S1AP_DT_PDU_LastVisitedEUTRANCellInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_LastVisitedPSCellInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_LastVisitedPSCellInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ListeningSubframePattern_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ListeningSubframePattern_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_LoggedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-BluetoothMeasurementConfiguration, PRESENCE = optional L:10913
	SI_S1AP_DT_BluetoothMeasurementConfiguration * bluetoothMeasurementConfiguration;
	int bluetoothMeasurementConfiguration_isset;

	// ID = id-WLANMeasurementConfiguration, PRESENCE = optional L:10913
	SI_S1AP_DT_WLANMeasurementConfiguration * wLANMeasurementConfiguration;
	int wLANMeasurementConfiguration_isset;

	// ID = id-LoggedMDTTrigger, PRESENCE = optional L:10913
	SI_S1AP_DT_LoggedMDTTrigger * loggedMDTTrigger;
	int loggedMDTTrigger_isset;

	// ID = id-SensorMeasurementConfiguration, PRESENCE = optional L:10913
	SI_S1AP_DT_SensorMeasurementConfiguration * sensorMeasurementConfiguration;
	int sensorMeasurementConfiguration_isset;

	
} SI_S1AP_DT_PDU_LoggedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_LoggedMBSFNMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_LoggedMBSFNMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_LTE_NTN_TAI_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_LTE_NTN_TAI_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_M3Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_M3Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_M4Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M4ReportAmount, PRESENCE = optional L:10913
	uint8_t m4ReportAmount;
	int m4ReportAmount_isset;

	
} SI_S1AP_DT_PDU_M4Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_M5Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M5ReportAmount, PRESENCE = optional L:10913
	uint8_t m5ReportAmount;
	int m5ReportAmount_isset;

	
} SI_S1AP_DT_PDU_M5Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_M6Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M6ReportAmount, PRESENCE = optional L:10913
	uint8_t m6ReportAmount;
	int m6ReportAmount_isset;

	
} SI_S1AP_DT_PDU_M6Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_M7Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M7ReportAmount, PRESENCE = optional L:10913
	uint8_t m7ReportAmount;
	int m7ReportAmount_isset;

	
} SI_S1AP_DT_PDU_M7Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_MDT_Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SignallingBasedMDTPLMNList, PRESENCE = optional L:10913
	SI_S1AP_DT_MDTPLMNList * signallingBasedMDTPLMNList;
	int signallingBasedMDTPLMNList_isset;

	
} SI_S1AP_DT_PDU_MDT_Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_MBSFN_ResultToLogInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_MBSFN_ResultToLogInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_MDTMode_ExtensionIE
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-LoggedMBSFNMDT, PRESENCE = mandatory L:10913
	SI_S1AP_DT_LoggedMBSFNMDT * loggedMBSFNMDT;
	int loggedMBSFNMDT_isset;

	
} SI_S1AP_DT_PDU_MDTMode_ExtensionIE;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_MeasurementThresholdL1LoggedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_MutingPatternInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_MutingPatternInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_NB_IoT_Paging_eDRXInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_NR_CGI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_NR_CGI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_NRUESecurityCapabilities_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_NRUESecurityCapabilities_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_NRV2XServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_NRV2XServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_NRUESidelinkAggregateMaximumBitrate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_PagingAttemptInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_PagingAttemptInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Paging_eDRXInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_Paging_eDRXInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_PC5QoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_PC5QoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_PC5QoSFlowItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_PC5QoSFlowItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_PC5FlowBitRates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_PC5FlowBitRates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_M1PeriodicReporting_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_M1PeriodicReporting_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_PLMNAreaBasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_PLMNAreaBasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ProSeAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ProSeUEtoNetworkRelaying, PRESENCE = optional L:10913
	uint8_t proSeUEtoNetworkRelaying;
	int proSeUEtoNetworkRelaying_isset;

	
} SI_S1AP_DT_PDU_ProSeAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_PSCellInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_PSCellInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RecommendedCellsForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_RecommendedCellsForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RecommendedCellItemIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RecommendedCellItem, PRESENCE = mandatory L:10913
	SI_S1AP_DT_RecommendedCellItem * recommendedCellItem;
	int recommendedCellItem_isset;

	
} SI_S1AP_DT_PDU_RecommendedCellItemIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RecommendedCellsForPagingItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_RecommendedCellsForPagingItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RecommendedENBsForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_RecommendedENBsForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RecommendedENBItemIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RecommendedENBItem, PRESENCE = mandatory L:10913
	SI_S1AP_DT_RecommendedENBItem * recommendedENBItem;
	int recommendedENBItem_isset;

	
} SI_S1AP_DT_PDU_RecommendedENBItemIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RecommendedENBItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_RecommendedENBItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RAT_RestrictionsItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_RAT_RestrictionsItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RequestType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RequestTypeAdditionalInfo, PRESENCE = optional L:10913
	uint8_t requestTypeAdditionalInfo;
	int requestTypeAdditionalInfo_isset;

	
} SI_S1AP_DT_PDU_RequestType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RIMTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_RIMTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_RLFReportInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NB-IoT-RLF-Report-Container, PRESENCE = optional L:10913
	SI_S1AP_DT_NB_IoT_RLF_Report_Container * nBIoTRLFReportContainer;
	int nBIoTRLFReportContainer_isset;

	
} SI_S1AP_DT_PDU_RLFReportInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SecurityContext_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SecurityContext_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReportItemIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SecondaryRATDataUsageReportItem, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SecondaryRATDataUsageReportItem * secondaryRATDataUsageReportItem;
	int secondaryRATDataUsageReportItem_isset;

	
} SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItemIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SecurityIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SecurityIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SecurityResult_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SecurityResult_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SensorMeasConfigNameItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SensorMeasConfigNameItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SensorMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SensorMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SensorNameConfig_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SensorNameConfig_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SONInformation_ExtensionIE
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SON-Information-Report, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SONInformationReport * sONInformationReport;
	int sONInformationReport_isset;

	
} SI_S1AP_DT_PDU_SONInformation_ExtensionIE;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SONInformationReply_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Time-Synchronisation-Info, PRESENCE = optional L:10913
	SI_S1AP_DT_TimeSynchronisationInfo * timeSynchronisationInfo;
	int timeSynchronisationInfo_isset;

	// ID = id-Muting-Pattern-Information, PRESENCE = optional L:10913
	SI_S1AP_DT_MutingPatternInformation * mutingPatternInformation;
	int mutingPatternInformation_isset;

	
} SI_S1AP_DT_PDU_SONInformationReply_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SONConfigurationTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-x2TNLConfigurationInfo, PRESENCE = conditional L:10913
	SI_S1AP_DT_X2TNLConfigurationInfo * x2TNLConfigurationInfo;
	int x2TNLConfigurationInfo_isset;

	// ID = id-Synchronisation-Information, PRESENCE = conditional L:10913
	SI_S1AP_DT_SynchronisationInformation * synchronisationInformation;
	int synchronisationInformation_isset;

	
} SI_S1AP_DT_PDU_SONConfigurationTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SynchronisationInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SynchronisationInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SourceeNB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SourceeNB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SourceNodeID_ExtensionIE
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SourceNodeID_ExtensionIE;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MobilityInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_MobilityInformation * mobilityInformation;
	int mobilityInformation_isset;

	// ID = id-uE-HistoryInformationFromTheUE, PRESENCE = optional L:10913
	SI_S1AP_DT_UE_HistoryInformationFromTheUE * uEHistoryInformationFromTheUE;
	int uEHistoryInformationFromTheUE_isset;

	// ID = id-IMSvoiceEPSfallbackfrom5G, PRESENCE = optional L:10913
	uint8_t iMSvoiceEPSfallbackfrom5G;
	int iMSvoiceEPSfallbackfrom5G_isset;

	// ID = id-AdditionalRRMPriorityIndex, PRESENCE = optional L:10913
	SI_S1AP_DT_AdditionalRRMPriorityIndex * additionalRRMPriorityIndex;
	int additionalRRMPriorityIndex_isset;

	// ID = id-ContextatSource, PRESENCE = optional L:10913
	SI_S1AP_DT_ContextatSource * contextatSource;
	int contextatSource_isset;

	// ID = id-IntersystemMeasurementConfiguration, PRESENCE = optional L:10913
	SI_S1AP_DT_IntersystemMeasurementConfiguration * intersystemMeasurementConfiguration;
	int intersystemMeasurementConfiguration_isset;

	// ID = id-SourceNodeID, PRESENCE = optional L:10913
	SI_S1AP_DT_SourceNodeID * sourceNodeID;
	int sourceNodeID_isset;

	// ID = id-EmergencyIndicator, PRESENCE = optional L:10913
	uint8_t emergencyIndicator;
	int emergencyIndicator_isset;

	// ID = id-UEContextReferenceatSourceeNB, PRESENCE = optional L:10913
	unsigned long long int uEContextReferenceatSourceeNB;
	int uEContextReferenceatSourceeNB_isset;

	// ID = id-SourceSNID, PRESENCE = optional L:10913
	SI_S1AP_DT_Global_RAN_NODE_ID * sourceSNID;
	int sourceSNID_isset;

	// ID = id-Direct-Forwarding-Path-Availability, PRESENCE = optional L:10913
	uint8_t directForwardingPathAvailability;
	int directForwardingPathAvailability_isset;

	// ID = id-TimeBasedHandoverInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_TimeBasedHandoverInformation * timeBasedHandoverInformation;
	int timeBasedHandoverInformation_isset;

	
} SI_S1AP_DT_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SourceNgRanNode_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_SourceNgRanNode_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ServedGUMMEIsItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GUMMEIType, PRESENCE = optional L:10913
	uint8_t gUMMEIType;
	int gUMMEIType_isset;

	
} SI_S1AP_DT_PDU_ServedGUMMEIsItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Subscription_Based_UE_DifferentiationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ScheduledCommunicationTime_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ScheduledCommunicationTime_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_SupportedTAs_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RAT-Type, PRESENCE = optional L:10913
	uint8_t rATType;
	int rATType_isset;

	
} SI_S1AP_DT_PDU_SupportedTAs_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TimeSynchronisationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Muting-Availability-Indication, PRESENCE = optional L:10913
	uint8_t mutingAvailabilityIndication;
	int mutingAvailabilityIndication_isset;

	
} SI_S1AP_DT_PDU_TimeSynchronisationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_S_TMSI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_S_TMSI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TAIBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TAIBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TAI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TAI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TAI_Broadcast_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TAI_Broadcast_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TAI_Cancelled_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TAI_Cancelled_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TABasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TABasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TABasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TABasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TAIBasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TAIBasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CompletedCellinTAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CompletedCellinTAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TargeteNB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TargeteNB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TargetRNC_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TargetRNC_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TargetNgRanNode_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TargetNgRanNode_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_GNB_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_GNB_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Global_GNB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_Global_GNB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_NG_eNB_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_NG_eNB_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DAPSResponseInfoList, PRESENCE = optional L:10913
	SI_S1AP_DT_DAPSResponseInfoList * dAPSResponseInfoList;
	int dAPSResponseInfoList_isset;

	// ID = id-RACSIndication, PRESENCE = optional L:10913
	uint8_t rACSIndication;
	int rACSIndication_isset;

	// ID = id-E-RABSecurityResultList, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABSecurityResultList * eRABSecurityResultList;
	int eRABSecurityResultList_isset;

	// ID = id-Direct-Forwarding-Path-Availability, PRESENCE = optional L:10913
	uint8_t directForwardingPathAvailability;
	int directForwardingPathAvailability_isset;

	
} SI_S1AP_DT_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_M1ThresholdEventA2_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_M1ThresholdEventA2_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TimeBasedHandoverInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TimeBasedHandoverInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TraceActivation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MDTConfiguration, PRESENCE = optional L:10913
	SI_S1AP_DT_MDT_Configuration * mDTConfiguration;
	int mDTConfiguration_isset;

	// ID = id-UEAppLayerMeasConfig, PRESENCE = optional L:10913
	SI_S1AP_DT_UEAppLayerMeasConfig * uEAppLayerMeasConfig;
	int uEAppLayerMeasConfig_isset;

	// ID = id-MDTConfigurationNR, PRESENCE = optional L:10913
	SI_S1AP_DT_MDT_ConfigurationNR * mDTConfigurationNR;
	int mDTConfigurationNR_isset;

	// ID = id-TraceCollectionEntityURI, PRESENCE = optional L:10913
	SI_S1AP_DT_URI_Address * traceCollectionEntityURI;
	int traceCollectionEntityURI_isset;

	
} SI_S1AP_DT_PDU_TraceActivation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_Tunnel_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_Tunnel_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEAggregate_MaximumBitrates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-extended-uEaggregateMaximumBitRateDL, PRESENCE = optional L:10913
	unsigned long long int extendeduEaggregateMaximumBitRateDL;
	int extendeduEaggregateMaximumBitRateDL_isset;

	// ID = id-extended-uEaggregateMaximumBitRateUL, PRESENCE = optional L:10913
	unsigned long long int extendeduEaggregateMaximumBitRateUL;
	int extendeduEaggregateMaximumBitRateUL_isset;

	
} SI_S1AP_DT_PDU_UEAggregate_MaximumBitrates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEAppLayerMeasConfig_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-serviceType, PRESENCE = optional L:10913
	uint8_t serviceType;
	int serviceType_isset;

	
} SI_S1AP_DT_PDU_UEAppLayerMeasConfig_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UE_S1AP_ID_pair_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_UE_S1AP_ID_pair_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionItemExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UESecurityCapabilities_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_UESecurityCapabilities_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UL_CP_SecurityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_UL_CP_SecurityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UserLocationInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PSCellInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_PSCellInformation * pSCellInformation;
	int pSCellInformation_isset;

	// ID = id-LTE-NTN-TAI-Information, PRESENCE = optional L:10913
	SI_S1AP_DT_LTE_NTN_TAI_Information * lTENTNTAIInformation;
	int lTENTNTAIInformation_isset;

	
} SI_S1AP_DT_PDU_UserLocationInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_V2XServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_V2XServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_WLANMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_WLANMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_WUS_Assistance_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_WUS_Assistance_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_X2TNLConfigurationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-eNBX2ExtendedTransportLayerAddresses, PRESENCE = optional L:10913
	SI_S1AP_DT_ENBX2ExtTLAs * eNBX2ExtendedTransportLayerAddresses;
	int eNBX2ExtendedTransportLayerAddresses_isset;

	// ID = id-eNBIndirectX2TransportLayerAddresses, PRESENCE = optional L:10913
	SI_S1AP_DT_ENBIndirectX2TransportLayerAddresses * eNBIndirectX2TransportLayerAddresses;
	int eNBIndirectX2TransportLayerAddresses_isset;

	
} SI_S1AP_DT_PDU_X2TNLConfigurationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENBX2ExtTLA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_ENBX2ExtTLA_ExtIEs;


// GOT-NULL MSClassmark3
//ELEMENTARY-PROCEDURE = [2] handoverPreparation  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverRequired
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-HandoverType, PRESENCE = mandatory L:10913
	uint8_t handoverType;
	int handoverType_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-TargetID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TargetID * targetID;
	int targetID_isset;

	// ID = id-Direct-Forwarding-Path-Availability, PRESENCE = optional L:10913
	uint8_t directForwardingPathAvailability;
	int directForwardingPathAvailability_isset;

	// ID = id-SRVCCHOIndication, PRESENCE = optional L:10913
	uint8_t sRVCCHOIndication;
	int sRVCCHOIndication_isset;

	// ID = id-Source-ToTarget-TransparentContainer, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Source_ToTarget_TransparentContainer * sourceToTargetTransparentContainer;
	int sourceToTargetTransparentContainer_isset;

	// ID = id-Source-ToTarget-TransparentContainer-Secondary, PRESENCE = optional L:10913
	SI_S1AP_DT_Source_ToTarget_TransparentContainer * sourceToTargetTransparentContainerSecondary;
	int sourceToTargetTransparentContainerSecondary_isset;

	// ID = id-MSClassmark2, PRESENCE = conditional L:10913
	SI_S1AP_DT_MSClassmark2 * mSClassmark2;
	int mSClassmark2_isset;

	//id-MSClassmark3:MSClassmark3
	// ID = id-CSG-Id, PRESENCE = optional L:10913
	SI_S1AP_DT_CSG_Id * cSGId;
	int cSGId_isset;

	// ID = id-CellAccessMode, PRESENCE = optional L:10913
	uint8_t cellAccessMode;
	int cellAccessMode_isset;

	// ID = id-PS-ServiceNotAvailable, PRESENCE = optional L:10913
	uint8_t pSServiceNotAvailable;
	int pSServiceNotAvailable_isset;

	
} SI_S1AP_DT_PDU_HandoverRequired;


// GOT-NULL E-RABSubjecttoDataForwardingList
//ELEMENTARY-PROCEDURE = [2] handoverPreparation  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverCommand
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-HandoverType, PRESENCE = mandatory L:10913
	uint8_t handoverType;
	int handoverType_isset;

	// ID = id-NASSecurityParametersfromE-UTRAN, PRESENCE = conditional L:10913
	SI_S1AP_DT_NASSecurityParametersfromE_UTRAN * nASSecurityParametersfromEUTRAN;
	int nASSecurityParametersfromEUTRAN_isset;

	//id-E-RABSubjecttoDataForwardingList:E-RABSubjecttoDataForwardingList
	// ID = id-E-RABtoReleaseListHOCmd, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABList * eRABtoReleaseListHOCmd;
	int eRABtoReleaseListHOCmd_isset;

	// ID = id-Target-ToSource-TransparentContainer, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Target_ToSource_TransparentContainer * targetToSourceTransparentContainer;
	int targetToSourceTransparentContainer_isset;

	// ID = id-Target-ToSource-TransparentContainer-Secondary, PRESENCE = optional L:10913
	SI_S1AP_DT_Target_ToSource_TransparentContainer * targetToSourceTransparentContainerSecondary;
	int targetToSourceTransparentContainerSecondary_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_HandoverCommand;


//ELEMENTARY-PROCEDURE = [2] handoverPreparation  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverPreparationFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_HandoverPreparationFailure;


// GOT-NULL E-RABToBeSetupListHOReq
//ELEMENTARY-PROCEDURE = [2] handoverResourceAllocation  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-HandoverType, PRESENCE = mandatory L:10913
	uint8_t handoverType;
	int handoverType_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-uEaggregateMaximumBitrate, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UEAggregateMaximumBitrate * uEaggregateMaximumBitrate;
	int uEaggregateMaximumBitrate_isset;

	//id-E-RABToBeSetupListHOReq:E-RABToBeSetupListHOReq
	// ID = id-Source-ToTarget-TransparentContainer, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Source_ToTarget_TransparentContainer * sourceToTargetTransparentContainer;
	int sourceToTargetTransparentContainer_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-HandoverRestrictionList, PRESENCE = optional L:10913
	SI_S1AP_DT_HandoverRestrictionList * handoverRestrictionList;
	int handoverRestrictionList_isset;

	// ID = id-TraceActivation, PRESENCE = optional L:10913
	SI_S1AP_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	// ID = id-RequestType, PRESENCE = optional L:10913
	SI_S1AP_DT_RequestType * requestType;
	int requestType_isset;

	// ID = id-SRVCCOperationPossible, PRESENCE = optional L:10913
	uint8_t sRVCCOperationPossible;
	int sRVCCOperationPossible_isset;

	// ID = id-SecurityContext, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SecurityContext * securityContext;
	int securityContext_isset;

	// ID = id-NASSecurityParameterstoE-UTRAN, PRESENCE = conditional L:10913
	SI_S1AP_DT_NASSecurityParameterstoE_UTRAN * nASSecurityParameterstoEUTRAN;
	int nASSecurityParameterstoEUTRAN_isset;

	// ID = id-CSG-Id, PRESENCE = optional L:10913
	SI_S1AP_DT_CSG_Id * cSGId;
	int cSGId_isset;

	// ID = id-CSGMembershipStatus, PRESENCE = optional L:10913
	uint8_t cSGMembershipStatus;
	int cSGMembershipStatus_isset;

	// ID = id-GUMMEI-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_GUMMEI * gUMMEIID;
	int gUMMEIID_isset;

	// ID = id-MME-UE-S1AP-ID-2, PRESENCE = optional L:10913
	unsigned long long int mMEUES1APID2;
	int mMEUES1APID2_isset;

	// ID = id-ManagementBasedMDTAllowed, PRESENCE = optional L:10913
	uint8_t managementBasedMDTAllowed;
	int managementBasedMDTAllowed_isset;

	// ID = id-ManagementBasedMDTPLMNList, PRESENCE = optional L:10913
	SI_S1AP_DT_MDTPLMNList * managementBasedMDTPLMNList;
	int managementBasedMDTPLMNList_isset;

	// ID = id-Masked-IMEISV, PRESENCE = optional L:10913
	SI_S1AP_DT_Masked_IMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-ExpectedUEBehaviour, PRESENCE = optional L:10913
	SI_S1AP_DT_ExpectedUEBehaviour * expectedUEBehaviour;
	int expectedUEBehaviour_isset;

	// ID = id-ProSeAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_ProSeAuthorized * proSeAuthorized;
	int proSeAuthorized_isset;

	// ID = id-UEUserPlaneCIoTSupportIndicator, PRESENCE = optional L:10913
	uint8_t uEUserPlaneCIoTSupportIndicator;
	int uEUserPlaneCIoTSupportIndicator_isset;

	// ID = id-V2XServicesAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_V2XServicesAuthorized * v2XServicesAuthorized;
	int v2XServicesAuthorized_isset;

	// ID = id-UESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_UESidelinkAggregateMaximumBitrate * uESidelinkAggregateMaximumBitrate;
	int uESidelinkAggregateMaximumBitrate_isset;

	// ID = id-EnhancedCoverageRestricted, PRESENCE = optional L:10913
	uint8_t enhancedCoverageRestricted;
	int enhancedCoverageRestricted_isset;

	// ID = id-NRUESecurityCapabilities, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESecurityCapabilities * nRUESecurityCapabilities;
	int nRUESecurityCapabilities_isset;

	// ID = id-CE-ModeBRestricted, PRESENCE = optional L:10913
	uint8_t cEModeBRestricted;
	int cEModeBRestricted_isset;

	// ID = id-AerialUEsubscriptionInformation, PRESENCE = optional L:10913
	uint8_t aerialUEsubscriptionInformation;
	int aerialUEsubscriptionInformation_isset;

	// ID = id-PendingDataIndication, PRESENCE = optional L:10913
	uint8_t pendingDataIndication;
	int pendingDataIndication_isset;

	// ID = id-Subscription-Based-UE-DifferentiationInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo * subscriptionBasedUEDifferentiationInfo;
	int subscriptionBasedUEDifferentiationInfo_isset;

	// ID = id-AdditionalRRMPriorityIndex, PRESENCE = optional L:10913
	SI_S1AP_DT_AdditionalRRMPriorityIndex * additionalRRMPriorityIndex;
	int additionalRRMPriorityIndex_isset;

	// ID = id-IAB-Authorized, PRESENCE = optional L:10913
	uint8_t iABAuthorized;
	int iABAuthorized_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate * nRUESidelinkAggregateMaximumBitrate;
	int nRUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10913
	SI_S1AP_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	
} SI_S1AP_DT_PDU_HandoverRequest;


// GOT-NULL E-RABAdmittedList
// GOT-NULL E-RABFailedtoSetupListHOReqAck
//ELEMENTARY-PROCEDURE = [2] handoverResourceAllocation  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverRequestAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	//id-E-RABAdmittedList:E-RABAdmittedList
	//id-E-RABFailedToSetupListHOReqAck:E-RABFailedtoSetupListHOReqAck
	// ID = id-Target-ToSource-TransparentContainer, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Target_ToSource_TransparentContainer * targetToSourceTransparentContainer;
	int targetToSourceTransparentContainer_isset;

	// ID = id-CSG-Id, PRESENCE = optional L:10913
	SI_S1AP_DT_CSG_Id * cSGId;
	int cSGId_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-CellAccessMode, PRESENCE = optional L:10913
	uint8_t cellAccessMode;
	int cellAccessMode_isset;

	// ID = id-CE-mode-B-SupportIndicator, PRESENCE = optional L:10913
	uint8_t cEmodeBSupportIndicator;
	int cEmodeBSupportIndicator_isset;

	
} SI_S1AP_DT_PDU_HandoverRequestAcknowledge;


//ELEMENTARY-PROCEDURE = [2] handoverResourceAllocation  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_HandoverFailure;


//ELEMENTARY-PROCEDURE = [2] handoverNotification  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverNotify
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-EUTRAN-CGI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_EUTRAN_CGI * eUTRANCGI;
	int eUTRANCGI_isset;

	// ID = id-TAI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TAI * tAI;
	int tAI_isset;

	// ID = id-Tunnel-Information-for-BBF, PRESENCE = optional L:10913
	SI_S1AP_DT_TunnelInformation * tunnelInformationforBBF;
	int tunnelInformationforBBF_isset;

	// ID = id-LHN-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_LHN_ID * lHNID;
	int lHNID_isset;

	// ID = id-PSCellInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_PSCellInformation * pSCellInformation;
	int pSCellInformation_isset;

	// ID = id-NotifySourceeNB, PRESENCE = optional L:10913
	uint8_t notifySourceeNB;
	int notifySourceeNB_isset;

	// ID = id-LTE-NTN-TAI-Information, PRESENCE = optional L:10913
	SI_S1AP_DT_LTE_NTN_TAI_Information * lTENTNTAIInformation;
	int lTENTNTAIInformation_isset;

	
} SI_S1AP_DT_PDU_HandoverNotify;


// GOT-NULL E-RABToBeSwitchedDLList
//ELEMENTARY-PROCEDURE = [2] pathSwitchRequest  L:10873

// L:10875
typedef struct __si_s1ap_dt_PathSwitchRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	//id-E-RABToBeSwitchedDLList:E-RABToBeSwitchedDLList
	// ID = id-SourceMME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int sourceMMEUES1APID;
	int sourceMMEUES1APID_isset;

	// ID = id-EUTRAN-CGI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_EUTRAN_CGI * eUTRANCGI;
	int eUTRANCGI_isset;

	// ID = id-TAI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TAI * tAI;
	int tAI_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-CSG-Id, PRESENCE = optional L:10913
	SI_S1AP_DT_CSG_Id * cSGId;
	int cSGId_isset;

	// ID = id-CellAccessMode, PRESENCE = optional L:10913
	uint8_t cellAccessMode;
	int cellAccessMode_isset;

	// ID = id-SourceMME-GUMMEI, PRESENCE = optional L:10913
	SI_S1AP_DT_GUMMEI * sourceMMEGUMMEI;
	int sourceMMEGUMMEI_isset;

	// ID = id-CSGMembershipStatus, PRESENCE = optional L:10913
	uint8_t cSGMembershipStatus;
	int cSGMembershipStatus_isset;

	// ID = id-Tunnel-Information-for-BBF, PRESENCE = optional L:10913
	SI_S1AP_DT_TunnelInformation * tunnelInformationforBBF;
	int tunnelInformationforBBF_isset;

	// ID = id-LHN-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_LHN_ID * lHNID;
	int lHNID_isset;

	// ID = id-RRC-Resume-Cause, PRESENCE = optional L:10913
	uint8_t rRCResumeCause;
	int rRCResumeCause_isset;

	// ID = id-NRUESecurityCapabilities, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESecurityCapabilities * nRUESecurityCapabilities;
	int nRUESecurityCapabilities_isset;

	// ID = id-PSCellInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_PSCellInformation * pSCellInformation;
	int pSCellInformation_isset;

	// ID = id-LTE-NTN-TAI-Information, PRESENCE = optional L:10913
	SI_S1AP_DT_LTE_NTN_TAI_Information * lTENTNTAIInformation;
	int lTENTNTAIInformation_isset;

	
} SI_S1AP_DT_PDU_PathSwitchRequest;


// GOT-NULL E-RABToBeSwitchedULList
// GOT-NULL E-RABToBeUpdatedList
//ELEMENTARY-PROCEDURE = [2] pathSwitchRequest  L:10873

// L:10875
typedef struct __si_s1ap_dt_PathSwitchRequestAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-uEaggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_UEAggregateMaximumBitrate * uEaggregateMaximumBitrate;
	int uEaggregateMaximumBitrate_isset;

	//id-E-RABToBeSwitchedULList:E-RABToBeSwitchedULList
	// ID = id-E-RABToBeReleasedList, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABList * eRABToBeReleasedList;
	int eRABToBeReleasedList_isset;

	// ID = id-SecurityContext, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SecurityContext * securityContext;
	int securityContext_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-MME-UE-S1AP-ID-2, PRESENCE = optional L:10913
	unsigned long long int mMEUES1APID2;
	int mMEUES1APID2_isset;

	// ID = id-CSGMembershipStatus, PRESENCE = optional L:10913
	uint8_t cSGMembershipStatus;
	int cSGMembershipStatus_isset;

	// ID = id-ProSeAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_ProSeAuthorized * proSeAuthorized;
	int proSeAuthorized_isset;

	// ID = id-UEUserPlaneCIoTSupportIndicator, PRESENCE = optional L:10913
	uint8_t uEUserPlaneCIoTSupportIndicator;
	int uEUserPlaneCIoTSupportIndicator_isset;

	// ID = id-V2XServicesAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_V2XServicesAuthorized * v2XServicesAuthorized;
	int v2XServicesAuthorized_isset;

	// ID = id-UESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_UESidelinkAggregateMaximumBitrate * uESidelinkAggregateMaximumBitrate;
	int uESidelinkAggregateMaximumBitrate_isset;

	// ID = id-EnhancedCoverageRestricted, PRESENCE = optional L:10913
	uint8_t enhancedCoverageRestricted;
	int enhancedCoverageRestricted_isset;

	// ID = id-NRUESecurityCapabilities, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESecurityCapabilities * nRUESecurityCapabilities;
	int nRUESecurityCapabilities_isset;

	// ID = id-CE-ModeBRestricted, PRESENCE = optional L:10913
	uint8_t cEModeBRestricted;
	int cEModeBRestricted_isset;

	// ID = id-AerialUEsubscriptionInformation, PRESENCE = optional L:10913
	uint8_t aerialUEsubscriptionInformation;
	int aerialUEsubscriptionInformation_isset;

	// ID = id-PendingDataIndication, PRESENCE = optional L:10913
	uint8_t pendingDataIndication;
	int pendingDataIndication_isset;

	// ID = id-Subscription-Based-UE-DifferentiationInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo * subscriptionBasedUEDifferentiationInfo;
	int subscriptionBasedUEDifferentiationInfo_isset;

	// ID = id-HandoverRestrictionList, PRESENCE = optional L:10913
	SI_S1AP_DT_HandoverRestrictionList * handoverRestrictionList;
	int handoverRestrictionList_isset;

	// ID = id-AdditionalRRMPriorityIndex, PRESENCE = optional L:10913
	SI_S1AP_DT_AdditionalRRMPriorityIndex * additionalRRMPriorityIndex;
	int additionalRRMPriorityIndex_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate * nRUESidelinkAggregateMaximumBitrate;
	int nRUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10913
	SI_S1AP_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = optional L:10913
	SI_S1AP_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	//id-E-RABToBeUpdatedList:E-RABToBeUpdatedList
	
} SI_S1AP_DT_PDU_PathSwitchRequestAcknowledge;


//ELEMENTARY-PROCEDURE = [2] pathSwitchRequest  L:10873

// L:10875
typedef struct __si_s1ap_dt_PathSwitchRequestFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_PathSwitchRequestFailure;


//ELEMENTARY-PROCEDURE = [2] handoverCancel  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverCancel
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	
} SI_S1AP_DT_PDU_HandoverCancel;


//ELEMENTARY-PROCEDURE = [2] handoverCancel  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverCancelAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_HandoverCancelAcknowledge;


//ELEMENTARY-PROCEDURE = [2] handoverSuccess  L:10873

// L:10875
typedef struct __si_s1ap_dt_HandoverSuccess
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	
} SI_S1AP_DT_PDU_HandoverSuccess;


//ELEMENTARY-PROCEDURE = [2] eNBEarlyStatusTransfer  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENBEarlyStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-eNB-EarlyStatusTransfer-TransparentContainer, PRESENCE = mandatory L:10913
	SI_S1AP_DT_ENB_EarlyStatusTransfer_TransparentContainer * eNBEarlyStatusTransferTransparentContainer;
	int eNBEarlyStatusTransferTransparentContainer_isset;

	
} SI_S1AP_DT_PDU_ENBEarlyStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] mMEEarlyStatusTransfer  L:10873

// L:10875
typedef struct __si_s1ap_dt_MMEEarlyStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-eNB-EarlyStatusTransfer-TransparentContainer, PRESENCE = mandatory L:10913
	SI_S1AP_DT_ENB_EarlyStatusTransfer_TransparentContainer * eNBEarlyStatusTransferTransparentContainer;
	int eNBEarlyStatusTransferTransparentContainer_isset;

	
} SI_S1AP_DT_PDU_MMEEarlyStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] e-RABSetup  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABSetupRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-uEaggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_UEAggregateMaximumBitrate * uEaggregateMaximumBitrate;
	int uEaggregateMaximumBitrate_isset;

	// ID = id-E-RABToBeSetupListBearerSUReq, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABToBeSetupListBearerSUReq * eRABToBeSetupListBearerSUReq;
	int eRABToBeSetupListBearerSUReq_isset;

	
} SI_S1AP_DT_PDU_E_RABSetupRequest;


//ELEMENTARY-PROCEDURE = [2] e-RABSetup  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABSetupResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-E-RABSetupListBearerSURes, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABSetupListBearerSURes * eRABSetupListBearerSURes;
	int eRABSetupListBearerSURes_isset;

	// ID = id-E-RABFailedToSetupListBearerSURes, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABList * eRABFailedToSetupListBearerSURes;
	int eRABFailedToSetupListBearerSURes_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_S1AP_DT_PDU_E_RABSetupResponse;


//ELEMENTARY-PROCEDURE = [2] e-RABModify  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABModifyRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-uEaggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_UEAggregateMaximumBitrate * uEaggregateMaximumBitrate;
	int uEaggregateMaximumBitrate_isset;

	// ID = id-E-RABToBeModifiedListBearerModReq, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABToBeModifiedListBearerModReq * eRABToBeModifiedListBearerModReq;
	int eRABToBeModifiedListBearerModReq_isset;

	// ID = id-SecondaryRATDataUsageRequest, PRESENCE = optional L:10913
	uint8_t secondaryRATDataUsageRequest;
	int secondaryRATDataUsageRequest_isset;

	
} SI_S1AP_DT_PDU_E_RABModifyRequest;


//ELEMENTARY-PROCEDURE = [2] e-RABModify  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABModifyResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-E-RABModifyListBearerModRes, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABModifyListBearerModRes * eRABModifyListBearerModRes;
	int eRABModifyListBearerModRes_isset;

	// ID = id-E-RABFailedToModifyList, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABList * eRABFailedToModifyList;
	int eRABFailedToModifyList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-SecondaryRATDataUsageReportList, PRESENCE = optional L:10913
	SI_S1AP_DT_SecondaryRATDataUsageReportList * secondaryRATDataUsageReportList;
	int secondaryRATDataUsageReportList_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_S1AP_DT_PDU_E_RABModifyResponse;


//ELEMENTARY-PROCEDURE = [2] e-RABRelease  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABReleaseCommand
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-uEaggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_UEAggregateMaximumBitrate * uEaggregateMaximumBitrate;
	int uEaggregateMaximumBitrate_isset;

	// ID = id-E-RABToBeReleasedList, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABList * eRABToBeReleasedList;
	int eRABToBeReleasedList_isset;

	// ID = id-NAS-PDU, PRESENCE = optional L:10913
	SI_S1AP_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	
} SI_S1AP_DT_PDU_E_RABReleaseCommand;


//ELEMENTARY-PROCEDURE = [2] e-RABRelease  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABReleaseResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-E-RABReleaseListBearerRelComp, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABReleaseListBearerRelComp * eRABReleaseListBearerRelComp;
	int eRABReleaseListBearerRelComp_isset;

	// ID = id-E-RABFailedToReleaseList, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABList * eRABFailedToReleaseList;
	int eRABFailedToReleaseList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-SecondaryRATDataUsageReportList, PRESENCE = optional L:10913
	SI_S1AP_DT_SecondaryRATDataUsageReportList * secondaryRATDataUsageReportList;
	int secondaryRATDataUsageReportList_isset;

	
} SI_S1AP_DT_PDU_E_RABReleaseResponse;


//ELEMENTARY-PROCEDURE = [2] e-RABReleaseIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABReleaseIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-E-RABReleasedList, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABList * eRABReleasedList;
	int eRABReleasedList_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-SecondaryRATDataUsageReportList, PRESENCE = optional L:10913
	SI_S1AP_DT_SecondaryRATDataUsageReportList * secondaryRATDataUsageReportList;
	int secondaryRATDataUsageReportList_isset;

	
} SI_S1AP_DT_PDU_E_RABReleaseIndication;


//ELEMENTARY-PROCEDURE = [2] initialContextSetup  L:10873

// L:10875
typedef struct __si_s1ap_dt_InitialContextSetupRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-uEaggregateMaximumBitrate, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UEAggregateMaximumBitrate * uEaggregateMaximumBitrate;
	int uEaggregateMaximumBitrate_isset;

	// ID = id-E-RABToBeSetupListCtxtSUReq, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABToBeSetupListCtxtSUReq * eRABToBeSetupListCtxtSUReq;
	int eRABToBeSetupListCtxtSUReq_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-SecurityKey, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SecurityKey * securityKey;
	int securityKey_isset;

	// ID = id-TraceActivation, PRESENCE = optional L:10913
	SI_S1AP_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	// ID = id-HandoverRestrictionList, PRESENCE = optional L:10913
	SI_S1AP_DT_HandoverRestrictionList * handoverRestrictionList;
	int handoverRestrictionList_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-SubscriberProfileIDforRFP, PRESENCE = optional L:10913
	unsigned long long int subscriberProfileIDforRFP;
	int subscriberProfileIDforRFP_isset;

	// ID = id-CSFallbackIndicator, PRESENCE = optional L:10913
	uint8_t cSFallbackIndicator;
	int cSFallbackIndicator_isset;

	// ID = id-SRVCCOperationPossible, PRESENCE = optional L:10913
	uint8_t sRVCCOperationPossible;
	int sRVCCOperationPossible_isset;

	// ID = id-CSGMembershipStatus, PRESENCE = optional L:10913
	uint8_t cSGMembershipStatus;
	int cSGMembershipStatus_isset;

	// ID = id-RegisteredLAI, PRESENCE = optional L:10913
	SI_S1AP_DT_LAI * registeredLAI;
	int registeredLAI_isset;

	// ID = id-GUMMEI-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_GUMMEI * gUMMEIID;
	int gUMMEIID_isset;

	// ID = id-MME-UE-S1AP-ID-2, PRESENCE = optional L:10913
	unsigned long long int mMEUES1APID2;
	int mMEUES1APID2_isset;

	// ID = id-ManagementBasedMDTAllowed, PRESENCE = optional L:10913
	uint8_t managementBasedMDTAllowed;
	int managementBasedMDTAllowed_isset;

	// ID = id-ManagementBasedMDTPLMNList, PRESENCE = optional L:10913
	SI_S1AP_DT_MDTPLMNList * managementBasedMDTPLMNList;
	int managementBasedMDTPLMNList_isset;

	// ID = id-AdditionalCSFallbackIndicator, PRESENCE = conditional L:10913
	uint8_t additionalCSFallbackIndicator;
	int additionalCSFallbackIndicator_isset;

	// ID = id-Masked-IMEISV, PRESENCE = optional L:10913
	SI_S1AP_DT_Masked_IMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-ExpectedUEBehaviour, PRESENCE = optional L:10913
	SI_S1AP_DT_ExpectedUEBehaviour * expectedUEBehaviour;
	int expectedUEBehaviour_isset;

	// ID = id-ProSeAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_ProSeAuthorized * proSeAuthorized;
	int proSeAuthorized_isset;

	// ID = id-UEUserPlaneCIoTSupportIndicator, PRESENCE = optional L:10913
	uint8_t uEUserPlaneCIoTSupportIndicator;
	int uEUserPlaneCIoTSupportIndicator_isset;

	// ID = id-V2XServicesAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_V2XServicesAuthorized * v2XServicesAuthorized;
	int v2XServicesAuthorized_isset;

	// ID = id-UESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_UESidelinkAggregateMaximumBitrate * uESidelinkAggregateMaximumBitrate;
	int uESidelinkAggregateMaximumBitrate_isset;

	// ID = id-EnhancedCoverageRestricted, PRESENCE = optional L:10913
	uint8_t enhancedCoverageRestricted;
	int enhancedCoverageRestricted_isset;

	// ID = id-NRUESecurityCapabilities, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESecurityCapabilities * nRUESecurityCapabilities;
	int nRUESecurityCapabilities_isset;

	// ID = id-CE-ModeBRestricted, PRESENCE = optional L:10913
	uint8_t cEModeBRestricted;
	int cEModeBRestricted_isset;

	// ID = id-AerialUEsubscriptionInformation, PRESENCE = optional L:10913
	uint8_t aerialUEsubscriptionInformation;
	int aerialUEsubscriptionInformation_isset;

	// ID = id-PendingDataIndication, PRESENCE = optional L:10913
	uint8_t pendingDataIndication;
	int pendingDataIndication_isset;

	// ID = id-Subscription-Based-UE-DifferentiationInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo * subscriptionBasedUEDifferentiationInfo;
	int subscriptionBasedUEDifferentiationInfo_isset;

	// ID = id-AdditionalRRMPriorityIndex, PRESENCE = optional L:10913
	SI_S1AP_DT_AdditionalRRMPriorityIndex * additionalRRMPriorityIndex;
	int additionalRRMPriorityIndex_isset;

	// ID = id-IAB-Authorized, PRESENCE = optional L:10913
	uint8_t iABAuthorized;
	int iABAuthorized_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate * nRUESidelinkAggregateMaximumBitrate;
	int nRUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10913
	SI_S1AP_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-CoarseUELocation, PRESENCE = optional L:10913
	SI_S1AP_DT_CoarseUELocation * coarseUELocation;
	int coarseUELocation_isset;

	
} SI_S1AP_DT_PDU_InitialContextSetupRequest;


//ELEMENTARY-PROCEDURE = [2] initialContextSetup  L:10873

// L:10875
typedef struct __si_s1ap_dt_InitialContextSetupResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-E-RABSetupListCtxtSURes, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABSetupListCtxtSURes * eRABSetupListCtxtSURes;
	int eRABSetupListCtxtSURes_isset;

	// ID = id-E-RABFailedToSetupListCtxtSURes, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABList * eRABFailedToSetupListCtxtSURes;
	int eRABFailedToSetupListCtxtSURes_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_InitialContextSetupResponse;


//ELEMENTARY-PROCEDURE = [2] initialContextSetup  L:10873

// L:10875
typedef struct __si_s1ap_dt_InitialContextSetupFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_InitialContextSetupFailure;


//ELEMENTARY-PROCEDURE = [2] paging  L:10873

// L:10875
typedef struct __si_s1ap_dt_Paging
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UEIdentityIndexValue, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UEIdentityIndexValue * uEIdentityIndexValue;
	int uEIdentityIndexValue_isset;

	// ID = id-UEPagingID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UEPagingID * uEPagingID;
	int uEPagingID_isset;

	// ID = id-pagingDRX, PRESENCE = optional L:10913
	uint8_t pagingDRX;
	int pagingDRX_isset;

	// ID = id-CNDomain, PRESENCE = mandatory L:10913
	uint8_t cNDomain;
	int cNDomain_isset;

	// ID = id-TAIList, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TAIList * tAIList;
	int tAIList_isset;

	// ID = id-CSG-IdList, PRESENCE = optional L:10913
	SI_S1AP_DT_CSG_IdList * cSGIdList;
	int cSGIdList_isset;

	// ID = id-PagingPriority, PRESENCE = optional L:10913
	uint8_t pagingPriority;
	int pagingPriority_isset;

	// ID = id-UERadioCapabilityForPaging, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityForPaging * uERadioCapabilityForPaging;
	int uERadioCapabilityForPaging_isset;

	// ID = id-AssistanceDataForPaging, PRESENCE = optional L:10913
	SI_S1AP_DT_AssistanceDataForPaging * assistanceDataForPaging;
	int assistanceDataForPaging_isset;

	// ID = id-Paging-eDRXInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_Paging_eDRXInformation * pagingeDRXInformation;
	int pagingeDRXInformation_isset;

	// ID = id-extended-UEIdentityIndexValue, PRESENCE = optional L:10913
	SI_S1AP_DT_Extended_UEIdentityIndexValue * extendedUEIdentityIndexValue;
	int extendedUEIdentityIndexValue_isset;

	// ID = id-NB-IoT-Paging-eDRXInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_NB_IoT_Paging_eDRXInformation * nBIoTPagingeDRXInformation;
	int nBIoTPagingeDRXInformation_isset;

	// ID = id-NB-IoT-UEIdentityIndexValue, PRESENCE = optional L:10913
	SI_S1AP_DT_NB_IoT_UEIdentityIndexValue * nBIoTUEIdentityIndexValue;
	int nBIoTUEIdentityIndexValue_isset;

	// ID = id-EnhancedCoverageRestricted, PRESENCE = optional L:10913
	uint8_t enhancedCoverageRestricted;
	int enhancedCoverageRestricted_isset;

	// ID = id-CE-ModeBRestricted, PRESENCE = optional L:10913
	uint8_t cEModeBRestricted;
	int cEModeBRestricted_isset;

	// ID = id-DataSize, PRESENCE = optional L:10913
	unsigned long long int dataSize;
	int dataSize_isset;

	// ID = id-WUS-Assistance-Information, PRESENCE = optional L:10913
	SI_S1AP_DT_WUS_Assistance_Information * wUSAssistanceInformation;
	int wUSAssistanceInformation_isset;

	// ID = id-NB-IoT-PagingDRX, PRESENCE = optional L:10913
	uint8_t nBIoTPagingDRX;
	int nBIoTPagingDRX_isset;

	// ID = id-PagingCause, PRESENCE = optional L:10913
	uint8_t pagingCause;
	int pagingCause_isset;

	
} SI_S1AP_DT_PDU_Paging;


//ELEMENTARY-PROCEDURE = [2] uEContextReleaseRequest  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextReleaseRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-GWContextReleaseIndication, PRESENCE = optional L:10913
	uint8_t gWContextReleaseIndication;
	int gWContextReleaseIndication_isset;

	// ID = id-SecondaryRATDataUsageReportList, PRESENCE = optional L:10913
	SI_S1AP_DT_SecondaryRATDataUsageReportList * secondaryRATDataUsageReportList;
	int secondaryRATDataUsageReportList_isset;

	
} SI_S1AP_DT_PDU_UEContextReleaseRequest;


//ELEMENTARY-PROCEDURE = [2] uEContextRelease  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextReleaseCommand
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UE-S1AP-IDs, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UE_S1AP_IDs * uES1APIDs;
	int uES1APIDs_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	
} SI_S1AP_DT_PDU_UEContextReleaseCommand;


//ELEMENTARY-PROCEDURE = [2] uEContextRelease  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextReleaseComplete
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-InformationOnRecommendedCellsAndENBsForPaging, PRESENCE = optional L:10913
	SI_S1AP_DT_InformationOnRecommendedCellsAndENBsForPaging * informationOnRecommendedCellsAndENBsForPaging;
	int informationOnRecommendedCellsAndENBsForPaging_isset;

	// ID = id-CellIdentifierAndCELevelForCECapableUEs, PRESENCE = optional L:10913
	SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs * cellIdentifierAndCELevelForCECapableUEs;
	int cellIdentifierAndCELevelForCECapableUEs_isset;

	// ID = id-SecondaryRATDataUsageReportList, PRESENCE = optional L:10913
	SI_S1AP_DT_SecondaryRATDataUsageReportList * secondaryRATDataUsageReportList;
	int secondaryRATDataUsageReportList_isset;

	// ID = id-TimeSinceSecondaryNodeRelease, PRESENCE = optional L:10913
	SI_S1AP_DT_TimeSinceSecondaryNodeRelease * timeSinceSecondaryNodeRelease;
	int timeSinceSecondaryNodeRelease_isset;

	
} SI_S1AP_DT_PDU_UEContextReleaseComplete;


//ELEMENTARY-PROCEDURE = [2] uEContextModification  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextModificationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-SecurityKey, PRESENCE = optional L:10913
	SI_S1AP_DT_SecurityKey * securityKey;
	int securityKey_isset;

	// ID = id-SubscriberProfileIDforRFP, PRESENCE = optional L:10913
	unsigned long long int subscriberProfileIDforRFP;
	int subscriberProfileIDforRFP_isset;

	// ID = id-uEaggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_UEAggregateMaximumBitrate * uEaggregateMaximumBitrate;
	int uEaggregateMaximumBitrate_isset;

	// ID = id-CSFallbackIndicator, PRESENCE = optional L:10913
	uint8_t cSFallbackIndicator;
	int cSFallbackIndicator_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = optional L:10913
	SI_S1AP_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-CSGMembershipStatus, PRESENCE = optional L:10913
	uint8_t cSGMembershipStatus;
	int cSGMembershipStatus_isset;

	// ID = id-RegisteredLAI, PRESENCE = optional L:10913
	SI_S1AP_DT_LAI * registeredLAI;
	int registeredLAI_isset;

	// ID = id-AdditionalCSFallbackIndicator, PRESENCE = conditional L:10913
	uint8_t additionalCSFallbackIndicator;
	int additionalCSFallbackIndicator_isset;

	// ID = id-ProSeAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_ProSeAuthorized * proSeAuthorized;
	int proSeAuthorized_isset;

	// ID = id-SRVCCOperationPossible, PRESENCE = optional L:10913
	uint8_t sRVCCOperationPossible;
	int sRVCCOperationPossible_isset;

	// ID = id-SRVCCOperationNotPossible, PRESENCE = optional L:10913
	uint8_t sRVCCOperationNotPossible;
	int sRVCCOperationNotPossible_isset;

	// ID = id-V2XServicesAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_V2XServicesAuthorized * v2XServicesAuthorized;
	int v2XServicesAuthorized_isset;

	// ID = id-UESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_UESidelinkAggregateMaximumBitrate * uESidelinkAggregateMaximumBitrate;
	int uESidelinkAggregateMaximumBitrate_isset;

	// ID = id-NRUESecurityCapabilities, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESecurityCapabilities * nRUESecurityCapabilities;
	int nRUESecurityCapabilities_isset;

	// ID = id-AerialUEsubscriptionInformation, PRESENCE = optional L:10913
	uint8_t aerialUEsubscriptionInformation;
	int aerialUEsubscriptionInformation_isset;

	// ID = id-AdditionalRRMPriorityIndex, PRESENCE = optional L:10913
	SI_S1AP_DT_AdditionalRRMPriorityIndex * additionalRRMPriorityIndex;
	int additionalRRMPriorityIndex_isset;

	// ID = id-IAB-Authorized, PRESENCE = optional L:10913
	uint8_t iABAuthorized;
	int iABAuthorized_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10913
	SI_S1AP_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESidelinkAggregateMaximumBitrate * nRUESidelinkAggregateMaximumBitrate;
	int nRUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10913
	SI_S1AP_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	
} SI_S1AP_DT_PDU_UEContextModificationRequest;


//ELEMENTARY-PROCEDURE = [2] uEContextModification  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextModificationResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_UEContextModificationResponse;


//ELEMENTARY-PROCEDURE = [2] uEContextModification  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextModificationFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_UEContextModificationFailure;


//ELEMENTARY-PROCEDURE = [2] uERadioCapabilityMatch  L:10873

// L:10875
typedef struct __si_s1ap_dt_UERadioCapabilityMatchRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	
} SI_S1AP_DT_PDU_UERadioCapabilityMatchRequest;


//ELEMENTARY-PROCEDURE = [2] uERadioCapabilityMatch  L:10873

// L:10875
typedef struct __si_s1ap_dt_UERadioCapabilityMatchResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-VoiceSupportMatchIndicator, PRESENCE = mandatory L:10913
	uint8_t voiceSupportMatchIndicator;
	int voiceSupportMatchIndicator_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_UERadioCapabilityMatchResponse;


//ELEMENTARY-PROCEDURE = [2] downlinkNASTransport  L:10873

// L:10875
typedef struct __si_s1ap_dt_DownlinkNASTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-NAS-PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-HandoverRestrictionList, PRESENCE = optional L:10913
	SI_S1AP_DT_HandoverRestrictionList * handoverRestrictionList;
	int handoverRestrictionList_isset;

	// ID = id-SubscriberProfileIDforRFP, PRESENCE = optional L:10913
	unsigned long long int subscriberProfileIDforRFP;
	int subscriberProfileIDforRFP_isset;

	// ID = id-SRVCCOperationPossible, PRESENCE = optional L:10913
	uint8_t sRVCCOperationPossible;
	int sRVCCOperationPossible_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-DLNASPDUDeliveryAckRequest, PRESENCE = optional L:10913
	uint8_t dLNASPDUDeliveryAckRequest;
	int dLNASPDUDeliveryAckRequest_isset;

	// ID = id-EnhancedCoverageRestricted, PRESENCE = optional L:10913
	uint8_t enhancedCoverageRestricted;
	int enhancedCoverageRestricted_isset;

	// ID = id-NRUESecurityCapabilities, PRESENCE = optional L:10913
	SI_S1AP_DT_NRUESecurityCapabilities * nRUESecurityCapabilities;
	int nRUESecurityCapabilities_isset;

	// ID = id-CE-ModeBRestricted, PRESENCE = optional L:10913
	uint8_t cEModeBRestricted;
	int cEModeBRestricted_isset;

	// ID = id-UECapabilityInfoRequest, PRESENCE = optional L:10913
	uint8_t uECapabilityInfoRequest;
	int uECapabilityInfoRequest_isset;

	// ID = id-EndIndication, PRESENCE = optional L:10913
	uint8_t endIndication;
	int endIndication_isset;

	// ID = id-PendingDataIndication, PRESENCE = optional L:10913
	uint8_t pendingDataIndication;
	int pendingDataIndication_isset;

	// ID = id-Subscription-Based-UE-DifferentiationInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo * subscriptionBasedUEDifferentiationInfo;
	int subscriptionBasedUEDifferentiationInfo_isset;

	// ID = id-AdditionalRRMPriorityIndex, PRESENCE = optional L:10913
	SI_S1AP_DT_AdditionalRRMPriorityIndex * additionalRRMPriorityIndex;
	int additionalRRMPriorityIndex_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-Masked-IMEISV, PRESENCE = optional L:10913
	SI_S1AP_DT_Masked_IMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-CoarseUELocation, PRESENCE = optional L:10913
	SI_S1AP_DT_CoarseUELocation * coarseUELocation;
	int coarseUELocation_isset;

	
} SI_S1AP_DT_PDU_DownlinkNASTransport;


//ELEMENTARY-PROCEDURE = [2] initialUEMessage  L:10873

// L:10875
typedef struct __si_s1ap_dt_InitialUEMessage
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-NAS-PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-TAI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TAI * tAI;
	int tAI_isset;

	// ID = id-EUTRAN-CGI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_EUTRAN_CGI * eUTRANCGI;
	int eUTRANCGI_isset;

	// ID = id-RRC-Establishment-Cause, PRESENCE = mandatory L:10913
	uint8_t rRCEstablishmentCause;
	int rRCEstablishmentCause_isset;

	// ID = id-S-TMSI, PRESENCE = optional L:10913
	SI_S1AP_DT_S_TMSI * sTMSI;
	int sTMSI_isset;

	// ID = id-CSG-Id, PRESENCE = optional L:10913
	SI_S1AP_DT_CSG_Id * cSGId;
	int cSGId_isset;

	// ID = id-GUMMEI-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_GUMMEI * gUMMEIID;
	int gUMMEIID_isset;

	// ID = id-CellAccessMode, PRESENCE = optional L:10913
	uint8_t cellAccessMode;
	int cellAccessMode_isset;

	// ID = id-GW-TransportLayerAddress, PRESENCE = optional L:10913
	SI_S1AP_DT_TransportLayerAddress * gWTransportLayerAddress;
	int gWTransportLayerAddress_isset;

	// ID = id-RelayNode-Indicator, PRESENCE = optional L:10913
	uint8_t relayNodeIndicator;
	int relayNodeIndicator_isset;

	// ID = id-GUMMEIType, PRESENCE = optional L:10913
	uint8_t gUMMEIType;
	int gUMMEIType_isset;

	// ID = id-Tunnel-Information-for-BBF, PRESENCE = optional L:10913
	SI_S1AP_DT_TunnelInformation * tunnelInformationforBBF;
	int tunnelInformationforBBF_isset;

	// ID = id-SIPTO-L-GW-TransportLayerAddress, PRESENCE = optional L:10913
	SI_S1AP_DT_TransportLayerAddress * sIPTOLGWTransportLayerAddress;
	int sIPTOLGWTransportLayerAddress_isset;

	// ID = id-LHN-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_LHN_ID * lHNID;
	int lHNID_isset;

	// ID = id-MME-Group-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_MME_Group_ID * mMEGroupID;
	int mMEGroupID_isset;

	// ID = id-UE-Usage-Type, PRESENCE = optional L:10913
	unsigned long long int uEUsageType;
	int uEUsageType_isset;

	// ID = id-CE-mode-B-SupportIndicator, PRESENCE = optional L:10913
	uint8_t cEmodeBSupportIndicator;
	int cEmodeBSupportIndicator_isset;

	// ID = id-DCN-ID, PRESENCE = optional L:10913
	unsigned long long int dCNID;
	int dCNID_isset;

	// ID = id-Coverage-Level, PRESENCE = optional L:10913
	uint8_t coverageLevel;
	int coverageLevel_isset;

	// ID = id-UE-Application-Layer-Measurement-Capability, PRESENCE = optional L:10913
	SI_S1AP_DT_UE_Application_Layer_Measurement_Capability * uEApplicationLayerMeasurementCapability;
	int uEApplicationLayerMeasurementCapability_isset;

	// ID = id-EDT-Session, PRESENCE = optional L:10913
	uint8_t eDTSession;
	int eDTSession_isset;

	// ID = id-IAB-Node-Indication, PRESENCE = optional L:10913
	uint8_t iABNodeIndication;
	int iABNodeIndication_isset;

	// ID = id-LTE-NTN-TAI-Information, PRESENCE = optional L:10913
	SI_S1AP_DT_LTE_NTN_TAI_Information * lTENTNTAIInformation;
	int lTENTNTAIInformation_isset;

	// ID = id-CoarseUELocationRequested, PRESENCE = optional L:10913
	uint8_t coarseUELocationRequested;
	int coarseUELocationRequested_isset;

	
} SI_S1AP_DT_PDU_InitialUEMessage;


//ELEMENTARY-PROCEDURE = [2] uplinkNASTransport  L:10873

// L:10875
typedef struct __si_s1ap_dt_UplinkNASTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-NAS-PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-EUTRAN-CGI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_EUTRAN_CGI * eUTRANCGI;
	int eUTRANCGI_isset;

	// ID = id-TAI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TAI * tAI;
	int tAI_isset;

	// ID = id-GW-TransportLayerAddress, PRESENCE = optional L:10913
	SI_S1AP_DT_TransportLayerAddress * gWTransportLayerAddress;
	int gWTransportLayerAddress_isset;

	// ID = id-SIPTO-L-GW-TransportLayerAddress, PRESENCE = optional L:10913
	SI_S1AP_DT_TransportLayerAddress * sIPTOLGWTransportLayerAddress;
	int sIPTOLGWTransportLayerAddress_isset;

	// ID = id-LHN-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_LHN_ID * lHNID;
	int lHNID_isset;

	// ID = id-PSCellInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_PSCellInformation * pSCellInformation;
	int pSCellInformation_isset;

	// ID = id-LTE-NTN-TAI-Information, PRESENCE = optional L:10913
	SI_S1AP_DT_LTE_NTN_TAI_Information * lTENTNTAIInformation;
	int lTENTNTAIInformation_isset;

	
} SI_S1AP_DT_PDU_UplinkNASTransport;


//ELEMENTARY-PROCEDURE = [2] nASNonDeliveryIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_NASNonDeliveryIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-NAS-PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	
} SI_S1AP_DT_PDU_NASNonDeliveryIndication;


// GOT-NULL OCTET
//ELEMENTARY-PROCEDURE = [2] rerouteNASRequest  L:10873

// L:10875
typedef struct __si_s1ap_dt_RerouteNASRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = optional L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	//id-S1-Message:OCTET
	// ID = id-MME-Group-ID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_MME_Group_ID * mMEGroupID;
	int mMEGroupID_isset;

	// ID = id-Additional-GUTI, PRESENCE = optional L:10913
	SI_S1AP_DT_Additional_GUTI * additionalGUTI;
	int additionalGUTI_isset;

	// ID = id-UE-Usage-Type, PRESENCE = optional L:10913
	unsigned long long int uEUsageType;
	int uEUsageType_isset;

	
} SI_S1AP_DT_PDU_RerouteNASRequest;


//ELEMENTARY-PROCEDURE = [2] nASDeliveryIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_NASDeliveryIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	
} SI_S1AP_DT_PDU_NASDeliveryIndication;


//ELEMENTARY-PROCEDURE = [2] reset  L:10873

// L:10875
typedef struct __si_s1ap_dt_Reset
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-ResetType, PRESENCE = mandatory L:10913
	SI_S1AP_DT_ResetType * resetType;
	int resetType_isset;

	
} SI_S1AP_DT_PDU_Reset;


//ELEMENTARY-PROCEDURE = [2] reset  L:10873

// L:10875
typedef struct __si_s1ap_dt_ResetAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UE-associatedLogicalS1-ConnectionListResAck, PRESENCE = optional L:10913
	SI_S1AP_DT_UE_associatedLogicalS1_ConnectionListResAck * uEassociatedLogicalS1ConnectionListResAck;
	int uEassociatedLogicalS1ConnectionListResAck_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_ResetAcknowledge;


//ELEMENTARY-PROCEDURE = [2] errorIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_ErrorIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = optional L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = optional L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Cause, PRESENCE = optional L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-S-TMSI, PRESENCE = optional L:10913
	SI_S1AP_DT_S_TMSI * sTMSI;
	int sTMSI_isset;

	
} SI_S1AP_DT_PDU_ErrorIndication;


//ELEMENTARY-PROCEDURE = [2] s1Setup  L:10873

// L:10875
typedef struct __si_s1ap_dt_S1SetupRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Global-ENB-ID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Global_ENB_ID * globalENBID;
	int globalENBID_isset;

	// ID = id-eNBname, PRESENCE = optional L:10913
	SI_S1AP_DT_ENBname * eNBname;
	int eNBname_isset;

	// ID = id-SupportedTAs, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SupportedTAs * supportedTAs;
	int supportedTAs_isset;

	// ID = id-DefaultPagingDRX, PRESENCE = mandatory L:10913
	uint8_t defaultPagingDRX;
	int defaultPagingDRX_isset;

	// ID = id-CSG-IdList, PRESENCE = optional L:10913
	SI_S1AP_DT_CSG_IdList * cSGIdList;
	int cSGIdList_isset;

	// ID = id-UE-RetentionInformation, PRESENCE = optional L:10913
	uint8_t uERetentionInformation;
	int uERetentionInformation_isset;

	// ID = id-NB-IoT-DefaultPagingDRX, PRESENCE = optional L:10913
	uint8_t nBIoTDefaultPagingDRX;
	int nBIoTDefaultPagingDRX_isset;

	// ID = id-ConnectedengNBList, PRESENCE = optional L:10913
	SI_S1AP_DT_ConnectedengNBList * connectedengNBList;
	int connectedengNBList_isset;

	
} SI_S1AP_DT_PDU_S1SetupRequest;


//ELEMENTARY-PROCEDURE = [2] s1Setup  L:10873

// L:10875
typedef struct __si_s1ap_dt_S1SetupResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MMEname, PRESENCE = optional L:10913
	SI_S1AP_DT_MMEname * mMEname;
	int mMEname_isset;

	// ID = id-ServedGUMMEIs, PRESENCE = mandatory L:10913
	SI_S1AP_DT_ServedGUMMEIs * servedGUMMEIs;
	int servedGUMMEIs_isset;

	// ID = id-RelativeMMECapacity, PRESENCE = mandatory L:10913
	unsigned long long int relativeMMECapacity;
	int relativeMMECapacity_isset;

	// ID = id-MMERelaySupportIndicator, PRESENCE = optional L:10913
	uint8_t mMERelaySupportIndicator;
	int mMERelaySupportIndicator_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-UE-RetentionInformation, PRESENCE = optional L:10913
	uint8_t uERetentionInformation;
	int uERetentionInformation_isset;

	// ID = id-ServedDCNs, PRESENCE = optional L:10913
	SI_S1AP_DT_ServedDCNs * servedDCNs;
	int servedDCNs_isset;

	// ID = id-IAB-Supported, PRESENCE = optional L:10913
	uint8_t iABSupported;
	int iABSupported_isset;

	
} SI_S1AP_DT_PDU_S1SetupResponse;


//ELEMENTARY-PROCEDURE = [2] s1Setup  L:10873

// L:10875
typedef struct __si_s1ap_dt_S1SetupFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-TimeToWait, PRESENCE = optional L:10913
	uint8_t timeToWait;
	int timeToWait_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_S1SetupFailure;


//ELEMENTARY-PROCEDURE = [2] eNBConfigurationUpdate  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENBConfigurationUpdate
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-eNBname, PRESENCE = optional L:10913
	SI_S1AP_DT_ENBname * eNBname;
	int eNBname_isset;

	// ID = id-SupportedTAs, PRESENCE = optional L:10913
	SI_S1AP_DT_SupportedTAs * supportedTAs;
	int supportedTAs_isset;

	// ID = id-CSG-IdList, PRESENCE = optional L:10913
	SI_S1AP_DT_CSG_IdList * cSGIdList;
	int cSGIdList_isset;

	// ID = id-DefaultPagingDRX, PRESENCE = optional L:10913
	uint8_t defaultPagingDRX;
	int defaultPagingDRX_isset;

	// ID = id-NB-IoT-DefaultPagingDRX, PRESENCE = optional L:10913
	uint8_t nBIoTDefaultPagingDRX;
	int nBIoTDefaultPagingDRX_isset;

	// ID = id-ConnectedengNBToAddList, PRESENCE = optional L:10913
	SI_S1AP_DT_ConnectedengNBList * connectedengNBToAddList;
	int connectedengNBToAddList_isset;

	// ID = id-ConnectedengNBToRemoveList, PRESENCE = optional L:10913
	SI_S1AP_DT_ConnectedengNBList * connectedengNBToRemoveList;
	int connectedengNBToRemoveList_isset;

	
} SI_S1AP_DT_PDU_ENBConfigurationUpdate;


//ELEMENTARY-PROCEDURE = [2] eNBConfigurationUpdate  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENBConfigurationUpdateAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_ENBConfigurationUpdateAcknowledge;


//ELEMENTARY-PROCEDURE = [2] eNBConfigurationUpdate  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENBConfigurationUpdateFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-TimeToWait, PRESENCE = optional L:10913
	uint8_t timeToWait;
	int timeToWait_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_ENBConfigurationUpdateFailure;


//ELEMENTARY-PROCEDURE = [2] mMEConfigurationUpdate  L:10873

// L:10875
typedef struct __si_s1ap_dt_MMEConfigurationUpdate
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MMEname, PRESENCE = optional L:10913
	SI_S1AP_DT_MMEname * mMEname;
	int mMEname_isset;

	// ID = id-ServedGUMMEIs, PRESENCE = optional L:10913
	SI_S1AP_DT_ServedGUMMEIs * servedGUMMEIs;
	int servedGUMMEIs_isset;

	// ID = id-RelativeMMECapacity, PRESENCE = optional L:10913
	unsigned long long int relativeMMECapacity;
	int relativeMMECapacity_isset;

	// ID = id-ServedDCNs, PRESENCE = optional L:10913
	SI_S1AP_DT_ServedDCNs * servedDCNs;
	int servedDCNs_isset;

	
} SI_S1AP_DT_PDU_MMEConfigurationUpdate;


//ELEMENTARY-PROCEDURE = [2] mMEConfigurationUpdate  L:10873

// L:10875
typedef struct __si_s1ap_dt_MMEConfigurationUpdateAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_MMEConfigurationUpdateAcknowledge;


//ELEMENTARY-PROCEDURE = [2] mMEConfigurationUpdate  L:10873

// L:10875
typedef struct __si_s1ap_dt_MMEConfigurationUpdateFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-TimeToWait, PRESENCE = optional L:10913
	uint8_t timeToWait;
	int timeToWait_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_MMEConfigurationUpdateFailure;


//ELEMENTARY-PROCEDURE = [2] downlinkS1cdma2000tunnelling  L:10873

// L:10875
typedef struct __si_s1ap_dt_DownlinkS1cdma2000tunnelling
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	//id-E-RABSubjecttoDataForwardingList:E-RABSubjecttoDataForwardingList
	// ID = id-cdma2000HOStatus, PRESENCE = optional L:10913
	uint8_t cdma2000HOStatus;
	int cdma2000HOStatus_isset;

	// ID = id-cdma2000RATType, PRESENCE = mandatory L:10913
	uint8_t cdma2000RATType;
	int cdma2000RATType_isset;

	// ID = id-cdma2000PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cdma2000PDU * cdma2000PDU;
	int cdma2000PDU_isset;

	
} SI_S1AP_DT_PDU_DownlinkS1cdma2000tunnelling;


//ELEMENTARY-PROCEDURE = [2] uplinkS1cdma2000tunnelling  L:10873

// L:10875
typedef struct __si_s1ap_dt_UplinkS1cdma2000tunnelling
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-cdma2000RATType, PRESENCE = mandatory L:10913
	uint8_t cdma2000RATType;
	int cdma2000RATType_isset;

	// ID = id-cdma2000SectorID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cdma2000SectorID * cdma2000SectorID;
	int cdma2000SectorID_isset;

	// ID = id-cdma2000HORequiredIndication, PRESENCE = optional L:10913
	uint8_t cdma2000HORequiredIndication;
	int cdma2000HORequiredIndication_isset;

	// ID = id-cdma2000OneXSRVCCInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_Cdma2000OneXSRVCCInfo * cdma2000OneXSRVCCInfo;
	int cdma2000OneXSRVCCInfo_isset;

	// ID = id-cdma2000OneXRAND, PRESENCE = optional L:10913
	SI_S1AP_DT_Cdma2000OneXRAND * cdma2000OneXRAND;
	int cdma2000OneXRAND_isset;

	// ID = id-cdma2000PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cdma2000PDU * cdma2000PDU;
	int cdma2000PDU_isset;

	// ID = id-EUTRANRoundTripDelayEstimationInfo, PRESENCE = optional L:10913
	unsigned long long int eUTRANRoundTripDelayEstimationInfo;
	int eUTRANRoundTripDelayEstimationInfo_isset;

	
} SI_S1AP_DT_PDU_UplinkS1cdma2000tunnelling;


//ELEMENTARY-PROCEDURE = [2] uECapabilityInfoIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_UECapabilityInfoIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-UERadioCapability, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-UERadioCapabilityForPaging, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityForPaging * uERadioCapabilityForPaging;
	int uERadioCapabilityForPaging_isset;

	// ID = id-UE-Application-Layer-Measurement-Capability, PRESENCE = optional L:10913
	SI_S1AP_DT_UE_Application_Layer_Measurement_Capability * uEApplicationLayerMeasurementCapability;
	int uEApplicationLayerMeasurementCapability_isset;

	// ID = id-LTE-M-Indication, PRESENCE = optional L:10913
	uint8_t lTEMIndication;
	int lTEMIndication_isset;

	// ID = id-UERadioCapability-NR-Format, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapability * uERadioCapabilityNRFormat;
	int uERadioCapabilityNRFormat_isset;

	// ID = id-UERadioCapabilityForPaging-NR-Format, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityForPaging * uERadioCapabilityForPagingNRFormat;
	int uERadioCapabilityForPagingNRFormat_isset;

	
} SI_S1AP_DT_PDU_UECapabilityInfoIndication;


//ELEMENTARY-PROCEDURE = [2] eNBStatusTransfer  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENBStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-eNB-StatusTransfer-TransparentContainer, PRESENCE = mandatory L:10913
	SI_S1AP_DT_ENB_StatusTransfer_TransparentContainer * eNBStatusTransferTransparentContainer;
	int eNBStatusTransferTransparentContainer_isset;

	
} SI_S1AP_DT_PDU_ENBStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] mMEStatusTransfer  L:10873

// L:10875
typedef struct __si_s1ap_dt_MMEStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-eNB-StatusTransfer-TransparentContainer, PRESENCE = mandatory L:10913
	SI_S1AP_DT_ENB_StatusTransfer_TransparentContainer * eNBStatusTransferTransparentContainer;
	int eNBStatusTransferTransparentContainer_isset;

	
} SI_S1AP_DT_PDU_MMEStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] traceStart  L:10873

// L:10875
typedef struct __si_s1ap_dt_TraceStart
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-TraceActivation, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	
} SI_S1AP_DT_PDU_TraceStart;


//ELEMENTARY-PROCEDURE = [2] traceFailureIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_TraceFailureIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-E-UTRAN-Trace-ID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_UTRAN_Trace_ID * eUTRANTraceID;
	int eUTRANTraceID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	
} SI_S1AP_DT_PDU_TraceFailureIndication;


//ELEMENTARY-PROCEDURE = [2] deactivateTrace  L:10873

// L:10875
typedef struct __si_s1ap_dt_DeactivateTrace
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-E-UTRAN-Trace-ID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_UTRAN_Trace_ID * eUTRANTraceID;
	int eUTRANTraceID_isset;

	
} SI_S1AP_DT_PDU_DeactivateTrace;


//ELEMENTARY-PROCEDURE = [2] cellTrafficTrace  L:10873

// L:10875
typedef struct __si_s1ap_dt_CellTrafficTrace
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-E-UTRAN-Trace-ID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_UTRAN_Trace_ID * eUTRANTraceID;
	int eUTRANTraceID_isset;

	// ID = id-EUTRAN-CGI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_EUTRAN_CGI * eUTRANCGI;
	int eUTRANCGI_isset;

	// ID = id-TraceCollectionEntityIPAddress, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TransportLayerAddress * traceCollectionEntityIPAddress;
	int traceCollectionEntityIPAddress_isset;

	// ID = id-PrivacyIndicator, PRESENCE = optional L:10913
	uint8_t privacyIndicator;
	int privacyIndicator_isset;

	
} SI_S1AP_DT_PDU_CellTrafficTrace;


//ELEMENTARY-PROCEDURE = [2] locationReportingControl  L:10873

// L:10875
typedef struct __si_s1ap_dt_LocationReportingControl
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-RequestType, PRESENCE = mandatory L:10913
	SI_S1AP_DT_RequestType * requestType;
	int requestType_isset;

	
} SI_S1AP_DT_PDU_LocationReportingControl;


//ELEMENTARY-PROCEDURE = [2] locationReportingFailureIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_LocationReportingFailureIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	
} SI_S1AP_DT_PDU_LocationReportingFailureIndication;


//ELEMENTARY-PROCEDURE = [2] locationReport  L:10873

// L:10875
typedef struct __si_s1ap_dt_LocationReport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-EUTRAN-CGI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_EUTRAN_CGI * eUTRANCGI;
	int eUTRANCGI_isset;

	// ID = id-TAI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TAI * tAI;
	int tAI_isset;

	// ID = id-RequestType, PRESENCE = mandatory L:10913
	SI_S1AP_DT_RequestType * requestType;
	int requestType_isset;

	// ID = id-PSCellInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_PSCellInformation * pSCellInformation;
	int pSCellInformation_isset;

	// ID = id-LTE-NTN-TAI-Information, PRESENCE = optional L:10913
	SI_S1AP_DT_LTE_NTN_TAI_Information * lTENTNTAIInformation;
	int lTENTNTAIInformation_isset;

	
} SI_S1AP_DT_PDU_LocationReport;


//ELEMENTARY-PROCEDURE = [2] overloadStart  L:10873

// L:10875
typedef struct __si_s1ap_dt_OverloadStart
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-OverloadResponse, PRESENCE = mandatory L:10913
	SI_S1AP_DT_OverloadResponse * overloadResponse;
	int overloadResponse_isset;

	// ID = id-GUMMEIList, PRESENCE = optional L:10913
	SI_S1AP_DT_GUMMEIList * gUMMEIList;
	int gUMMEIList_isset;

	// ID = id-TrafficLoadReductionIndication, PRESENCE = optional L:10913
	unsigned long long int trafficLoadReductionIndication;
	int trafficLoadReductionIndication_isset;

	
} SI_S1AP_DT_PDU_OverloadStart;


//ELEMENTARY-PROCEDURE = [2] overloadStop  L:10873

// L:10875
typedef struct __si_s1ap_dt_OverloadStop
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GUMMEIList, PRESENCE = optional L:10913
	SI_S1AP_DT_GUMMEIList * gUMMEIList;
	int gUMMEIList_isset;

	
} SI_S1AP_DT_PDU_OverloadStop;


//ELEMENTARY-PROCEDURE = [2] writeReplaceWarning  L:10873

// L:10875
typedef struct __si_s1ap_dt_WriteReplaceWarningRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MessageIdentifier, PRESENCE = mandatory L:10913
	SI_S1AP_DT_MessageIdentifier * messageIdentifier;
	int messageIdentifier_isset;

	// ID = id-SerialNumber, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SerialNumber * serialNumber;
	int serialNumber_isset;

	// ID = id-WarningAreaList, PRESENCE = optional L:10913
	SI_S1AP_DT_WarningAreaList * warningAreaList;
	int warningAreaList_isset;

	// ID = id-RepetitionPeriod, PRESENCE = mandatory L:10913
	unsigned long long int repetitionPeriod;
	int repetitionPeriod_isset;

	// ID = id-ExtendedRepetitionPeriod, PRESENCE = optional L:10913
	unsigned long long int extendedRepetitionPeriod;
	int extendedRepetitionPeriod_isset;

	// ID = id-NumberofBroadcastRequest, PRESENCE = mandatory L:10913
	unsigned long long int numberofBroadcastRequest;
	int numberofBroadcastRequest_isset;

	// ID = id-WarningType, PRESENCE = optional L:10913
	SI_S1AP_DT_WarningType * warningType;
	int warningType_isset;

	// ID = id-WarningSecurityInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_WarningSecurityInfo * warningSecurityInfo;
	int warningSecurityInfo_isset;

	// ID = id-DataCodingScheme, PRESENCE = optional L:10913
	SI_S1AP_DT_DataCodingScheme * dataCodingScheme;
	int dataCodingScheme_isset;

	// ID = id-WarningMessageContents, PRESENCE = optional L:10913
	SI_S1AP_DT_WarningMessageContents * warningMessageContents;
	int warningMessageContents_isset;

	// ID = id-ConcurrentWarningMessageIndicator, PRESENCE = optional L:10913
	uint8_t concurrentWarningMessageIndicator;
	int concurrentWarningMessageIndicator_isset;

	// ID = id-WarningAreaCoordinates, PRESENCE = optional L:10913
	SI_S1AP_DT_WarningAreaCoordinates * warningAreaCoordinates;
	int warningAreaCoordinates_isset;

	
} SI_S1AP_DT_PDU_WriteReplaceWarningRequest;


//ELEMENTARY-PROCEDURE = [2] writeReplaceWarning  L:10873

// L:10875
typedef struct __si_s1ap_dt_WriteReplaceWarningResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MessageIdentifier, PRESENCE = mandatory L:10913
	SI_S1AP_DT_MessageIdentifier * messageIdentifier;
	int messageIdentifier_isset;

	// ID = id-SerialNumber, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SerialNumber * serialNumber;
	int serialNumber_isset;

	// ID = id-BroadcastCompletedAreaList, PRESENCE = optional L:10913
	SI_S1AP_DT_BroadcastCompletedAreaList * broadcastCompletedAreaList;
	int broadcastCompletedAreaList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_WriteReplaceWarningResponse;


//ELEMENTARY-PROCEDURE = [2] eNBDirectInformationTransfer  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENBDirectInformationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Inter-SystemInformationTransferTypeEDT, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Inter_SystemInformationTransferType * interSystemInformationTransferTypeEDT;
	int interSystemInformationTransferTypeEDT_isset;

	
} SI_S1AP_DT_PDU_ENBDirectInformationTransfer;


//ELEMENTARY-PROCEDURE = [2] mMEDirectInformationTransfer  L:10873

// L:10875
typedef struct __si_s1ap_dt_MMEDirectInformationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Inter-SystemInformationTransferTypeMDT, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Inter_SystemInformationTransferType * interSystemInformationTransferTypeMDT;
	int interSystemInformationTransferTypeMDT_isset;

	
} SI_S1AP_DT_PDU_MMEDirectInformationTransfer;


//ELEMENTARY-PROCEDURE = [2] eNBConfigurationTransfer  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENBConfigurationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SONConfigurationTransferECT, PRESENCE = optional L:10913
	SI_S1AP_DT_SONConfigurationTransfer * sONConfigurationTransferECT;
	int sONConfigurationTransferECT_isset;

	// ID = id-EN-DCSONConfigurationTransfer-ECT, PRESENCE = optional L:10913
	SI_S1AP_DT_EN_DCSONConfigurationTransfer * eNDCSONConfigurationTransferECT;
	int eNDCSONConfigurationTransferECT_isset;

	// ID = id-IntersystemSONConfigurationTransferECT, PRESENCE = optional L:10913
	SI_S1AP_DT_IntersystemSONConfigurationTransfer * intersystemSONConfigurationTransferECT;
	int intersystemSONConfigurationTransferECT_isset;

	
} SI_S1AP_DT_PDU_ENBConfigurationTransfer;


//ELEMENTARY-PROCEDURE = [2] mMEConfigurationTransfer  L:10873

// L:10875
typedef struct __si_s1ap_dt_MMEConfigurationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SONConfigurationTransferMCT, PRESENCE = optional L:10913
	SI_S1AP_DT_SONConfigurationTransfer * sONConfigurationTransferMCT;
	int sONConfigurationTransferMCT_isset;

	// ID = id-EN-DCSONConfigurationTransfer-MCT, PRESENCE = optional L:10913
	SI_S1AP_DT_EN_DCSONConfigurationTransfer * eNDCSONConfigurationTransferMCT;
	int eNDCSONConfigurationTransferMCT_isset;

	// ID = id-IntersystemSONConfigurationTransferMCT, PRESENCE = optional L:10913
	SI_S1AP_DT_IntersystemSONConfigurationTransfer * intersystemSONConfigurationTransferMCT;
	int intersystemSONConfigurationTransferMCT_isset;

	
} SI_S1AP_DT_PDU_MMEConfigurationTransfer;


//ELEMENTARY-PROCEDURE = [2] privateMessage  L:10873

// L:10875
typedef struct __si_s1ap_dt_PrivateMessage
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_PrivateMessage;


//ELEMENTARY-PROCEDURE = [2] kill  L:10873

// L:10875
typedef struct __si_s1ap_dt_KillRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MessageIdentifier, PRESENCE = mandatory L:10913
	SI_S1AP_DT_MessageIdentifier * messageIdentifier;
	int messageIdentifier_isset;

	// ID = id-SerialNumber, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SerialNumber * serialNumber;
	int serialNumber_isset;

	// ID = id-WarningAreaList, PRESENCE = optional L:10913
	SI_S1AP_DT_WarningAreaList * warningAreaList;
	int warningAreaList_isset;

	// ID = id-KillAllWarningMessages, PRESENCE = optional L:10913
	uint8_t killAllWarningMessages;
	int killAllWarningMessages_isset;

	
} SI_S1AP_DT_PDU_KillRequest;


//ELEMENTARY-PROCEDURE = [2] kill  L:10873

// L:10875
typedef struct __si_s1ap_dt_KillResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MessageIdentifier, PRESENCE = mandatory L:10913
	SI_S1AP_DT_MessageIdentifier * messageIdentifier;
	int messageIdentifier_isset;

	// ID = id-SerialNumber, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SerialNumber * serialNumber;
	int serialNumber_isset;

	// ID = id-BroadcastCancelledAreaList, PRESENCE = optional L:10913
	SI_S1AP_DT_BroadcastCancelledAreaList * broadcastCancelledAreaList;
	int broadcastCancelledAreaList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_KillResponse;


//ELEMENTARY-PROCEDURE = [2] pWSRestartIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_PWSRestartIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ECGIListForRestart, PRESENCE = mandatory L:10913
	SI_S1AP_DT_ECGIListForRestart * eCGIListForRestart;
	int eCGIListForRestart_isset;

	// ID = id-Global-ENB-ID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Global_ENB_ID * globalENBID;
	int globalENBID_isset;

	// ID = id-TAIListForRestart, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TAIListForRestart * tAIListForRestart;
	int tAIListForRestart_isset;

	// ID = id-EmergencyAreaIDListForRestart, PRESENCE = optional L:10913
	SI_S1AP_DT_EmergencyAreaIDListForRestart * emergencyAreaIDListForRestart;
	int emergencyAreaIDListForRestart_isset;

	
} SI_S1AP_DT_PDU_PWSRestartIndication;


//ELEMENTARY-PROCEDURE = [2] pWSFailureIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_PWSFailureIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PWSfailedECGIList, PRESENCE = mandatory L:10913
	SI_S1AP_DT_PWSfailedECGIList * pWSfailedECGIList;
	int pWSfailedECGIList_isset;

	// ID = id-Global-ENB-ID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Global_ENB_ID * globalENBID;
	int globalENBID_isset;

	
} SI_S1AP_DT_PDU_PWSFailureIndication;


//ELEMENTARY-PROCEDURE = [2] downlinkUEAssociatedLPPaTransport  L:10873

// L:10875
typedef struct __si_s1ap_dt_DownlinkUEAssociatedLPPaTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Routing-ID, PRESENCE = mandatory L:10913
	unsigned long long int routingID;
	int routingID_isset;

	// ID = id-LPPa-PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_LPPa_PDU * lPPaPDU;
	int lPPaPDU_isset;

	
} SI_S1AP_DT_PDU_DownlinkUEAssociatedLPPaTransport;


//ELEMENTARY-PROCEDURE = [2] uplinkUEAssociatedLPPaTransport  L:10873

// L:10875
typedef struct __si_s1ap_dt_UplinkUEAssociatedLPPaTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Routing-ID, PRESENCE = mandatory L:10913
	unsigned long long int routingID;
	int routingID_isset;

	// ID = id-LPPa-PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_LPPa_PDU * lPPaPDU;
	int lPPaPDU_isset;

	
} SI_S1AP_DT_PDU_UplinkUEAssociatedLPPaTransport;


//ELEMENTARY-PROCEDURE = [2] downlinkNonUEAssociatedLPPaTransport  L:10873

// L:10875
typedef struct __si_s1ap_dt_DownlinkNonUEAssociatedLPPaTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Routing-ID, PRESENCE = mandatory L:10913
	unsigned long long int routingID;
	int routingID_isset;

	// ID = id-LPPa-PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_LPPa_PDU * lPPaPDU;
	int lPPaPDU_isset;

	
} SI_S1AP_DT_PDU_DownlinkNonUEAssociatedLPPaTransport;


//ELEMENTARY-PROCEDURE = [2] uplinkNonUEAssociatedLPPaTransport  L:10873

// L:10875
typedef struct __si_s1ap_dt_UplinkNonUEAssociatedLPPaTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Routing-ID, PRESENCE = mandatory L:10913
	unsigned long long int routingID;
	int routingID_isset;

	// ID = id-LPPa-PDU, PRESENCE = mandatory L:10913
	SI_S1AP_DT_LPPa_PDU * lPPaPDU;
	int lPPaPDU_isset;

	
} SI_S1AP_DT_PDU_UplinkNonUEAssociatedLPPaTransport;


// GOT-NULL E-RABToBeModifiedListBearerModInd
// GOT-NULL E-RABNotToBeModifiedListBearerModInd
//ELEMENTARY-PROCEDURE = [2] e-RABModificationIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABModificationIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	//id-E-RABToBeModifiedListBearerModInd:E-RABToBeModifiedListBearerModInd
	//id-E-RABNotToBeModifiedListBearerModInd:E-RABNotToBeModifiedListBearerModInd
	// ID = id-CSGMembershipInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_CSGMembershipInfo * cSGMembershipInfo;
	int cSGMembershipInfo_isset;

	// ID = id-Tunnel-Information-for-BBF, PRESENCE = optional L:10913
	SI_S1AP_DT_TunnelInformation * tunnelInformationforBBF;
	int tunnelInformationforBBF_isset;

	// ID = id-SecondaryRATDataUsageReportList, PRESENCE = optional L:10913
	SI_S1AP_DT_SecondaryRATDataUsageReportList * secondaryRATDataUsageReportList;
	int secondaryRATDataUsageReportList_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_S1AP_DT_PDU_E_RABModificationIndication;


//ELEMENTARY-PROCEDURE = [2] e-RABModificationIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABModificationConfirm
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-E-RABModifyListBearerModConf, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABModifyListBearerModConf * eRABModifyListBearerModConf;
	int eRABModifyListBearerModConf_isset;

	// ID = id-E-RABFailedToModifyListBearerModConf, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABList * eRABFailedToModifyListBearerModConf;
	int eRABFailedToModifyListBearerModConf_isset;

	// ID = id-E-RABToBeReleasedListBearerModConf, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABList * eRABToBeReleasedListBearerModConf;
	int eRABToBeReleasedListBearerModConf_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-CSGMembershipStatus, PRESENCE = optional L:10913
	uint8_t cSGMembershipStatus;
	int cSGMembershipStatus_isset;

	
} SI_S1AP_DT_PDU_E_RABModificationConfirm;


//ELEMENTARY-PROCEDURE = [2] uEContextModificationIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextModificationIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-CSGMembershipInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_CSGMembershipInfo * cSGMembershipInfo;
	int cSGMembershipInfo_isset;

	
} SI_S1AP_DT_PDU_UEContextModificationIndication;


//ELEMENTARY-PROCEDURE = [2] uEContextModificationIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextModificationConfirm
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-CSGMembershipStatus, PRESENCE = optional L:10913
	uint8_t cSGMembershipStatus;
	int cSGMembershipStatus_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_UEContextModificationConfirm;


//ELEMENTARY-PROCEDURE = [2] uEContextSuspend  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextSuspendRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-InformationOnRecommendedCellsAndENBsForPaging, PRESENCE = optional L:10913
	SI_S1AP_DT_InformationOnRecommendedCellsAndENBsForPaging * informationOnRecommendedCellsAndENBsForPaging;
	int informationOnRecommendedCellsAndENBsForPaging_isset;

	// ID = id-CellIdentifierAndCELevelForCECapableUEs, PRESENCE = optional L:10913
	SI_S1AP_DT_CellIdentifierAndCELevelForCECapableUEs * cellIdentifierAndCELevelForCECapableUEs;
	int cellIdentifierAndCELevelForCECapableUEs_isset;

	// ID = id-SecondaryRATDataUsageReportList, PRESENCE = optional L:10913
	SI_S1AP_DT_SecondaryRATDataUsageReportList * secondaryRATDataUsageReportList;
	int secondaryRATDataUsageReportList_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-TimeSinceSecondaryNodeRelease, PRESENCE = optional L:10913
	SI_S1AP_DT_TimeSinceSecondaryNodeRelease * timeSinceSecondaryNodeRelease;
	int timeSinceSecondaryNodeRelease_isset;

	
} SI_S1AP_DT_PDU_UEContextSuspendRequest;


//ELEMENTARY-PROCEDURE = [2] uEContextSuspend  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextSuspendResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-SecurityContext, PRESENCE = optional L:10913
	SI_S1AP_DT_SecurityContext * securityContext;
	int securityContext_isset;

	
} SI_S1AP_DT_PDU_UEContextSuspendResponse;


// GOT-NULL E-RABFailedToResumeListResumeReq
//ELEMENTARY-PROCEDURE = [2] uEContextResume  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextResumeRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	//id-E-RABFailedToResumeListResumeReq:E-RABFailedToResumeListResumeReq
	// ID = id-RRC-Resume-Cause, PRESENCE = optional L:10913
	uint8_t rRCResumeCause;
	int rRCResumeCause_isset;

	
} SI_S1AP_DT_PDU_UEContextResumeRequest;


// GOT-NULL E-RABFailedToResumeListResumeRes
//ELEMENTARY-PROCEDURE = [2] uEContextResume  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextResumeResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	//id-E-RABFailedToResumeListResumeRes:E-RABFailedToResumeListResumeRes
	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-SecurityContext, PRESENCE = optional L:10913
	SI_S1AP_DT_SecurityContext * securityContext;
	int securityContext_isset;

	// ID = id-PendingDataIndication, PRESENCE = optional L:10913
	uint8_t pendingDataIndication;
	int pendingDataIndication_isset;

	
} SI_S1AP_DT_PDU_UEContextResumeResponse;


//ELEMENTARY-PROCEDURE = [2] uEContextResume  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEContextResumeFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10913
	SI_S1AP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_UEContextResumeFailure;


//ELEMENTARY-PROCEDURE = [2] connectionEstablishmentIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_ConnectionEstablishmentIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-EnhancedCoverageRestricted, PRESENCE = optional L:10913
	uint8_t enhancedCoverageRestricted;
	int enhancedCoverageRestricted_isset;

	// ID = id-DL-CP-SecurityInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_DL_CP_SecurityInformation * dLCPSecurityInformation;
	int dLCPSecurityInformation_isset;

	// ID = id-CE-ModeBRestricted, PRESENCE = optional L:10913
	uint8_t cEModeBRestricted;
	int cEModeBRestricted_isset;

	// ID = id-EndIndication, PRESENCE = optional L:10913
	uint8_t endIndication;
	int endIndication_isset;

	// ID = id-Subscription-Based-UE-DifferentiationInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo * subscriptionBasedUEDifferentiationInfo;
	int subscriptionBasedUEDifferentiationInfo_isset;

	// ID = id-UE-Level-QoS-Parameters, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABLevelQoSParameters * uELevelQoSParameters;
	int uELevelQoSParameters_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-Masked-IMEISV, PRESENCE = optional L:10913
	SI_S1AP_DT_Masked_IMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-CoarseUELocation, PRESENCE = optional L:10913
	SI_S1AP_DT_CoarseUELocation * coarseUELocation;
	int coarseUELocation_isset;

	
} SI_S1AP_DT_PDU_ConnectionEstablishmentIndication;


//ELEMENTARY-PROCEDURE = [2] retrieveUEInformation  L:10873

// L:10875
typedef struct __si_s1ap_dt_RetrieveUEInformation
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-S-TMSI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_S_TMSI * sTMSI;
	int sTMSI_isset;

	
} SI_S1AP_DT_PDU_RetrieveUEInformation;


//ELEMENTARY-PROCEDURE = [2] uEInformationTransfer  L:10873

// L:10875
typedef struct __si_s1ap_dt_UEInformationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-S-TMSI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_S_TMSI * sTMSI;
	int sTMSI_isset;

	// ID = id-UE-Level-QoS-Parameters, PRESENCE = optional L:10913
	SI_S1AP_DT_E_RABLevelQoSParameters * uELevelQoSParameters;
	int uELevelQoSParameters_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10913
	SI_S1AP_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-Subscription-Based-UE-DifferentiationInfo, PRESENCE = optional L:10913
	SI_S1AP_DT_Subscription_Based_UE_DifferentiationInfo * subscriptionBasedUEDifferentiationInfo;
	int subscriptionBasedUEDifferentiationInfo_isset;

	// ID = id-PendingDataIndication, PRESENCE = optional L:10913
	uint8_t pendingDataIndication;
	int pendingDataIndication_isset;

	// ID = id-Masked-IMEISV, PRESENCE = optional L:10913
	SI_S1AP_DT_Masked_IMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	
} SI_S1AP_DT_PDU_UEInformationTransfer;


//ELEMENTARY-PROCEDURE = [2] eNBCPRelocationIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_ENBCPRelocationIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-S-TMSI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_S_TMSI * sTMSI;
	int sTMSI_isset;

	// ID = id-EUTRAN-CGI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_EUTRAN_CGI * eUTRANCGI;
	int eUTRANCGI_isset;

	// ID = id-TAI, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TAI * tAI;
	int tAI_isset;

	// ID = id-UL-CP-SecurityInformation, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UL_CP_SecurityInformation * uLCPSecurityInformation;
	int uLCPSecurityInformation_isset;

	// ID = id-LTE-NTN-TAI-Information, PRESENCE = optional L:10913
	SI_S1AP_DT_LTE_NTN_TAI_Information * lTENTNTAIInformation;
	int lTENTNTAIInformation_isset;

	
} SI_S1AP_DT_PDU_ENBCPRelocationIndication;


//ELEMENTARY-PROCEDURE = [2] mMECPRelocationIndication  L:10873

// L:10875
typedef struct __si_s1ap_dt_MMECPRelocationIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	
} SI_S1AP_DT_PDU_MMECPRelocationIndication;


//ELEMENTARY-PROCEDURE = [2] secondaryRATDataUsageReport  L:10873

// L:10875
typedef struct __si_s1ap_dt_SecondaryRATDataUsageReport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MME-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int mMEUES1APID;
	int mMEUES1APID_isset;

	// ID = id-eNB-UE-S1AP-ID, PRESENCE = mandatory L:10913
	unsigned long long int eNBUES1APID;
	int eNBUES1APID_isset;

	// ID = id-SecondaryRATDataUsageReportList, PRESENCE = mandatory L:10913
	SI_S1AP_DT_SecondaryRATDataUsageReportList * secondaryRATDataUsageReportList;
	int secondaryRATDataUsageReportList_isset;

	// ID = id-HandoverFlag, PRESENCE = optional L:10913
	uint8_t handoverFlag;
	int handoverFlag_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-TimeSinceSecondaryNodeRelease, PRESENCE = optional L:10913
	SI_S1AP_DT_TimeSinceSecondaryNodeRelease * timeSinceSecondaryNodeRelease;
	int timeSinceSecondaryNodeRelease_isset;

	
} SI_S1AP_DT_PDU_SecondaryRATDataUsageReport;


//ELEMENTARY-PROCEDURE = [2] uERadioCapabilityIDMapping  L:10873

// L:10875
typedef struct __si_s1ap_dt_UERadioCapabilityIDMappingRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UERadioCapabilityID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	
} SI_S1AP_DT_PDU_UERadioCapabilityIDMappingRequest;


//ELEMENTARY-PROCEDURE = [2] uERadioCapabilityIDMapping  L:10873

// L:10875
typedef struct __si_s1ap_dt_UERadioCapabilityIDMappingResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UERadioCapabilityID, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-UERadioCapability, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10913
	SI_S1AP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_S1AP_DT_PDU_UERadioCapabilityIDMappingResponse;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABDataForwardingItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABDataForwardingItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeSetupItemHOReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Data-Forwarding-Not-Possible, PRESENCE = optional L:10913
	uint8_t dataForwardingNotPossible;
	int dataForwardingNotPossible_isset;

	// ID = id-BearerType, PRESENCE = optional L:10913
	uint8_t bearerType;
	int bearerType_isset;

	// ID = id-Ethernet-Type, PRESENCE = optional L:10913
	uint8_t ethernetType;
	int ethernetType_isset;

	// ID = id-SecurityIndication, PRESENCE = optional L:10913
	SI_S1AP_DT_SecurityIndication * securityIndication;
	int securityIndication_isset;

	
} SI_S1AP_DT_PDU_E_RABToBeSetupItemHOReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABAdmittedItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABAdmittedItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABFailedToSetupItemHOReqAckExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABFailedToSetupItemHOReqAckExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeSwitchedDLItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SecurityIndication, PRESENCE = optional L:10913
	SI_S1AP_DT_SecurityIndication * securityIndication;
	int securityIndication_isset;

	
} SI_S1AP_DT_PDU_E_RABToBeSwitchedDLItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeSwitchedULItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABToBeSwitchedULItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeUpdatedItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABToBeUpdatedItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeSetupItemBearerSUReqIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABToBeSetupItemBearerSUReq, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABToBeSetupItemBearerSUReq * eRABToBeSetupItemBearerSUReq;
	int eRABToBeSetupItemBearerSUReq_isset;

	
} SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeSetupItemBearerSUReqExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Correlation-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_Correlation_ID * correlationID;
	int correlationID_isset;

	// ID = id-SIPTO-Correlation-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_Correlation_ID * sIPTOCorrelationID;
	int sIPTOCorrelationID_isset;

	// ID = id-BearerType, PRESENCE = optional L:10913
	uint8_t bearerType;
	int bearerType_isset;

	// ID = id-Ethernet-Type, PRESENCE = optional L:10913
	uint8_t ethernetType;
	int ethernetType_isset;

	// ID = id-SecurityIndication, PRESENCE = optional L:10913
	SI_S1AP_DT_SecurityIndication * securityIndication;
	int securityIndication_isset;

	
} SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABSetupItemBearerSUResIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABSetupItemBearerSURes, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABSetupItemBearerSURes * eRABSetupItemBearerSURes;
	int eRABSetupItemBearerSURes_isset;

	
} SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABSetupItemBearerSUResExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeModifiedItemBearerModReqIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABToBeModifiedItemBearerModReq, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABToBeModifiedItemBearerModReq * eRABToBeModifiedItemBearerModReq;
	int eRABToBeModifiedItemBearerModReq_isset;

	
} SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModReqIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeModifyItemBearerModReqExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TransportInformation, PRESENCE = optional L:10913
	SI_S1AP_DT_TransportInformation * transportInformation;
	int transportInformation_isset;

	
} SI_S1AP_DT_PDU_E_RABToBeModifyItemBearerModReqExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModResIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABModifyItemBearerModRes, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABModifyItemBearerModRes * eRABModifyItemBearerModRes;
	int eRABModifyItemBearerModRes_isset;

	
} SI_S1AP_DT_PDU_E_RABModifyItemBearerModResIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModResExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABModifyItemBearerModResExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABReleaseItemBearerRelCompIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABReleaseItemBearerRelComp, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABReleaseItemBearerRelComp * eRABReleaseItemBearerRelComp;
	int eRABReleaseItemBearerRelComp_isset;

	
} SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABReleaseItemBearerRelCompExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeSetupItemCtxtSUReqIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABToBeSetupItemCtxtSUReq, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABToBeSetupItemCtxtSUReq * eRABToBeSetupItemCtxtSUReq;
	int eRABToBeSetupItemCtxtSUReq_isset;

	
} SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeSetupItemCtxtSUReqExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Correlation-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_Correlation_ID * correlationID;
	int correlationID_isset;

	// ID = id-SIPTO-Correlation-ID, PRESENCE = optional L:10913
	SI_S1AP_DT_Correlation_ID * sIPTOCorrelationID;
	int sIPTOCorrelationID_isset;

	// ID = id-BearerType, PRESENCE = optional L:10913
	uint8_t bearerType;
	int bearerType_isset;

	// ID = id-Ethernet-Type, PRESENCE = optional L:10913
	uint8_t ethernetType;
	int ethernetType_isset;

	// ID = id-SecurityIndication, PRESENCE = optional L:10913
	SI_S1AP_DT_SecurityIndication * securityIndication;
	int securityIndication_isset;

	
} SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABSetupItemCtxtSUResIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABSetupItemCtxtSURes, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABSetupItemCtxtSURes * eRABSetupItemCtxtSURes;
	int eRABSetupItemCtxtSURes_isset;

	
} SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABSetupItemCtxtSUResExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TAIItemIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TAIItem, PRESENCE = mandatory L:10913
	SI_S1AP_DT_TAIItem * tAIItem;
	int tAIItem_isset;

	
} SI_S1AP_DT_PDU_TAIItemIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_TAIItemExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_TAIItemExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionItemRes
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UE-associatedLogicalS1-ConnectionItem, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UE_associatedLogicalS1_ConnectionItem * uEassociatedLogicalS1ConnectionItem;
	int uEassociatedLogicalS1ConnectionItem_isset;

	
} SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemRes;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_UE_associatedLogicalS1_ConnectionItemResAck
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UE-associatedLogicalS1-ConnectionItem, PRESENCE = mandatory L:10913
	SI_S1AP_DT_UE_associatedLogicalS1_ConnectionItem * uEassociatedLogicalS1ConnectionItem;
	int uEassociatedLogicalS1ConnectionItem_isset;

	
} SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemResAck;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABToBeModifiedItemBearerModInd_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABNotToBeModifiedItemBearerModInd_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_CSGMembershipInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_CSGMembershipInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModConfIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-E-RABModifyItemBearerModConf, PRESENCE = mandatory L:10913
	SI_S1AP_DT_E_RABModifyItemBearerModConf * eRABModifyItemBearerModConf;
	int eRABModifyItemBearerModConf_isset;

	
} SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABModifyItemBearerModConfExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABFailedToResumeItemResumeReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10873

// L:10875
typedef struct __si_s1ap_dt_E_RABFailedToResumeItemResumeRes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs;


void __si_s1ap_debug_pdu( uint8_t * buffer, int len);


//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Additional_GUTI_ExtIEs( SI_S1AP_DT_PDU_Additional_GUTI_ExtIEs * objPDUAdditional_GUTI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Additional_GUTI_ExtIEs( SI_S1AP_DT_PDU_Additional_GUTI_ExtIEs * objPDUAdditional_GUTI_ExtIEs);
void __si_s1ap_debug_PDU_Additional_GUTI_ExtIEs( char * key, SI_S1AP_DT_PDU_Additional_GUTI_ExtIEs * objPDUAdditional_GUTI_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Additional_GUTI_ExtIEs( SI_S1AP_DT_PDU_Additional_GUTI_ExtIEs ** objPDUAdditional_GUTI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_AllocationAndRetentionPriority_ExtIEs( SI_S1AP_DT_PDU_AllocationAndRetentionPriority_ExtIEs * objPDUAllocationAndRetentionPriority_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_AllocationAndRetentionPriority_ExtIEs( SI_S1AP_DT_PDU_AllocationAndRetentionPriority_ExtIEs * objPDUAllocationAndRetentionPriority_ExtIEs);
void __si_s1ap_debug_PDU_AllocationAndRetentionPriority_ExtIEs( char * key, SI_S1AP_DT_PDU_AllocationAndRetentionPriority_ExtIEs * objPDUAllocationAndRetentionPriority_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_AllocationAndRetentionPriority_ExtIEs( SI_S1AP_DT_PDU_AllocationAndRetentionPriority_ExtIEs ** objPDUAllocationAndRetentionPriority_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_InformationForCECapableUEs_ExtIEs( SI_S1AP_DT_PDU_InformationForCECapableUEs_ExtIEs * objPDUInformationForCECapableUEs_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_InformationForCECapableUEs_ExtIEs( SI_S1AP_DT_PDU_InformationForCECapableUEs_ExtIEs * objPDUInformationForCECapableUEs_ExtIEs);
void __si_s1ap_debug_PDU_InformationForCECapableUEs_ExtIEs( char * key, SI_S1AP_DT_PDU_InformationForCECapableUEs_ExtIEs * objPDUInformationForCECapableUEs_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_InformationForCECapableUEs_ExtIEs( SI_S1AP_DT_PDU_InformationForCECapableUEs_ExtIEs ** objPDUInformationForCECapableUEs_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_AssistanceDataForPaging_ExtIEs( SI_S1AP_DT_PDU_AssistanceDataForPaging_ExtIEs * objPDUAssistanceDataForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_AssistanceDataForPaging_ExtIEs( SI_S1AP_DT_PDU_AssistanceDataForPaging_ExtIEs * objPDUAssistanceDataForPaging_ExtIEs);
void __si_s1ap_debug_PDU_AssistanceDataForPaging_ExtIEs( char * key, SI_S1AP_DT_PDU_AssistanceDataForPaging_ExtIEs * objPDUAssistanceDataForPaging_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_AssistanceDataForPaging_ExtIEs( SI_S1AP_DT_PDU_AssistanceDataForPaging_ExtIEs ** objPDUAssistanceDataForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_AssistanceDataForRecommendedCells_ExtIEs( SI_S1AP_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs * objPDUAssistanceDataForRecommendedCells_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_AssistanceDataForRecommendedCells_ExtIEs( SI_S1AP_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs * objPDUAssistanceDataForRecommendedCells_ExtIEs);
void __si_s1ap_debug_PDU_AssistanceDataForRecommendedCells_ExtIEs( char * key, SI_S1AP_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs * objPDUAssistanceDataForRecommendedCells_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_AssistanceDataForRecommendedCells_ExtIEs( SI_S1AP_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs ** objPDUAssistanceDataForRecommendedCells_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Bearers_SubjectToStatusTransfer_ItemIEs( SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemIEs * objPDUBearers_SubjectToStatusTransfer_ItemIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Bearers_SubjectToStatusTransfer_ItemIEs( SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemIEs * objPDUBearers_SubjectToStatusTransfer_ItemIEs);
void __si_s1ap_debug_PDU_Bearers_SubjectToStatusTransfer_ItemIEs( char * key, SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemIEs * objPDUBearers_SubjectToStatusTransfer_ItemIEs, int lvl);
int __si_s1ap_Decode_PDU_Bearers_SubjectToStatusTransfer_ItemIEs( SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemIEs ** objPDUBearers_SubjectToStatusTransfer_ItemIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs( SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs * objPDUBearers_SubjectToStatusTransfer_ItemExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs( SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs * objPDUBearers_SubjectToStatusTransfer_ItemExtIEs);
void __si_s1ap_debug_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs( char * key, SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs * objPDUBearers_SubjectToStatusTransfer_ItemExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs( SI_S1AP_DT_PDU_Bearers_SubjectToStatusTransfer_ItemExtIEs ** objPDUBearers_SubjectToStatusTransfer_ItemExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs( SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs * objPDUBearers_SubjectToEarlyStatusTransfer_ItemIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs( SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs * objPDUBearers_SubjectToEarlyStatusTransfer_ItemIEs);
void __si_s1ap_debug_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs( char * key, SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs * objPDUBearers_SubjectToEarlyStatusTransfer_ItemIEs, int lvl);
int __si_s1ap_Decode_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs( SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemIEs ** objPDUBearers_SubjectToEarlyStatusTransfer_ItemIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs( SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs * objPDUBearers_SubjectToEarlyStatusTransfer_ItemExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs( SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs * objPDUBearers_SubjectToEarlyStatusTransfer_ItemExtIEs);
void __si_s1ap_debug_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs( char * key, SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs * objPDUBearers_SubjectToEarlyStatusTransfer_ItemExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs( SI_S1AP_DT_PDU_Bearers_SubjectToEarlyStatusTransfer_ItemExtIEs ** objPDUBearers_SubjectToEarlyStatusTransfer_ItemExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Bearers_SubjectToDLDiscarding_ItemIEs( SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemIEs * objPDUBearers_SubjectToDLDiscarding_ItemIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Bearers_SubjectToDLDiscarding_ItemIEs( SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemIEs * objPDUBearers_SubjectToDLDiscarding_ItemIEs);
void __si_s1ap_debug_PDU_Bearers_SubjectToDLDiscarding_ItemIEs( char * key, SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemIEs * objPDUBearers_SubjectToDLDiscarding_ItemIEs, int lvl);
int __si_s1ap_Decode_PDU_Bearers_SubjectToDLDiscarding_ItemIEs( SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemIEs ** objPDUBearers_SubjectToDLDiscarding_ItemIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs( SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs * objPDUBearers_SubjectToDLDiscarding_ItemExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs( SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs * objPDUBearers_SubjectToDLDiscarding_ItemExtIEs);
void __si_s1ap_debug_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs( char * key, SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs * objPDUBearers_SubjectToDLDiscarding_ItemExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs( SI_S1AP_DT_PDU_Bearers_SubjectToDLDiscarding_ItemExtIEs ** objPDUBearers_SubjectToDLDiscarding_ItemExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_BluetoothMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs * objPDUBluetoothMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_BluetoothMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs * objPDUBluetoothMeasurementConfiguration_ExtIEs);
void __si_s1ap_debug_PDU_BluetoothMeasurementConfiguration_ExtIEs( char * key, SI_S1AP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs * objPDUBluetoothMeasurementConfiguration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_BluetoothMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs ** objPDUBluetoothMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CancelledCellinEAI_Item_ExtIEs( SI_S1AP_DT_PDU_CancelledCellinEAI_Item_ExtIEs * objPDUCancelledCellinEAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CancelledCellinEAI_Item_ExtIEs( SI_S1AP_DT_PDU_CancelledCellinEAI_Item_ExtIEs * objPDUCancelledCellinEAI_Item_ExtIEs);
void __si_s1ap_debug_PDU_CancelledCellinEAI_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_CancelledCellinEAI_Item_ExtIEs * objPDUCancelledCellinEAI_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CancelledCellinEAI_Item_ExtIEs( SI_S1AP_DT_PDU_CancelledCellinEAI_Item_ExtIEs ** objPDUCancelledCellinEAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CancelledCellinTAI_Item_ExtIEs( SI_S1AP_DT_PDU_CancelledCellinTAI_Item_ExtIEs * objPDUCancelledCellinTAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CancelledCellinTAI_Item_ExtIEs( SI_S1AP_DT_PDU_CancelledCellinTAI_Item_ExtIEs * objPDUCancelledCellinTAI_Item_ExtIEs);
void __si_s1ap_debug_PDU_CancelledCellinTAI_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_CancelledCellinTAI_Item_ExtIEs * objPDUCancelledCellinTAI_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CancelledCellinTAI_Item_ExtIEs( SI_S1AP_DT_PDU_CancelledCellinTAI_Item_ExtIEs ** objPDUCancelledCellinTAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs( SI_S1AP_DT_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs * objPDUCellIdentifierAndCELevelForCECapableUEs_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs( SI_S1AP_DT_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs * objPDUCellIdentifierAndCELevelForCECapableUEs_ExtIEs);
void __si_s1ap_debug_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs( char * key, SI_S1AP_DT_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs * objPDUCellIdentifierAndCELevelForCECapableUEs_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs( SI_S1AP_DT_PDU_CellIdentifierAndCELevelForCECapableUEs_ExtIEs ** objPDUCellIdentifierAndCELevelForCECapableUEs_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CellID_Broadcast_Item_ExtIEs( SI_S1AP_DT_PDU_CellID_Broadcast_Item_ExtIEs * objPDUCellID_Broadcast_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CellID_Broadcast_Item_ExtIEs( SI_S1AP_DT_PDU_CellID_Broadcast_Item_ExtIEs * objPDUCellID_Broadcast_Item_ExtIEs);
void __si_s1ap_debug_PDU_CellID_Broadcast_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_CellID_Broadcast_Item_ExtIEs * objPDUCellID_Broadcast_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CellID_Broadcast_Item_ExtIEs( SI_S1AP_DT_PDU_CellID_Broadcast_Item_ExtIEs ** objPDUCellID_Broadcast_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CellID_Cancelled_Item_ExtIEs( SI_S1AP_DT_PDU_CellID_Cancelled_Item_ExtIEs * objPDUCellID_Cancelled_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CellID_Cancelled_Item_ExtIEs( SI_S1AP_DT_PDU_CellID_Cancelled_Item_ExtIEs * objPDUCellID_Cancelled_Item_ExtIEs);
void __si_s1ap_debug_PDU_CellID_Cancelled_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_CellID_Cancelled_Item_ExtIEs * objPDUCellID_Cancelled_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CellID_Cancelled_Item_ExtIEs( SI_S1AP_DT_PDU_CellID_Cancelled_Item_ExtIEs ** objPDUCellID_Cancelled_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CellBasedMDT_ExtIEs( SI_S1AP_DT_PDU_CellBasedMDT_ExtIEs * objPDUCellBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CellBasedMDT_ExtIEs( SI_S1AP_DT_PDU_CellBasedMDT_ExtIEs * objPDUCellBasedMDT_ExtIEs);
void __si_s1ap_debug_PDU_CellBasedMDT_ExtIEs( char * key, SI_S1AP_DT_PDU_CellBasedMDT_ExtIEs * objPDUCellBasedMDT_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CellBasedMDT_ExtIEs( SI_S1AP_DT_PDU_CellBasedMDT_ExtIEs ** objPDUCellBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CellBasedQMC_ExtIEs( SI_S1AP_DT_PDU_CellBasedQMC_ExtIEs * objPDUCellBasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CellBasedQMC_ExtIEs( SI_S1AP_DT_PDU_CellBasedQMC_ExtIEs * objPDUCellBasedQMC_ExtIEs);
void __si_s1ap_debug_PDU_CellBasedQMC_ExtIEs( char * key, SI_S1AP_DT_PDU_CellBasedQMC_ExtIEs * objPDUCellBasedQMC_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CellBasedQMC_ExtIEs( SI_S1AP_DT_PDU_CellBasedQMC_ExtIEs ** objPDUCellBasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Cdma2000OneXSRVCCInfo_ExtIEs( SI_S1AP_DT_PDU_Cdma2000OneXSRVCCInfo_ExtIEs * objPDUCdma2000OneXSRVCCInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Cdma2000OneXSRVCCInfo_ExtIEs( SI_S1AP_DT_PDU_Cdma2000OneXSRVCCInfo_ExtIEs * objPDUCdma2000OneXSRVCCInfo_ExtIEs);
void __si_s1ap_debug_PDU_Cdma2000OneXSRVCCInfo_ExtIEs( char * key, SI_S1AP_DT_PDU_Cdma2000OneXSRVCCInfo_ExtIEs * objPDUCdma2000OneXSRVCCInfo_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Cdma2000OneXSRVCCInfo_ExtIEs( SI_S1AP_DT_PDU_Cdma2000OneXSRVCCInfo_ExtIEs ** objPDUCdma2000OneXSRVCCInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CellType_ExtIEs( SI_S1AP_DT_PDU_CellType_ExtIEs * objPDUCellType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CellType_ExtIEs( SI_S1AP_DT_PDU_CellType_ExtIEs * objPDUCellType_ExtIEs);
void __si_s1ap_debug_PDU_CellType_ExtIEs( char * key, SI_S1AP_DT_PDU_CellType_ExtIEs * objPDUCellType_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CellType_ExtIEs( SI_S1AP_DT_PDU_CellType_ExtIEs ** objPDUCellType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CGI_ExtIEs( SI_S1AP_DT_PDU_CGI_ExtIEs * objPDUCGI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CGI_ExtIEs( SI_S1AP_DT_PDU_CGI_ExtIEs * objPDUCGI_ExtIEs);
void __si_s1ap_debug_PDU_CGI_ExtIEs( char * key, SI_S1AP_DT_PDU_CGI_ExtIEs * objPDUCGI_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CGI_ExtIEs( SI_S1AP_DT_PDU_CGI_ExtIEs ** objPDUCGI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CNTypeRestrictions_Item_ExtIEs( SI_S1AP_DT_PDU_CNTypeRestrictions_Item_ExtIEs * objPDUCNTypeRestrictions_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CNTypeRestrictions_Item_ExtIEs( SI_S1AP_DT_PDU_CNTypeRestrictions_Item_ExtIEs * objPDUCNTypeRestrictions_Item_ExtIEs);
void __si_s1ap_debug_PDU_CNTypeRestrictions_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_CNTypeRestrictions_Item_ExtIEs * objPDUCNTypeRestrictions_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CNTypeRestrictions_Item_ExtIEs( SI_S1AP_DT_PDU_CNTypeRestrictions_Item_ExtIEs ** objPDUCNTypeRestrictions_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ConnectedengNBItem_ExtIEs( SI_S1AP_DT_PDU_ConnectedengNBItem_ExtIEs * objPDUConnectedengNBItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ConnectedengNBItem_ExtIEs( SI_S1AP_DT_PDU_ConnectedengNBItem_ExtIEs * objPDUConnectedengNBItem_ExtIEs);
void __si_s1ap_debug_PDU_ConnectedengNBItem_ExtIEs( char * key, SI_S1AP_DT_PDU_ConnectedengNBItem_ExtIEs * objPDUConnectedengNBItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ConnectedengNBItem_ExtIEs( SI_S1AP_DT_PDU_ConnectedengNBItem_ExtIEs ** objPDUConnectedengNBItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ContextatSource_ExtIEs( SI_S1AP_DT_PDU_ContextatSource_ExtIEs * objPDUContextatSource_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ContextatSource_ExtIEs( SI_S1AP_DT_PDU_ContextatSource_ExtIEs * objPDUContextatSource_ExtIEs);
void __si_s1ap_debug_PDU_ContextatSource_ExtIEs( char * key, SI_S1AP_DT_PDU_ContextatSource_ExtIEs * objPDUContextatSource_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ContextatSource_ExtIEs( SI_S1AP_DT_PDU_ContextatSource_ExtIEs ** objPDUContextatSource_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CSG_IdList_Item_ExtIEs( SI_S1AP_DT_PDU_CSG_IdList_Item_ExtIEs * objPDUCSG_IdList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CSG_IdList_Item_ExtIEs( SI_S1AP_DT_PDU_CSG_IdList_Item_ExtIEs * objPDUCSG_IdList_Item_ExtIEs);
void __si_s1ap_debug_PDU_CSG_IdList_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_CSG_IdList_Item_ExtIEs * objPDUCSG_IdList_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CSG_IdList_Item_ExtIEs( SI_S1AP_DT_PDU_CSG_IdList_Item_ExtIEs ** objPDUCSG_IdList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_COUNTvalue_ExtIEs( SI_S1AP_DT_PDU_COUNTvalue_ExtIEs * objPDUCOUNTvalue_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_COUNTvalue_ExtIEs( SI_S1AP_DT_PDU_COUNTvalue_ExtIEs * objPDUCOUNTvalue_ExtIEs);
void __si_s1ap_debug_PDU_COUNTvalue_ExtIEs( char * key, SI_S1AP_DT_PDU_COUNTvalue_ExtIEs * objPDUCOUNTvalue_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_COUNTvalue_ExtIEs( SI_S1AP_DT_PDU_COUNTvalue_ExtIEs ** objPDUCOUNTvalue_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_COUNTValueExtended_ExtIEs( SI_S1AP_DT_PDU_COUNTValueExtended_ExtIEs * objPDUCOUNTValueExtended_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_COUNTValueExtended_ExtIEs( SI_S1AP_DT_PDU_COUNTValueExtended_ExtIEs * objPDUCOUNTValueExtended_ExtIEs);
void __si_s1ap_debug_PDU_COUNTValueExtended_ExtIEs( char * key, SI_S1AP_DT_PDU_COUNTValueExtended_ExtIEs * objPDUCOUNTValueExtended_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_COUNTValueExtended_ExtIEs( SI_S1AP_DT_PDU_COUNTValueExtended_ExtIEs ** objPDUCOUNTValueExtended_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_COUNTvaluePDCP_SNlength18_ExtIEs( SI_S1AP_DT_PDU_COUNTvaluePDCP_SNlength18_ExtIEs * objPDUCOUNTvaluePDCP_SNlength18_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_COUNTvaluePDCP_SNlength18_ExtIEs( SI_S1AP_DT_PDU_COUNTvaluePDCP_SNlength18_ExtIEs * objPDUCOUNTvaluePDCP_SNlength18_ExtIEs);
void __si_s1ap_debug_PDU_COUNTvaluePDCP_SNlength18_ExtIEs( char * key, SI_S1AP_DT_PDU_COUNTvaluePDCP_SNlength18_ExtIEs * objPDUCOUNTvaluePDCP_SNlength18_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_COUNTvaluePDCP_SNlength18_ExtIEs( SI_S1AP_DT_PDU_COUNTvaluePDCP_SNlength18_ExtIEs ** objPDUCOUNTvaluePDCP_SNlength18_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CriticalityDiagnostics_ExtIEs( SI_S1AP_DT_PDU_CriticalityDiagnostics_ExtIEs * objPDUCriticalityDiagnostics_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CriticalityDiagnostics_ExtIEs( SI_S1AP_DT_PDU_CriticalityDiagnostics_ExtIEs * objPDUCriticalityDiagnostics_ExtIEs);
void __si_s1ap_debug_PDU_CriticalityDiagnostics_ExtIEs( char * key, SI_S1AP_DT_PDU_CriticalityDiagnostics_ExtIEs * objPDUCriticalityDiagnostics_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CriticalityDiagnostics_ExtIEs( SI_S1AP_DT_PDU_CriticalityDiagnostics_ExtIEs ** objPDUCriticalityDiagnostics_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CriticalityDiagnostics_IE_Item_ExtIEs( SI_S1AP_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs * objPDUCriticalityDiagnostics_IE_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CriticalityDiagnostics_IE_Item_ExtIEs( SI_S1AP_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs * objPDUCriticalityDiagnostics_IE_Item_ExtIEs);
void __si_s1ap_debug_PDU_CriticalityDiagnostics_IE_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs * objPDUCriticalityDiagnostics_IE_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CriticalityDiagnostics_IE_Item_ExtIEs( SI_S1AP_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs ** objPDUCriticalityDiagnostics_IE_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_DAPSRequestInfo_ExtIEs( SI_S1AP_DT_PDU_DAPSRequestInfo_ExtIEs * objPDUDAPSRequestInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_DAPSRequestInfo_ExtIEs( SI_S1AP_DT_PDU_DAPSRequestInfo_ExtIEs * objPDUDAPSRequestInfo_ExtIEs);
void __si_s1ap_debug_PDU_DAPSRequestInfo_ExtIEs( char * key, SI_S1AP_DT_PDU_DAPSRequestInfo_ExtIEs * objPDUDAPSRequestInfo_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_DAPSRequestInfo_ExtIEs( SI_S1AP_DT_PDU_DAPSRequestInfo_ExtIEs ** objPDUDAPSRequestInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_DAPSResponseInfoItem_ExtIEs( SI_S1AP_DT_PDU_DAPSResponseInfoItem_ExtIEs * objPDUDAPSResponseInfoItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_DAPSResponseInfoItem_ExtIEs( SI_S1AP_DT_PDU_DAPSResponseInfoItem_ExtIEs * objPDUDAPSResponseInfoItem_ExtIEs);
void __si_s1ap_debug_PDU_DAPSResponseInfoItem_ExtIEs( char * key, SI_S1AP_DT_PDU_DAPSResponseInfoItem_ExtIEs * objPDUDAPSResponseInfoItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_DAPSResponseInfoItem_ExtIEs( SI_S1AP_DT_PDU_DAPSResponseInfoItem_ExtIEs ** objPDUDAPSResponseInfoItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_DAPSResponseInfo_ExtIEs( SI_S1AP_DT_PDU_DAPSResponseInfo_ExtIEs * objPDUDAPSResponseInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_DAPSResponseInfo_ExtIEs( SI_S1AP_DT_PDU_DAPSResponseInfo_ExtIEs * objPDUDAPSResponseInfo_ExtIEs);
void __si_s1ap_debug_PDU_DAPSResponseInfo_ExtIEs( char * key, SI_S1AP_DT_PDU_DAPSResponseInfo_ExtIEs * objPDUDAPSResponseInfo_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_DAPSResponseInfo_ExtIEs( SI_S1AP_DT_PDU_DAPSResponseInfo_ExtIEs ** objPDUDAPSResponseInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ServedDCNsItem_ExtIEs( SI_S1AP_DT_PDU_ServedDCNsItem_ExtIEs * objPDUServedDCNsItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ServedDCNsItem_ExtIEs( SI_S1AP_DT_PDU_ServedDCNsItem_ExtIEs * objPDUServedDCNsItem_ExtIEs);
void __si_s1ap_debug_PDU_ServedDCNsItem_ExtIEs( char * key, SI_S1AP_DT_PDU_ServedDCNsItem_ExtIEs * objPDUServedDCNsItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ServedDCNsItem_ExtIEs( SI_S1AP_DT_PDU_ServedDCNsItem_ExtIEs ** objPDUServedDCNsItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_DL_CP_SecurityInformation_ExtIEs( SI_S1AP_DT_PDU_DL_CP_SecurityInformation_ExtIEs * objPDUDL_CP_SecurityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_DL_CP_SecurityInformation_ExtIEs( SI_S1AP_DT_PDU_DL_CP_SecurityInformation_ExtIEs * objPDUDL_CP_SecurityInformation_ExtIEs);
void __si_s1ap_debug_PDU_DL_CP_SecurityInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_DL_CP_SecurityInformation_ExtIEs * objPDUDL_CP_SecurityInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_DL_CP_SecurityInformation_ExtIEs( SI_S1AP_DT_PDU_DL_CP_SecurityInformation_ExtIEs ** objPDUDL_CP_SecurityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs( SI_S1AP_DT_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs * objPDUEmergencyAreaID_Broadcast_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs( SI_S1AP_DT_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs * objPDUEmergencyAreaID_Broadcast_Item_ExtIEs);
void __si_s1ap_debug_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs * objPDUEmergencyAreaID_Broadcast_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs( SI_S1AP_DT_PDU_EmergencyAreaID_Broadcast_Item_ExtIEs ** objPDUEmergencyAreaID_Broadcast_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs( SI_S1AP_DT_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs * objPDUEmergencyAreaID_Cancelled_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs( SI_S1AP_DT_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs * objPDUEmergencyAreaID_Cancelled_Item_ExtIEs);
void __si_s1ap_debug_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs * objPDUEmergencyAreaID_Cancelled_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs( SI_S1AP_DT_PDU_EmergencyAreaID_Cancelled_Item_ExtIEs ** objPDUEmergencyAreaID_Cancelled_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CompletedCellinEAI_Item_ExtIEs( SI_S1AP_DT_PDU_CompletedCellinEAI_Item_ExtIEs * objPDUCompletedCellinEAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CompletedCellinEAI_Item_ExtIEs( SI_S1AP_DT_PDU_CompletedCellinEAI_Item_ExtIEs * objPDUCompletedCellinEAI_Item_ExtIEs);
void __si_s1ap_debug_PDU_CompletedCellinEAI_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_CompletedCellinEAI_Item_ExtIEs * objPDUCompletedCellinEAI_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CompletedCellinEAI_Item_ExtIEs( SI_S1AP_DT_PDU_CompletedCellinEAI_Item_ExtIEs ** objPDUCompletedCellinEAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs * objPDUENB_EarlyStatusTransfer_TransparentContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs * objPDUENB_EarlyStatusTransfer_TransparentContainer_ExtIEs);
void __si_s1ap_debug_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs( char * key, SI_S1AP_DT_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs * objPDUENB_EarlyStatusTransfer_TransparentContainer_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_ENB_EarlyStatusTransfer_TransparentContainer_ExtIEs ** objPDUENB_EarlyStatusTransfer_TransparentContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_GERAN_Cell_ID_ExtIEs( SI_S1AP_DT_PDU_GERAN_Cell_ID_ExtIEs * objPDUGERAN_Cell_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_GERAN_Cell_ID_ExtIEs( SI_S1AP_DT_PDU_GERAN_Cell_ID_ExtIEs * objPDUGERAN_Cell_ID_ExtIEs);
void __si_s1ap_debug_PDU_GERAN_Cell_ID_ExtIEs( char * key, SI_S1AP_DT_PDU_GERAN_Cell_ID_ExtIEs * objPDUGERAN_Cell_ID_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_GERAN_Cell_ID_ExtIEs( SI_S1AP_DT_PDU_GERAN_Cell_ID_ExtIEs ** objPDUGERAN_Cell_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_GlobalENB_ID_ExtIEs( SI_S1AP_DT_PDU_GlobalENB_ID_ExtIEs * objPDUGlobalENB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_GlobalENB_ID_ExtIEs( SI_S1AP_DT_PDU_GlobalENB_ID_ExtIEs * objPDUGlobalENB_ID_ExtIEs);
void __si_s1ap_debug_PDU_GlobalENB_ID_ExtIEs( char * key, SI_S1AP_DT_PDU_GlobalENB_ID_ExtIEs * objPDUGlobalENB_ID_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_GlobalENB_ID_ExtIEs( SI_S1AP_DT_PDU_GlobalENB_ID_ExtIEs ** objPDUGlobalENB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Global_en_gNB_ID_ExtIEs( SI_S1AP_DT_PDU_Global_en_gNB_ID_ExtIEs * objPDUGlobal_en_gNB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Global_en_gNB_ID_ExtIEs( SI_S1AP_DT_PDU_Global_en_gNB_ID_ExtIEs * objPDUGlobal_en_gNB_ID_ExtIEs);
void __si_s1ap_debug_PDU_Global_en_gNB_ID_ExtIEs( char * key, SI_S1AP_DT_PDU_Global_en_gNB_ID_ExtIEs * objPDUGlobal_en_gNB_ID_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Global_en_gNB_ID_ExtIEs( SI_S1AP_DT_PDU_Global_en_gNB_ID_ExtIEs ** objPDUGlobal_en_gNB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs * objPDUENB_StatusTransfer_TransparentContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs * objPDUENB_StatusTransfer_TransparentContainer_ExtIEs);
void __si_s1ap_debug_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs( char * key, SI_S1AP_DT_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs * objPDUENB_StatusTransfer_TransparentContainer_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_ENB_StatusTransfer_TransparentContainer_ExtIEs ** objPDUENB_StatusTransfer_TransparentContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EN_DCSONConfigurationTransfer_ExtIEs( SI_S1AP_DT_PDU_EN_DCSONConfigurationTransfer_ExtIEs * objPDUEN_DCSONConfigurationTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EN_DCSONConfigurationTransfer_ExtIEs( SI_S1AP_DT_PDU_EN_DCSONConfigurationTransfer_ExtIEs * objPDUEN_DCSONConfigurationTransfer_ExtIEs);
void __si_s1ap_debug_PDU_EN_DCSONConfigurationTransfer_ExtIEs( char * key, SI_S1AP_DT_PDU_EN_DCSONConfigurationTransfer_ExtIEs * objPDUEN_DCSONConfigurationTransfer_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EN_DCSONConfigurationTransfer_ExtIEs( SI_S1AP_DT_PDU_EN_DCSONConfigurationTransfer_ExtIEs ** objPDUEN_DCSONConfigurationTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EN_DCTransferTypeRequest_ExtIEs( SI_S1AP_DT_PDU_EN_DCTransferTypeRequest_ExtIEs * objPDUEN_DCTransferTypeRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EN_DCTransferTypeRequest_ExtIEs( SI_S1AP_DT_PDU_EN_DCTransferTypeRequest_ExtIEs * objPDUEN_DCTransferTypeRequest_ExtIEs);
void __si_s1ap_debug_PDU_EN_DCTransferTypeRequest_ExtIEs( char * key, SI_S1AP_DT_PDU_EN_DCTransferTypeRequest_ExtIEs * objPDUEN_DCTransferTypeRequest_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EN_DCTransferTypeRequest_ExtIEs( SI_S1AP_DT_PDU_EN_DCTransferTypeRequest_ExtIEs ** objPDUEN_DCTransferTypeRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EN_DCTransferTypeReply_ExtIEs( SI_S1AP_DT_PDU_EN_DCTransferTypeReply_ExtIEs * objPDUEN_DCTransferTypeReply_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EN_DCTransferTypeReply_ExtIEs( SI_S1AP_DT_PDU_EN_DCTransferTypeReply_ExtIEs * objPDUEN_DCTransferTypeReply_ExtIEs);
void __si_s1ap_debug_PDU_EN_DCTransferTypeReply_ExtIEs( char * key, SI_S1AP_DT_PDU_EN_DCTransferTypeReply_ExtIEs * objPDUEN_DCTransferTypeReply_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EN_DCTransferTypeReply_ExtIEs( SI_S1AP_DT_PDU_EN_DCTransferTypeReply_ExtIEs ** objPDUEN_DCTransferTypeReply_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EN_DCSONeNBIdentification_ExtIEs( SI_S1AP_DT_PDU_EN_DCSONeNBIdentification_ExtIEs * objPDUEN_DCSONeNBIdentification_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EN_DCSONeNBIdentification_ExtIEs( SI_S1AP_DT_PDU_EN_DCSONeNBIdentification_ExtIEs * objPDUEN_DCSONeNBIdentification_ExtIEs);
void __si_s1ap_debug_PDU_EN_DCSONeNBIdentification_ExtIEs( char * key, SI_S1AP_DT_PDU_EN_DCSONeNBIdentification_ExtIEs * objPDUEN_DCSONeNBIdentification_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EN_DCSONeNBIdentification_ExtIEs( SI_S1AP_DT_PDU_EN_DCSONeNBIdentification_ExtIEs ** objPDUEN_DCSONeNBIdentification_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EN_DCSONengNBIdentification_ExtIEs( SI_S1AP_DT_PDU_EN_DCSONengNBIdentification_ExtIEs * objPDUEN_DCSONengNBIdentification_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EN_DCSONengNBIdentification_ExtIEs( SI_S1AP_DT_PDU_EN_DCSONengNBIdentification_ExtIEs * objPDUEN_DCSONengNBIdentification_ExtIEs);
void __si_s1ap_debug_PDU_EN_DCSONengNBIdentification_ExtIEs( char * key, SI_S1AP_DT_PDU_EN_DCSONengNBIdentification_ExtIEs * objPDUEN_DCSONengNBIdentification_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EN_DCSONengNBIdentification_ExtIEs( SI_S1AP_DT_PDU_EN_DCSONengNBIdentification_ExtIEs ** objPDUEN_DCSONengNBIdentification_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABInformationListItem_ExtIEs( SI_S1AP_DT_PDU_E_RABInformationListItem_ExtIEs * objPDUE_RABInformationListItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABInformationListItem_ExtIEs( SI_S1AP_DT_PDU_E_RABInformationListItem_ExtIEs * objPDUE_RABInformationListItem_ExtIEs);
void __si_s1ap_debug_PDU_E_RABInformationListItem_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABInformationListItem_ExtIEs * objPDUE_RABInformationListItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABInformationListItem_ExtIEs( SI_S1AP_DT_PDU_E_RABInformationListItem_ExtIEs ** objPDUE_RABInformationListItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABItemIEs( SI_S1AP_DT_PDU_E_RABItemIEs * objPDUE_RABItemIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABItemIEs( SI_S1AP_DT_PDU_E_RABItemIEs * objPDUE_RABItemIEs);
void __si_s1ap_debug_PDU_E_RABItemIEs( char * key, SI_S1AP_DT_PDU_E_RABItemIEs * objPDUE_RABItemIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABItemIEs( SI_S1AP_DT_PDU_E_RABItemIEs ** objPDUE_RABItemIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABItem_ExtIEs( SI_S1AP_DT_PDU_E_RABItem_ExtIEs * objPDUE_RABItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABItem_ExtIEs( SI_S1AP_DT_PDU_E_RABItem_ExtIEs * objPDUE_RABItem_ExtIEs);
void __si_s1ap_debug_PDU_E_RABItem_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABItem_ExtIEs * objPDUE_RABItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABItem_ExtIEs( SI_S1AP_DT_PDU_E_RABItem_ExtIEs ** objPDUE_RABItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABSecurityResultItem_ExtIEs( SI_S1AP_DT_PDU_E_RABSecurityResultItem_ExtIEs * objPDUE_RABSecurityResultItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABSecurityResultItem_ExtIEs( SI_S1AP_DT_PDU_E_RABSecurityResultItem_ExtIEs * objPDUE_RABSecurityResultItem_ExtIEs);
void __si_s1ap_debug_PDU_E_RABSecurityResultItem_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABSecurityResultItem_ExtIEs * objPDUE_RABSecurityResultItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABSecurityResultItem_ExtIEs( SI_S1AP_DT_PDU_E_RABSecurityResultItem_ExtIEs ** objPDUE_RABSecurityResultItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABUsageReportItemIEs( SI_S1AP_DT_PDU_E_RABUsageReportItemIEs * objPDUE_RABUsageReportItemIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABUsageReportItemIEs( SI_S1AP_DT_PDU_E_RABUsageReportItemIEs * objPDUE_RABUsageReportItemIEs);
void __si_s1ap_debug_PDU_E_RABUsageReportItemIEs( char * key, SI_S1AP_DT_PDU_E_RABUsageReportItemIEs * objPDUE_RABUsageReportItemIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABUsageReportItemIEs( SI_S1AP_DT_PDU_E_RABUsageReportItemIEs ** objPDUE_RABUsageReportItemIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABUsageReportItem_ExtIEs( SI_S1AP_DT_PDU_E_RABUsageReportItem_ExtIEs * objPDUE_RABUsageReportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABUsageReportItem_ExtIEs( SI_S1AP_DT_PDU_E_RABUsageReportItem_ExtIEs * objPDUE_RABUsageReportItem_ExtIEs);
void __si_s1ap_debug_PDU_E_RABUsageReportItem_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABUsageReportItem_ExtIEs * objPDUE_RABUsageReportItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABUsageReportItem_ExtIEs( SI_S1AP_DT_PDU_E_RABUsageReportItem_ExtIEs ** objPDUE_RABUsageReportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABQoSParameters_ExtIEs( SI_S1AP_DT_PDU_E_RABQoSParameters_ExtIEs * objPDUE_RABQoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABQoSParameters_ExtIEs( SI_S1AP_DT_PDU_E_RABQoSParameters_ExtIEs * objPDUE_RABQoSParameters_ExtIEs);
void __si_s1ap_debug_PDU_E_RABQoSParameters_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABQoSParameters_ExtIEs * objPDUE_RABQoSParameters_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABQoSParameters_ExtIEs( SI_S1AP_DT_PDU_E_RABQoSParameters_ExtIEs ** objPDUE_RABQoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EUTRAN_CGI_ExtIEs( SI_S1AP_DT_PDU_EUTRAN_CGI_ExtIEs * objPDUEUTRAN_CGI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EUTRAN_CGI_ExtIEs( SI_S1AP_DT_PDU_EUTRAN_CGI_ExtIEs * objPDUEUTRAN_CGI_ExtIEs);
void __si_s1ap_debug_PDU_EUTRAN_CGI_ExtIEs( char * key, SI_S1AP_DT_PDU_EUTRAN_CGI_ExtIEs * objPDUEUTRAN_CGI_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EUTRAN_CGI_ExtIEs( SI_S1AP_DT_PDU_EUTRAN_CGI_ExtIEs ** objPDUEUTRAN_CGI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EventL1LoggedMDTConfig_ExtIEs( SI_S1AP_DT_PDU_EventL1LoggedMDTConfig_ExtIEs * objPDUEventL1LoggedMDTConfig_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EventL1LoggedMDTConfig_ExtIEs( SI_S1AP_DT_PDU_EventL1LoggedMDTConfig_ExtIEs * objPDUEventL1LoggedMDTConfig_ExtIEs);
void __si_s1ap_debug_PDU_EventL1LoggedMDTConfig_ExtIEs( char * key, SI_S1AP_DT_PDU_EventL1LoggedMDTConfig_ExtIEs * objPDUEventL1LoggedMDTConfig_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EventL1LoggedMDTConfig_ExtIEs( SI_S1AP_DT_PDU_EventL1LoggedMDTConfig_ExtIEs ** objPDUEventL1LoggedMDTConfig_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_EventTrigger_ExtIEs( SI_S1AP_DT_PDU_EventTrigger_ExtIEs * objPDUEventTrigger_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_EventTrigger_ExtIEs( SI_S1AP_DT_PDU_EventTrigger_ExtIEs * objPDUEventTrigger_ExtIEs);
void __si_s1ap_debug_PDU_EventTrigger_ExtIEs( char * key, SI_S1AP_DT_PDU_EventTrigger_ExtIEs * objPDUEventTrigger_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_EventTrigger_ExtIEs( SI_S1AP_DT_PDU_EventTrigger_ExtIEs ** objPDUEventTrigger_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ExpectedUEBehaviour_ExtIEs( SI_S1AP_DT_PDU_ExpectedUEBehaviour_ExtIEs * objPDUExpectedUEBehaviour_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ExpectedUEBehaviour_ExtIEs( SI_S1AP_DT_PDU_ExpectedUEBehaviour_ExtIEs * objPDUExpectedUEBehaviour_ExtIEs);
void __si_s1ap_debug_PDU_ExpectedUEBehaviour_ExtIEs( char * key, SI_S1AP_DT_PDU_ExpectedUEBehaviour_ExtIEs * objPDUExpectedUEBehaviour_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ExpectedUEBehaviour_ExtIEs( SI_S1AP_DT_PDU_ExpectedUEBehaviour_ExtIEs ** objPDUExpectedUEBehaviour_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ExpectedUEActivityBehaviour_ExtIEs( SI_S1AP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs * objPDUExpectedUEActivityBehaviour_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ExpectedUEActivityBehaviour_ExtIEs( SI_S1AP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs * objPDUExpectedUEActivityBehaviour_ExtIEs);
void __si_s1ap_debug_PDU_ExpectedUEActivityBehaviour_ExtIEs( char * key, SI_S1AP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs * objPDUExpectedUEActivityBehaviour_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ExpectedUEActivityBehaviour_ExtIEs( SI_S1AP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs ** objPDUExpectedUEActivityBehaviour_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_FiveGSTAI_ExtIEs( SI_S1AP_DT_PDU_FiveGSTAI_ExtIEs * objPDUFiveGSTAI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_FiveGSTAI_ExtIEs( SI_S1AP_DT_PDU_FiveGSTAI_ExtIEs * objPDUFiveGSTAI_ExtIEs);
void __si_s1ap_debug_PDU_FiveGSTAI_ExtIEs( char * key, SI_S1AP_DT_PDU_FiveGSTAI_ExtIEs * objPDUFiveGSTAI_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_FiveGSTAI_ExtIEs( SI_S1AP_DT_PDU_FiveGSTAI_ExtIEs ** objPDUFiveGSTAI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ForbiddenTAs_Item_ExtIEs( SI_S1AP_DT_PDU_ForbiddenTAs_Item_ExtIEs * objPDUForbiddenTAs_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ForbiddenTAs_Item_ExtIEs( SI_S1AP_DT_PDU_ForbiddenTAs_Item_ExtIEs * objPDUForbiddenTAs_Item_ExtIEs);
void __si_s1ap_debug_PDU_ForbiddenTAs_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_ForbiddenTAs_Item_ExtIEs * objPDUForbiddenTAs_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ForbiddenTAs_Item_ExtIEs( SI_S1AP_DT_PDU_ForbiddenTAs_Item_ExtIEs ** objPDUForbiddenTAs_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ForbiddenLAs_Item_ExtIEs( SI_S1AP_DT_PDU_ForbiddenLAs_Item_ExtIEs * objPDUForbiddenLAs_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ForbiddenLAs_Item_ExtIEs( SI_S1AP_DT_PDU_ForbiddenLAs_Item_ExtIEs * objPDUForbiddenLAs_Item_ExtIEs);
void __si_s1ap_debug_PDU_ForbiddenLAs_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_ForbiddenLAs_Item_ExtIEs * objPDUForbiddenLAs_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ForbiddenLAs_Item_ExtIEs( SI_S1AP_DT_PDU_ForbiddenLAs_Item_ExtIEs ** objPDUForbiddenLAs_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_GBR_QosInformation_ExtIEs( SI_S1AP_DT_PDU_GBR_QosInformation_ExtIEs * objPDUGBR_QosInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_GBR_QosInformation_ExtIEs( SI_S1AP_DT_PDU_GBR_QosInformation_ExtIEs * objPDUGBR_QosInformation_ExtIEs);
void __si_s1ap_debug_PDU_GBR_QosInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_GBR_QosInformation_ExtIEs * objPDUGBR_QosInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_GBR_QosInformation_ExtIEs( SI_S1AP_DT_PDU_GBR_QosInformation_ExtIEs ** objPDUGBR_QosInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_GUMMEI_ExtIEs( SI_S1AP_DT_PDU_GUMMEI_ExtIEs * objPDUGUMMEI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_GUMMEI_ExtIEs( SI_S1AP_DT_PDU_GUMMEI_ExtIEs * objPDUGUMMEI_ExtIEs);
void __si_s1ap_debug_PDU_GUMMEI_ExtIEs( char * key, SI_S1AP_DT_PDU_GUMMEI_ExtIEs * objPDUGUMMEI_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_GUMMEI_ExtIEs( SI_S1AP_DT_PDU_GUMMEI_ExtIEs ** objPDUGUMMEI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_HandoverRestrictionList_ExtIEs( SI_S1AP_DT_PDU_HandoverRestrictionList_ExtIEs * objPDUHandoverRestrictionList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_HandoverRestrictionList_ExtIEs( SI_S1AP_DT_PDU_HandoverRestrictionList_ExtIEs * objPDUHandoverRestrictionList_ExtIEs);
void __si_s1ap_debug_PDU_HandoverRestrictionList_ExtIEs( char * key, SI_S1AP_DT_PDU_HandoverRestrictionList_ExtIEs * objPDUHandoverRestrictionList_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_HandoverRestrictionList_ExtIEs( SI_S1AP_DT_PDU_HandoverRestrictionList_ExtIEs ** objPDUHandoverRestrictionList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ImmediateMDT_ExtIEs( SI_S1AP_DT_PDU_ImmediateMDT_ExtIEs * objPDUImmediateMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ImmediateMDT_ExtIEs( SI_S1AP_DT_PDU_ImmediateMDT_ExtIEs * objPDUImmediateMDT_ExtIEs);
void __si_s1ap_debug_PDU_ImmediateMDT_ExtIEs( char * key, SI_S1AP_DT_PDU_ImmediateMDT_ExtIEs * objPDUImmediateMDT_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ImmediateMDT_ExtIEs( SI_S1AP_DT_PDU_ImmediateMDT_ExtIEs ** objPDUImmediateMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs( SI_S1AP_DT_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs * objPDUInformationOnRecommendedCellsAndENBsForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs( SI_S1AP_DT_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs * objPDUInformationOnRecommendedCellsAndENBsForPaging_ExtIEs);
void __si_s1ap_debug_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs( char * key, SI_S1AP_DT_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs * objPDUInformationOnRecommendedCellsAndENBsForPaging_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs( SI_S1AP_DT_PDU_InformationOnRecommendedCellsAndENBsForPaging_ExtIEs ** objPDUInformationOnRecommendedCellsAndENBsForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_IntersystemMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_IntersystemMeasurementConfiguration_ExtIEs * objPDUIntersystemMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_IntersystemMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_IntersystemMeasurementConfiguration_ExtIEs * objPDUIntersystemMeasurementConfiguration_ExtIEs);
void __si_s1ap_debug_PDU_IntersystemMeasurementConfiguration_ExtIEs( char * key, SI_S1AP_DT_PDU_IntersystemMeasurementConfiguration_ExtIEs * objPDUIntersystemMeasurementConfiguration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_IntersystemMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_IntersystemMeasurementConfiguration_ExtIEs ** objPDUIntersystemMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_InterSystemMeasurementParameters_ExtIEs( SI_S1AP_DT_PDU_InterSystemMeasurementParameters_ExtIEs * objPDUInterSystemMeasurementParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_InterSystemMeasurementParameters_ExtIEs( SI_S1AP_DT_PDU_InterSystemMeasurementParameters_ExtIEs * objPDUInterSystemMeasurementParameters_ExtIEs);
void __si_s1ap_debug_PDU_InterSystemMeasurementParameters_ExtIEs( char * key, SI_S1AP_DT_PDU_InterSystemMeasurementParameters_ExtIEs * objPDUInterSystemMeasurementParameters_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_InterSystemMeasurementParameters_ExtIEs( SI_S1AP_DT_PDU_InterSystemMeasurementParameters_ExtIEs ** objPDUInterSystemMeasurementParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_InterSystemMeasurementItem_ExtIEs( SI_S1AP_DT_PDU_InterSystemMeasurementItem_ExtIEs * objPDUInterSystemMeasurementItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_InterSystemMeasurementItem_ExtIEs( SI_S1AP_DT_PDU_InterSystemMeasurementItem_ExtIEs * objPDUInterSystemMeasurementItem_ExtIEs);
void __si_s1ap_debug_PDU_InterSystemMeasurementItem_ExtIEs( char * key, SI_S1AP_DT_PDU_InterSystemMeasurementItem_ExtIEs * objPDUInterSystemMeasurementItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_InterSystemMeasurementItem_ExtIEs( SI_S1AP_DT_PDU_InterSystemMeasurementItem_ExtIEs ** objPDUInterSystemMeasurementItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_LAI_ExtIEs( SI_S1AP_DT_PDU_LAI_ExtIEs * objPDULAI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_LAI_ExtIEs( SI_S1AP_DT_PDU_LAI_ExtIEs * objPDULAI_ExtIEs);
void __si_s1ap_debug_PDU_LAI_ExtIEs( char * key, SI_S1AP_DT_PDU_LAI_ExtIEs * objPDULAI_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_LAI_ExtIEs( SI_S1AP_DT_PDU_LAI_ExtIEs ** objPDULAI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_LastVisitedEUTRANCellInformation_ExtIEs( SI_S1AP_DT_PDU_LastVisitedEUTRANCellInformation_ExtIEs * objPDULastVisitedEUTRANCellInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_LastVisitedEUTRANCellInformation_ExtIEs( SI_S1AP_DT_PDU_LastVisitedEUTRANCellInformation_ExtIEs * objPDULastVisitedEUTRANCellInformation_ExtIEs);
void __si_s1ap_debug_PDU_LastVisitedEUTRANCellInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_LastVisitedEUTRANCellInformation_ExtIEs * objPDULastVisitedEUTRANCellInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_LastVisitedEUTRANCellInformation_ExtIEs( SI_S1AP_DT_PDU_LastVisitedEUTRANCellInformation_ExtIEs ** objPDULastVisitedEUTRANCellInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_LastVisitedPSCellInformation_ExtIEs( SI_S1AP_DT_PDU_LastVisitedPSCellInformation_ExtIEs * objPDULastVisitedPSCellInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_LastVisitedPSCellInformation_ExtIEs( SI_S1AP_DT_PDU_LastVisitedPSCellInformation_ExtIEs * objPDULastVisitedPSCellInformation_ExtIEs);
void __si_s1ap_debug_PDU_LastVisitedPSCellInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_LastVisitedPSCellInformation_ExtIEs * objPDULastVisitedPSCellInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_LastVisitedPSCellInformation_ExtIEs( SI_S1AP_DT_PDU_LastVisitedPSCellInformation_ExtIEs ** objPDULastVisitedPSCellInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ListeningSubframePattern_ExtIEs( SI_S1AP_DT_PDU_ListeningSubframePattern_ExtIEs * objPDUListeningSubframePattern_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ListeningSubframePattern_ExtIEs( SI_S1AP_DT_PDU_ListeningSubframePattern_ExtIEs * objPDUListeningSubframePattern_ExtIEs);
void __si_s1ap_debug_PDU_ListeningSubframePattern_ExtIEs( char * key, SI_S1AP_DT_PDU_ListeningSubframePattern_ExtIEs * objPDUListeningSubframePattern_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ListeningSubframePattern_ExtIEs( SI_S1AP_DT_PDU_ListeningSubframePattern_ExtIEs ** objPDUListeningSubframePattern_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_LoggedMDT_ExtIEs( SI_S1AP_DT_PDU_LoggedMDT_ExtIEs * objPDULoggedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_LoggedMDT_ExtIEs( SI_S1AP_DT_PDU_LoggedMDT_ExtIEs * objPDULoggedMDT_ExtIEs);
void __si_s1ap_debug_PDU_LoggedMDT_ExtIEs( char * key, SI_S1AP_DT_PDU_LoggedMDT_ExtIEs * objPDULoggedMDT_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_LoggedMDT_ExtIEs( SI_S1AP_DT_PDU_LoggedMDT_ExtIEs ** objPDULoggedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_LoggedMBSFNMDT_ExtIEs( SI_S1AP_DT_PDU_LoggedMBSFNMDT_ExtIEs * objPDULoggedMBSFNMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_LoggedMBSFNMDT_ExtIEs( SI_S1AP_DT_PDU_LoggedMBSFNMDT_ExtIEs * objPDULoggedMBSFNMDT_ExtIEs);
void __si_s1ap_debug_PDU_LoggedMBSFNMDT_ExtIEs( char * key, SI_S1AP_DT_PDU_LoggedMBSFNMDT_ExtIEs * objPDULoggedMBSFNMDT_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_LoggedMBSFNMDT_ExtIEs( SI_S1AP_DT_PDU_LoggedMBSFNMDT_ExtIEs ** objPDULoggedMBSFNMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_LTE_NTN_TAI_Information_ExtIEs( SI_S1AP_DT_PDU_LTE_NTN_TAI_Information_ExtIEs * objPDULTE_NTN_TAI_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_LTE_NTN_TAI_Information_ExtIEs( SI_S1AP_DT_PDU_LTE_NTN_TAI_Information_ExtIEs * objPDULTE_NTN_TAI_Information_ExtIEs);
void __si_s1ap_debug_PDU_LTE_NTN_TAI_Information_ExtIEs( char * key, SI_S1AP_DT_PDU_LTE_NTN_TAI_Information_ExtIEs * objPDULTE_NTN_TAI_Information_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_LTE_NTN_TAI_Information_ExtIEs( SI_S1AP_DT_PDU_LTE_NTN_TAI_Information_ExtIEs ** objPDULTE_NTN_TAI_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_M3Configuration_ExtIEs( SI_S1AP_DT_PDU_M3Configuration_ExtIEs * objPDUM3Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_M3Configuration_ExtIEs( SI_S1AP_DT_PDU_M3Configuration_ExtIEs * objPDUM3Configuration_ExtIEs);
void __si_s1ap_debug_PDU_M3Configuration_ExtIEs( char * key, SI_S1AP_DT_PDU_M3Configuration_ExtIEs * objPDUM3Configuration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_M3Configuration_ExtIEs( SI_S1AP_DT_PDU_M3Configuration_ExtIEs ** objPDUM3Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_M4Configuration_ExtIEs( SI_S1AP_DT_PDU_M4Configuration_ExtIEs * objPDUM4Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_M4Configuration_ExtIEs( SI_S1AP_DT_PDU_M4Configuration_ExtIEs * objPDUM4Configuration_ExtIEs);
void __si_s1ap_debug_PDU_M4Configuration_ExtIEs( char * key, SI_S1AP_DT_PDU_M4Configuration_ExtIEs * objPDUM4Configuration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_M4Configuration_ExtIEs( SI_S1AP_DT_PDU_M4Configuration_ExtIEs ** objPDUM4Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_M5Configuration_ExtIEs( SI_S1AP_DT_PDU_M5Configuration_ExtIEs * objPDUM5Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_M5Configuration_ExtIEs( SI_S1AP_DT_PDU_M5Configuration_ExtIEs * objPDUM5Configuration_ExtIEs);
void __si_s1ap_debug_PDU_M5Configuration_ExtIEs( char * key, SI_S1AP_DT_PDU_M5Configuration_ExtIEs * objPDUM5Configuration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_M5Configuration_ExtIEs( SI_S1AP_DT_PDU_M5Configuration_ExtIEs ** objPDUM5Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_M6Configuration_ExtIEs( SI_S1AP_DT_PDU_M6Configuration_ExtIEs * objPDUM6Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_M6Configuration_ExtIEs( SI_S1AP_DT_PDU_M6Configuration_ExtIEs * objPDUM6Configuration_ExtIEs);
void __si_s1ap_debug_PDU_M6Configuration_ExtIEs( char * key, SI_S1AP_DT_PDU_M6Configuration_ExtIEs * objPDUM6Configuration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_M6Configuration_ExtIEs( SI_S1AP_DT_PDU_M6Configuration_ExtIEs ** objPDUM6Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_M7Configuration_ExtIEs( SI_S1AP_DT_PDU_M7Configuration_ExtIEs * objPDUM7Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_M7Configuration_ExtIEs( SI_S1AP_DT_PDU_M7Configuration_ExtIEs * objPDUM7Configuration_ExtIEs);
void __si_s1ap_debug_PDU_M7Configuration_ExtIEs( char * key, SI_S1AP_DT_PDU_M7Configuration_ExtIEs * objPDUM7Configuration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_M7Configuration_ExtIEs( SI_S1AP_DT_PDU_M7Configuration_ExtIEs ** objPDUM7Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_MDT_Configuration_ExtIEs( SI_S1AP_DT_PDU_MDT_Configuration_ExtIEs * objPDUMDT_Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_MDT_Configuration_ExtIEs( SI_S1AP_DT_PDU_MDT_Configuration_ExtIEs * objPDUMDT_Configuration_ExtIEs);
void __si_s1ap_debug_PDU_MDT_Configuration_ExtIEs( char * key, SI_S1AP_DT_PDU_MDT_Configuration_ExtIEs * objPDUMDT_Configuration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_MDT_Configuration_ExtIEs( SI_S1AP_DT_PDU_MDT_Configuration_ExtIEs ** objPDUMDT_Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_MBSFN_ResultToLogInfo_ExtIEs( SI_S1AP_DT_PDU_MBSFN_ResultToLogInfo_ExtIEs * objPDUMBSFN_ResultToLogInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_MBSFN_ResultToLogInfo_ExtIEs( SI_S1AP_DT_PDU_MBSFN_ResultToLogInfo_ExtIEs * objPDUMBSFN_ResultToLogInfo_ExtIEs);
void __si_s1ap_debug_PDU_MBSFN_ResultToLogInfo_ExtIEs( char * key, SI_S1AP_DT_PDU_MBSFN_ResultToLogInfo_ExtIEs * objPDUMBSFN_ResultToLogInfo_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_MBSFN_ResultToLogInfo_ExtIEs( SI_S1AP_DT_PDU_MBSFN_ResultToLogInfo_ExtIEs ** objPDUMBSFN_ResultToLogInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_MDTMode_ExtensionIE( SI_S1AP_DT_PDU_MDTMode_ExtensionIE * objPDUMDTMode_ExtensionIE, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_MDTMode_ExtensionIE( SI_S1AP_DT_PDU_MDTMode_ExtensionIE * objPDUMDTMode_ExtensionIE);
void __si_s1ap_debug_PDU_MDTMode_ExtensionIE( char * key, SI_S1AP_DT_PDU_MDTMode_ExtensionIE * objPDUMDTMode_ExtensionIE, int lvl);
int __si_s1ap_Decode_PDU_MDTMode_ExtensionIE( SI_S1AP_DT_PDU_MDTMode_ExtensionIE ** objPDUMDTMode_ExtensionIE, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( SI_S1AP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * objPDUMeasurementThresholdL1LoggedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( SI_S1AP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * objPDUMeasurementThresholdL1LoggedMDT_ExtIEs);
void __si_s1ap_debug_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( char * key, SI_S1AP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * objPDUMeasurementThresholdL1LoggedMDT_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( SI_S1AP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs ** objPDUMeasurementThresholdL1LoggedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_MutingPatternInformation_ExtIEs( SI_S1AP_DT_PDU_MutingPatternInformation_ExtIEs * objPDUMutingPatternInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_MutingPatternInformation_ExtIEs( SI_S1AP_DT_PDU_MutingPatternInformation_ExtIEs * objPDUMutingPatternInformation_ExtIEs);
void __si_s1ap_debug_PDU_MutingPatternInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_MutingPatternInformation_ExtIEs * objPDUMutingPatternInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_MutingPatternInformation_ExtIEs( SI_S1AP_DT_PDU_MutingPatternInformation_ExtIEs ** objPDUMutingPatternInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs( SI_S1AP_DT_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs * objPDUNB_IoT_Paging_eDRXInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs( SI_S1AP_DT_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs * objPDUNB_IoT_Paging_eDRXInformation_ExtIEs);
void __si_s1ap_debug_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs * objPDUNB_IoT_Paging_eDRXInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs( SI_S1AP_DT_PDU_NB_IoT_Paging_eDRXInformation_ExtIEs ** objPDUNB_IoT_Paging_eDRXInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_NR_CGI_ExtIEs( SI_S1AP_DT_PDU_NR_CGI_ExtIEs * objPDUNR_CGI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_NR_CGI_ExtIEs( SI_S1AP_DT_PDU_NR_CGI_ExtIEs * objPDUNR_CGI_ExtIEs);
void __si_s1ap_debug_PDU_NR_CGI_ExtIEs( char * key, SI_S1AP_DT_PDU_NR_CGI_ExtIEs * objPDUNR_CGI_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_NR_CGI_ExtIEs( SI_S1AP_DT_PDU_NR_CGI_ExtIEs ** objPDUNR_CGI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_NRUESecurityCapabilities_ExtIEs( SI_S1AP_DT_PDU_NRUESecurityCapabilities_ExtIEs * objPDUNRUESecurityCapabilities_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_NRUESecurityCapabilities_ExtIEs( SI_S1AP_DT_PDU_NRUESecurityCapabilities_ExtIEs * objPDUNRUESecurityCapabilities_ExtIEs);
void __si_s1ap_debug_PDU_NRUESecurityCapabilities_ExtIEs( char * key, SI_S1AP_DT_PDU_NRUESecurityCapabilities_ExtIEs * objPDUNRUESecurityCapabilities_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_NRUESecurityCapabilities_ExtIEs( SI_S1AP_DT_PDU_NRUESecurityCapabilities_ExtIEs ** objPDUNRUESecurityCapabilities_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_NRV2XServicesAuthorized_ExtIEs( SI_S1AP_DT_PDU_NRV2XServicesAuthorized_ExtIEs * objPDUNRV2XServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_NRV2XServicesAuthorized_ExtIEs( SI_S1AP_DT_PDU_NRV2XServicesAuthorized_ExtIEs * objPDUNRV2XServicesAuthorized_ExtIEs);
void __si_s1ap_debug_PDU_NRV2XServicesAuthorized_ExtIEs( char * key, SI_S1AP_DT_PDU_NRV2XServicesAuthorized_ExtIEs * objPDUNRV2XServicesAuthorized_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_NRV2XServicesAuthorized_ExtIEs( SI_S1AP_DT_PDU_NRV2XServicesAuthorized_ExtIEs ** objPDUNRV2XServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs( SI_S1AP_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs * objPDUNRUESidelinkAggregateMaximumBitrate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs( SI_S1AP_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs * objPDUNRUESidelinkAggregateMaximumBitrate_ExtIEs);
void __si_s1ap_debug_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs( char * key, SI_S1AP_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs * objPDUNRUESidelinkAggregateMaximumBitrate_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs( SI_S1AP_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs ** objPDUNRUESidelinkAggregateMaximumBitrate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_PagingAttemptInformation_ExtIEs( SI_S1AP_DT_PDU_PagingAttemptInformation_ExtIEs * objPDUPagingAttemptInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_PagingAttemptInformation_ExtIEs( SI_S1AP_DT_PDU_PagingAttemptInformation_ExtIEs * objPDUPagingAttemptInformation_ExtIEs);
void __si_s1ap_debug_PDU_PagingAttemptInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_PagingAttemptInformation_ExtIEs * objPDUPagingAttemptInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_PagingAttemptInformation_ExtIEs( SI_S1AP_DT_PDU_PagingAttemptInformation_ExtIEs ** objPDUPagingAttemptInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Paging_eDRXInformation_ExtIEs( SI_S1AP_DT_PDU_Paging_eDRXInformation_ExtIEs * objPDUPaging_eDRXInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Paging_eDRXInformation_ExtIEs( SI_S1AP_DT_PDU_Paging_eDRXInformation_ExtIEs * objPDUPaging_eDRXInformation_ExtIEs);
void __si_s1ap_debug_PDU_Paging_eDRXInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_Paging_eDRXInformation_ExtIEs * objPDUPaging_eDRXInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Paging_eDRXInformation_ExtIEs( SI_S1AP_DT_PDU_Paging_eDRXInformation_ExtIEs ** objPDUPaging_eDRXInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_PC5QoSParameters_ExtIEs( SI_S1AP_DT_PDU_PC5QoSParameters_ExtIEs * objPDUPC5QoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_PC5QoSParameters_ExtIEs( SI_S1AP_DT_PDU_PC5QoSParameters_ExtIEs * objPDUPC5QoSParameters_ExtIEs);
void __si_s1ap_debug_PDU_PC5QoSParameters_ExtIEs( char * key, SI_S1AP_DT_PDU_PC5QoSParameters_ExtIEs * objPDUPC5QoSParameters_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_PC5QoSParameters_ExtIEs( SI_S1AP_DT_PDU_PC5QoSParameters_ExtIEs ** objPDUPC5QoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_PC5QoSFlowItem_ExtIEs( SI_S1AP_DT_PDU_PC5QoSFlowItem_ExtIEs * objPDUPC5QoSFlowItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_PC5QoSFlowItem_ExtIEs( SI_S1AP_DT_PDU_PC5QoSFlowItem_ExtIEs * objPDUPC5QoSFlowItem_ExtIEs);
void __si_s1ap_debug_PDU_PC5QoSFlowItem_ExtIEs( char * key, SI_S1AP_DT_PDU_PC5QoSFlowItem_ExtIEs * objPDUPC5QoSFlowItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_PC5QoSFlowItem_ExtIEs( SI_S1AP_DT_PDU_PC5QoSFlowItem_ExtIEs ** objPDUPC5QoSFlowItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_PC5FlowBitRates_ExtIEs( SI_S1AP_DT_PDU_PC5FlowBitRates_ExtIEs * objPDUPC5FlowBitRates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_PC5FlowBitRates_ExtIEs( SI_S1AP_DT_PDU_PC5FlowBitRates_ExtIEs * objPDUPC5FlowBitRates_ExtIEs);
void __si_s1ap_debug_PDU_PC5FlowBitRates_ExtIEs( char * key, SI_S1AP_DT_PDU_PC5FlowBitRates_ExtIEs * objPDUPC5FlowBitRates_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_PC5FlowBitRates_ExtIEs( SI_S1AP_DT_PDU_PC5FlowBitRates_ExtIEs ** objPDUPC5FlowBitRates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_M1PeriodicReporting_ExtIEs( SI_S1AP_DT_PDU_M1PeriodicReporting_ExtIEs * objPDUM1PeriodicReporting_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_M1PeriodicReporting_ExtIEs( SI_S1AP_DT_PDU_M1PeriodicReporting_ExtIEs * objPDUM1PeriodicReporting_ExtIEs);
void __si_s1ap_debug_PDU_M1PeriodicReporting_ExtIEs( char * key, SI_S1AP_DT_PDU_M1PeriodicReporting_ExtIEs * objPDUM1PeriodicReporting_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_M1PeriodicReporting_ExtIEs( SI_S1AP_DT_PDU_M1PeriodicReporting_ExtIEs ** objPDUM1PeriodicReporting_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_PLMNAreaBasedQMC_ExtIEs( SI_S1AP_DT_PDU_PLMNAreaBasedQMC_ExtIEs * objPDUPLMNAreaBasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_PLMNAreaBasedQMC_ExtIEs( SI_S1AP_DT_PDU_PLMNAreaBasedQMC_ExtIEs * objPDUPLMNAreaBasedQMC_ExtIEs);
void __si_s1ap_debug_PDU_PLMNAreaBasedQMC_ExtIEs( char * key, SI_S1AP_DT_PDU_PLMNAreaBasedQMC_ExtIEs * objPDUPLMNAreaBasedQMC_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_PLMNAreaBasedQMC_ExtIEs( SI_S1AP_DT_PDU_PLMNAreaBasedQMC_ExtIEs ** objPDUPLMNAreaBasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ProSeAuthorized_ExtIEs( SI_S1AP_DT_PDU_ProSeAuthorized_ExtIEs * objPDUProSeAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ProSeAuthorized_ExtIEs( SI_S1AP_DT_PDU_ProSeAuthorized_ExtIEs * objPDUProSeAuthorized_ExtIEs);
void __si_s1ap_debug_PDU_ProSeAuthorized_ExtIEs( char * key, SI_S1AP_DT_PDU_ProSeAuthorized_ExtIEs * objPDUProSeAuthorized_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ProSeAuthorized_ExtIEs( SI_S1AP_DT_PDU_ProSeAuthorized_ExtIEs ** objPDUProSeAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_PSCellInformation_ExtIEs( SI_S1AP_DT_PDU_PSCellInformation_ExtIEs * objPDUPSCellInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_PSCellInformation_ExtIEs( SI_S1AP_DT_PDU_PSCellInformation_ExtIEs * objPDUPSCellInformation_ExtIEs);
void __si_s1ap_debug_PDU_PSCellInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_PSCellInformation_ExtIEs * objPDUPSCellInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_PSCellInformation_ExtIEs( SI_S1AP_DT_PDU_PSCellInformation_ExtIEs ** objPDUPSCellInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RecommendedCellsForPaging_ExtIEs( SI_S1AP_DT_PDU_RecommendedCellsForPaging_ExtIEs * objPDURecommendedCellsForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RecommendedCellsForPaging_ExtIEs( SI_S1AP_DT_PDU_RecommendedCellsForPaging_ExtIEs * objPDURecommendedCellsForPaging_ExtIEs);
void __si_s1ap_debug_PDU_RecommendedCellsForPaging_ExtIEs( char * key, SI_S1AP_DT_PDU_RecommendedCellsForPaging_ExtIEs * objPDURecommendedCellsForPaging_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_RecommendedCellsForPaging_ExtIEs( SI_S1AP_DT_PDU_RecommendedCellsForPaging_ExtIEs ** objPDURecommendedCellsForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RecommendedCellItemIEs( SI_S1AP_DT_PDU_RecommendedCellItemIEs * objPDURecommendedCellItemIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RecommendedCellItemIEs( SI_S1AP_DT_PDU_RecommendedCellItemIEs * objPDURecommendedCellItemIEs);
void __si_s1ap_debug_PDU_RecommendedCellItemIEs( char * key, SI_S1AP_DT_PDU_RecommendedCellItemIEs * objPDURecommendedCellItemIEs, int lvl);
int __si_s1ap_Decode_PDU_RecommendedCellItemIEs( SI_S1AP_DT_PDU_RecommendedCellItemIEs ** objPDURecommendedCellItemIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RecommendedCellsForPagingItem_ExtIEs( SI_S1AP_DT_PDU_RecommendedCellsForPagingItem_ExtIEs * objPDURecommendedCellsForPagingItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RecommendedCellsForPagingItem_ExtIEs( SI_S1AP_DT_PDU_RecommendedCellsForPagingItem_ExtIEs * objPDURecommendedCellsForPagingItem_ExtIEs);
void __si_s1ap_debug_PDU_RecommendedCellsForPagingItem_ExtIEs( char * key, SI_S1AP_DT_PDU_RecommendedCellsForPagingItem_ExtIEs * objPDURecommendedCellsForPagingItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_RecommendedCellsForPagingItem_ExtIEs( SI_S1AP_DT_PDU_RecommendedCellsForPagingItem_ExtIEs ** objPDURecommendedCellsForPagingItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RecommendedENBsForPaging_ExtIEs( SI_S1AP_DT_PDU_RecommendedENBsForPaging_ExtIEs * objPDURecommendedENBsForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RecommendedENBsForPaging_ExtIEs( SI_S1AP_DT_PDU_RecommendedENBsForPaging_ExtIEs * objPDURecommendedENBsForPaging_ExtIEs);
void __si_s1ap_debug_PDU_RecommendedENBsForPaging_ExtIEs( char * key, SI_S1AP_DT_PDU_RecommendedENBsForPaging_ExtIEs * objPDURecommendedENBsForPaging_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_RecommendedENBsForPaging_ExtIEs( SI_S1AP_DT_PDU_RecommendedENBsForPaging_ExtIEs ** objPDURecommendedENBsForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RecommendedENBItemIEs( SI_S1AP_DT_PDU_RecommendedENBItemIEs * objPDURecommendedENBItemIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RecommendedENBItemIEs( SI_S1AP_DT_PDU_RecommendedENBItemIEs * objPDURecommendedENBItemIEs);
void __si_s1ap_debug_PDU_RecommendedENBItemIEs( char * key, SI_S1AP_DT_PDU_RecommendedENBItemIEs * objPDURecommendedENBItemIEs, int lvl);
int __si_s1ap_Decode_PDU_RecommendedENBItemIEs( SI_S1AP_DT_PDU_RecommendedENBItemIEs ** objPDURecommendedENBItemIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RecommendedENBItem_ExtIEs( SI_S1AP_DT_PDU_RecommendedENBItem_ExtIEs * objPDURecommendedENBItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RecommendedENBItem_ExtIEs( SI_S1AP_DT_PDU_RecommendedENBItem_ExtIEs * objPDURecommendedENBItem_ExtIEs);
void __si_s1ap_debug_PDU_RecommendedENBItem_ExtIEs( char * key, SI_S1AP_DT_PDU_RecommendedENBItem_ExtIEs * objPDURecommendedENBItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_RecommendedENBItem_ExtIEs( SI_S1AP_DT_PDU_RecommendedENBItem_ExtIEs ** objPDURecommendedENBItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RAT_RestrictionsItem_ExtIEs( SI_S1AP_DT_PDU_RAT_RestrictionsItem_ExtIEs * objPDURAT_RestrictionsItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RAT_RestrictionsItem_ExtIEs( SI_S1AP_DT_PDU_RAT_RestrictionsItem_ExtIEs * objPDURAT_RestrictionsItem_ExtIEs);
void __si_s1ap_debug_PDU_RAT_RestrictionsItem_ExtIEs( char * key, SI_S1AP_DT_PDU_RAT_RestrictionsItem_ExtIEs * objPDURAT_RestrictionsItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_RAT_RestrictionsItem_ExtIEs( SI_S1AP_DT_PDU_RAT_RestrictionsItem_ExtIEs ** objPDURAT_RestrictionsItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RequestType_ExtIEs( SI_S1AP_DT_PDU_RequestType_ExtIEs * objPDURequestType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RequestType_ExtIEs( SI_S1AP_DT_PDU_RequestType_ExtIEs * objPDURequestType_ExtIEs);
void __si_s1ap_debug_PDU_RequestType_ExtIEs( char * key, SI_S1AP_DT_PDU_RequestType_ExtIEs * objPDURequestType_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_RequestType_ExtIEs( SI_S1AP_DT_PDU_RequestType_ExtIEs ** objPDURequestType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RIMTransfer_ExtIEs( SI_S1AP_DT_PDU_RIMTransfer_ExtIEs * objPDURIMTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RIMTransfer_ExtIEs( SI_S1AP_DT_PDU_RIMTransfer_ExtIEs * objPDURIMTransfer_ExtIEs);
void __si_s1ap_debug_PDU_RIMTransfer_ExtIEs( char * key, SI_S1AP_DT_PDU_RIMTransfer_ExtIEs * objPDURIMTransfer_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_RIMTransfer_ExtIEs( SI_S1AP_DT_PDU_RIMTransfer_ExtIEs ** objPDURIMTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_RLFReportInformation_ExtIEs( SI_S1AP_DT_PDU_RLFReportInformation_ExtIEs * objPDURLFReportInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_RLFReportInformation_ExtIEs( SI_S1AP_DT_PDU_RLFReportInformation_ExtIEs * objPDURLFReportInformation_ExtIEs);
void __si_s1ap_debug_PDU_RLFReportInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_RLFReportInformation_ExtIEs * objPDURLFReportInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_RLFReportInformation_ExtIEs( SI_S1AP_DT_PDU_RLFReportInformation_ExtIEs ** objPDURLFReportInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SecurityContext_ExtIEs( SI_S1AP_DT_PDU_SecurityContext_ExtIEs * objPDUSecurityContext_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SecurityContext_ExtIEs( SI_S1AP_DT_PDU_SecurityContext_ExtIEs * objPDUSecurityContext_ExtIEs);
void __si_s1ap_debug_PDU_SecurityContext_ExtIEs( char * key, SI_S1AP_DT_PDU_SecurityContext_ExtIEs * objPDUSecurityContext_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SecurityContext_ExtIEs( SI_S1AP_DT_PDU_SecurityContext_ExtIEs ** objPDUSecurityContext_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SecondaryRATDataUsageReportItemIEs( SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItemIEs * objPDUSecondaryRATDataUsageReportItemIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SecondaryRATDataUsageReportItemIEs( SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItemIEs * objPDUSecondaryRATDataUsageReportItemIEs);
void __si_s1ap_debug_PDU_SecondaryRATDataUsageReportItemIEs( char * key, SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItemIEs * objPDUSecondaryRATDataUsageReportItemIEs, int lvl);
int __si_s1ap_Decode_PDU_SecondaryRATDataUsageReportItemIEs( SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItemIEs ** objPDUSecondaryRATDataUsageReportItemIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SecondaryRATDataUsageReportItem_ExtIEs( SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItem_ExtIEs * objPDUSecondaryRATDataUsageReportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SecondaryRATDataUsageReportItem_ExtIEs( SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItem_ExtIEs * objPDUSecondaryRATDataUsageReportItem_ExtIEs);
void __si_s1ap_debug_PDU_SecondaryRATDataUsageReportItem_ExtIEs( char * key, SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItem_ExtIEs * objPDUSecondaryRATDataUsageReportItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SecondaryRATDataUsageReportItem_ExtIEs( SI_S1AP_DT_PDU_SecondaryRATDataUsageReportItem_ExtIEs ** objPDUSecondaryRATDataUsageReportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SecurityIndication_ExtIEs( SI_S1AP_DT_PDU_SecurityIndication_ExtIEs * objPDUSecurityIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SecurityIndication_ExtIEs( SI_S1AP_DT_PDU_SecurityIndication_ExtIEs * objPDUSecurityIndication_ExtIEs);
void __si_s1ap_debug_PDU_SecurityIndication_ExtIEs( char * key, SI_S1AP_DT_PDU_SecurityIndication_ExtIEs * objPDUSecurityIndication_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SecurityIndication_ExtIEs( SI_S1AP_DT_PDU_SecurityIndication_ExtIEs ** objPDUSecurityIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SecurityResult_ExtIEs( SI_S1AP_DT_PDU_SecurityResult_ExtIEs * objPDUSecurityResult_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SecurityResult_ExtIEs( SI_S1AP_DT_PDU_SecurityResult_ExtIEs * objPDUSecurityResult_ExtIEs);
void __si_s1ap_debug_PDU_SecurityResult_ExtIEs( char * key, SI_S1AP_DT_PDU_SecurityResult_ExtIEs * objPDUSecurityResult_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SecurityResult_ExtIEs( SI_S1AP_DT_PDU_SecurityResult_ExtIEs ** objPDUSecurityResult_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SensorMeasConfigNameItem_ExtIEs( SI_S1AP_DT_PDU_SensorMeasConfigNameItem_ExtIEs * objPDUSensorMeasConfigNameItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SensorMeasConfigNameItem_ExtIEs( SI_S1AP_DT_PDU_SensorMeasConfigNameItem_ExtIEs * objPDUSensorMeasConfigNameItem_ExtIEs);
void __si_s1ap_debug_PDU_SensorMeasConfigNameItem_ExtIEs( char * key, SI_S1AP_DT_PDU_SensorMeasConfigNameItem_ExtIEs * objPDUSensorMeasConfigNameItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SensorMeasConfigNameItem_ExtIEs( SI_S1AP_DT_PDU_SensorMeasConfigNameItem_ExtIEs ** objPDUSensorMeasConfigNameItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SensorMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_SensorMeasurementConfiguration_ExtIEs * objPDUSensorMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SensorMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_SensorMeasurementConfiguration_ExtIEs * objPDUSensorMeasurementConfiguration_ExtIEs);
void __si_s1ap_debug_PDU_SensorMeasurementConfiguration_ExtIEs( char * key, SI_S1AP_DT_PDU_SensorMeasurementConfiguration_ExtIEs * objPDUSensorMeasurementConfiguration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SensorMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_SensorMeasurementConfiguration_ExtIEs ** objPDUSensorMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SensorNameConfig_ExtIEs( SI_S1AP_DT_PDU_SensorNameConfig_ExtIEs * objPDUSensorNameConfig_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SensorNameConfig_ExtIEs( SI_S1AP_DT_PDU_SensorNameConfig_ExtIEs * objPDUSensorNameConfig_ExtIEs);
void __si_s1ap_debug_PDU_SensorNameConfig_ExtIEs( char * key, SI_S1AP_DT_PDU_SensorNameConfig_ExtIEs * objPDUSensorNameConfig_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SensorNameConfig_ExtIEs( SI_S1AP_DT_PDU_SensorNameConfig_ExtIEs ** objPDUSensorNameConfig_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SONInformation_ExtensionIE( SI_S1AP_DT_PDU_SONInformation_ExtensionIE * objPDUSONInformation_ExtensionIE, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SONInformation_ExtensionIE( SI_S1AP_DT_PDU_SONInformation_ExtensionIE * objPDUSONInformation_ExtensionIE);
void __si_s1ap_debug_PDU_SONInformation_ExtensionIE( char * key, SI_S1AP_DT_PDU_SONInformation_ExtensionIE * objPDUSONInformation_ExtensionIE, int lvl);
int __si_s1ap_Decode_PDU_SONInformation_ExtensionIE( SI_S1AP_DT_PDU_SONInformation_ExtensionIE ** objPDUSONInformation_ExtensionIE, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SONInformationReply_ExtIEs( SI_S1AP_DT_PDU_SONInformationReply_ExtIEs * objPDUSONInformationReply_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SONInformationReply_ExtIEs( SI_S1AP_DT_PDU_SONInformationReply_ExtIEs * objPDUSONInformationReply_ExtIEs);
void __si_s1ap_debug_PDU_SONInformationReply_ExtIEs( char * key, SI_S1AP_DT_PDU_SONInformationReply_ExtIEs * objPDUSONInformationReply_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SONInformationReply_ExtIEs( SI_S1AP_DT_PDU_SONInformationReply_ExtIEs ** objPDUSONInformationReply_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SONConfigurationTransfer_ExtIEs( SI_S1AP_DT_PDU_SONConfigurationTransfer_ExtIEs * objPDUSONConfigurationTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SONConfigurationTransfer_ExtIEs( SI_S1AP_DT_PDU_SONConfigurationTransfer_ExtIEs * objPDUSONConfigurationTransfer_ExtIEs);
void __si_s1ap_debug_PDU_SONConfigurationTransfer_ExtIEs( char * key, SI_S1AP_DT_PDU_SONConfigurationTransfer_ExtIEs * objPDUSONConfigurationTransfer_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SONConfigurationTransfer_ExtIEs( SI_S1AP_DT_PDU_SONConfigurationTransfer_ExtIEs ** objPDUSONConfigurationTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SynchronisationInformation_ExtIEs( SI_S1AP_DT_PDU_SynchronisationInformation_ExtIEs * objPDUSynchronisationInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SynchronisationInformation_ExtIEs( SI_S1AP_DT_PDU_SynchronisationInformation_ExtIEs * objPDUSynchronisationInformation_ExtIEs);
void __si_s1ap_debug_PDU_SynchronisationInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_SynchronisationInformation_ExtIEs * objPDUSynchronisationInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SynchronisationInformation_ExtIEs( SI_S1AP_DT_PDU_SynchronisationInformation_ExtIEs ** objPDUSynchronisationInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SourceeNB_ID_ExtIEs( SI_S1AP_DT_PDU_SourceeNB_ID_ExtIEs * objPDUSourceeNB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SourceeNB_ID_ExtIEs( SI_S1AP_DT_PDU_SourceeNB_ID_ExtIEs * objPDUSourceeNB_ID_ExtIEs);
void __si_s1ap_debug_PDU_SourceeNB_ID_ExtIEs( char * key, SI_S1AP_DT_PDU_SourceeNB_ID_ExtIEs * objPDUSourceeNB_ID_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SourceeNB_ID_ExtIEs( SI_S1AP_DT_PDU_SourceeNB_ID_ExtIEs ** objPDUSourceeNB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SourceNodeID_ExtensionIE( SI_S1AP_DT_PDU_SourceNodeID_ExtensionIE * objPDUSourceNodeID_ExtensionIE, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SourceNodeID_ExtensionIE( SI_S1AP_DT_PDU_SourceNodeID_ExtensionIE * objPDUSourceNodeID_ExtensionIE);
void __si_s1ap_debug_PDU_SourceNodeID_ExtensionIE( char * key, SI_S1AP_DT_PDU_SourceNodeID_ExtensionIE * objPDUSourceNodeID_ExtensionIE, int lvl);
int __si_s1ap_Decode_PDU_SourceNodeID_ExtensionIE( SI_S1AP_DT_PDU_SourceNodeID_ExtensionIE ** objPDUSourceNodeID_ExtensionIE, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs * objPDUSourceeNB_ToTargeteNB_TransparentContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs * objPDUSourceeNB_ToTargeteNB_TransparentContainer_ExtIEs);
void __si_s1ap_debug_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs( char * key, SI_S1AP_DT_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs * objPDUSourceeNB_ToTargeteNB_TransparentContainer_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs ** objPDUSourceeNB_ToTargeteNB_TransparentContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SourceNgRanNode_ID_ExtIEs( SI_S1AP_DT_PDU_SourceNgRanNode_ID_ExtIEs * objPDUSourceNgRanNode_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SourceNgRanNode_ID_ExtIEs( SI_S1AP_DT_PDU_SourceNgRanNode_ID_ExtIEs * objPDUSourceNgRanNode_ID_ExtIEs);
void __si_s1ap_debug_PDU_SourceNgRanNode_ID_ExtIEs( char * key, SI_S1AP_DT_PDU_SourceNgRanNode_ID_ExtIEs * objPDUSourceNgRanNode_ID_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SourceNgRanNode_ID_ExtIEs( SI_S1AP_DT_PDU_SourceNgRanNode_ID_ExtIEs ** objPDUSourceNgRanNode_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ServedGUMMEIsItem_ExtIEs( SI_S1AP_DT_PDU_ServedGUMMEIsItem_ExtIEs * objPDUServedGUMMEIsItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ServedGUMMEIsItem_ExtIEs( SI_S1AP_DT_PDU_ServedGUMMEIsItem_ExtIEs * objPDUServedGUMMEIsItem_ExtIEs);
void __si_s1ap_debug_PDU_ServedGUMMEIsItem_ExtIEs( char * key, SI_S1AP_DT_PDU_ServedGUMMEIsItem_ExtIEs * objPDUServedGUMMEIsItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ServedGUMMEIsItem_ExtIEs( SI_S1AP_DT_PDU_ServedGUMMEIsItem_ExtIEs ** objPDUServedGUMMEIsItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs( SI_S1AP_DT_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs * objPDUSubscription_Based_UE_DifferentiationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs( SI_S1AP_DT_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs * objPDUSubscription_Based_UE_DifferentiationInfo_ExtIEs);
void __si_s1ap_debug_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs( char * key, SI_S1AP_DT_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs * objPDUSubscription_Based_UE_DifferentiationInfo_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs( SI_S1AP_DT_PDU_Subscription_Based_UE_DifferentiationInfo_ExtIEs ** objPDUSubscription_Based_UE_DifferentiationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ScheduledCommunicationTime_ExtIEs( SI_S1AP_DT_PDU_ScheduledCommunicationTime_ExtIEs * objPDUScheduledCommunicationTime_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ScheduledCommunicationTime_ExtIEs( SI_S1AP_DT_PDU_ScheduledCommunicationTime_ExtIEs * objPDUScheduledCommunicationTime_ExtIEs);
void __si_s1ap_debug_PDU_ScheduledCommunicationTime_ExtIEs( char * key, SI_S1AP_DT_PDU_ScheduledCommunicationTime_ExtIEs * objPDUScheduledCommunicationTime_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ScheduledCommunicationTime_ExtIEs( SI_S1AP_DT_PDU_ScheduledCommunicationTime_ExtIEs ** objPDUScheduledCommunicationTime_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_SupportedTAs_Item_ExtIEs( SI_S1AP_DT_PDU_SupportedTAs_Item_ExtIEs * objPDUSupportedTAs_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_SupportedTAs_Item_ExtIEs( SI_S1AP_DT_PDU_SupportedTAs_Item_ExtIEs * objPDUSupportedTAs_Item_ExtIEs);
void __si_s1ap_debug_PDU_SupportedTAs_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_SupportedTAs_Item_ExtIEs * objPDUSupportedTAs_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_SupportedTAs_Item_ExtIEs( SI_S1AP_DT_PDU_SupportedTAs_Item_ExtIEs ** objPDUSupportedTAs_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TimeSynchronisationInfo_ExtIEs( SI_S1AP_DT_PDU_TimeSynchronisationInfo_ExtIEs * objPDUTimeSynchronisationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TimeSynchronisationInfo_ExtIEs( SI_S1AP_DT_PDU_TimeSynchronisationInfo_ExtIEs * objPDUTimeSynchronisationInfo_ExtIEs);
void __si_s1ap_debug_PDU_TimeSynchronisationInfo_ExtIEs( char * key, SI_S1AP_DT_PDU_TimeSynchronisationInfo_ExtIEs * objPDUTimeSynchronisationInfo_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TimeSynchronisationInfo_ExtIEs( SI_S1AP_DT_PDU_TimeSynchronisationInfo_ExtIEs ** objPDUTimeSynchronisationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_S_TMSI_ExtIEs( SI_S1AP_DT_PDU_S_TMSI_ExtIEs * objPDUS_TMSI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_S_TMSI_ExtIEs( SI_S1AP_DT_PDU_S_TMSI_ExtIEs * objPDUS_TMSI_ExtIEs);
void __si_s1ap_debug_PDU_S_TMSI_ExtIEs( char * key, SI_S1AP_DT_PDU_S_TMSI_ExtIEs * objPDUS_TMSI_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_S_TMSI_ExtIEs( SI_S1AP_DT_PDU_S_TMSI_ExtIEs ** objPDUS_TMSI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TAIBasedMDT_ExtIEs( SI_S1AP_DT_PDU_TAIBasedMDT_ExtIEs * objPDUTAIBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TAIBasedMDT_ExtIEs( SI_S1AP_DT_PDU_TAIBasedMDT_ExtIEs * objPDUTAIBasedMDT_ExtIEs);
void __si_s1ap_debug_PDU_TAIBasedMDT_ExtIEs( char * key, SI_S1AP_DT_PDU_TAIBasedMDT_ExtIEs * objPDUTAIBasedMDT_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TAIBasedMDT_ExtIEs( SI_S1AP_DT_PDU_TAIBasedMDT_ExtIEs ** objPDUTAIBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TAI_ExtIEs( SI_S1AP_DT_PDU_TAI_ExtIEs * objPDUTAI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TAI_ExtIEs( SI_S1AP_DT_PDU_TAI_ExtIEs * objPDUTAI_ExtIEs);
void __si_s1ap_debug_PDU_TAI_ExtIEs( char * key, SI_S1AP_DT_PDU_TAI_ExtIEs * objPDUTAI_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TAI_ExtIEs( SI_S1AP_DT_PDU_TAI_ExtIEs ** objPDUTAI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TAI_Broadcast_Item_ExtIEs( SI_S1AP_DT_PDU_TAI_Broadcast_Item_ExtIEs * objPDUTAI_Broadcast_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TAI_Broadcast_Item_ExtIEs( SI_S1AP_DT_PDU_TAI_Broadcast_Item_ExtIEs * objPDUTAI_Broadcast_Item_ExtIEs);
void __si_s1ap_debug_PDU_TAI_Broadcast_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_TAI_Broadcast_Item_ExtIEs * objPDUTAI_Broadcast_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TAI_Broadcast_Item_ExtIEs( SI_S1AP_DT_PDU_TAI_Broadcast_Item_ExtIEs ** objPDUTAI_Broadcast_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TAI_Cancelled_Item_ExtIEs( SI_S1AP_DT_PDU_TAI_Cancelled_Item_ExtIEs * objPDUTAI_Cancelled_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TAI_Cancelled_Item_ExtIEs( SI_S1AP_DT_PDU_TAI_Cancelled_Item_ExtIEs * objPDUTAI_Cancelled_Item_ExtIEs);
void __si_s1ap_debug_PDU_TAI_Cancelled_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_TAI_Cancelled_Item_ExtIEs * objPDUTAI_Cancelled_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TAI_Cancelled_Item_ExtIEs( SI_S1AP_DT_PDU_TAI_Cancelled_Item_ExtIEs ** objPDUTAI_Cancelled_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TABasedMDT_ExtIEs( SI_S1AP_DT_PDU_TABasedMDT_ExtIEs * objPDUTABasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TABasedMDT_ExtIEs( SI_S1AP_DT_PDU_TABasedMDT_ExtIEs * objPDUTABasedMDT_ExtIEs);
void __si_s1ap_debug_PDU_TABasedMDT_ExtIEs( char * key, SI_S1AP_DT_PDU_TABasedMDT_ExtIEs * objPDUTABasedMDT_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TABasedMDT_ExtIEs( SI_S1AP_DT_PDU_TABasedMDT_ExtIEs ** objPDUTABasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TABasedQMC_ExtIEs( SI_S1AP_DT_PDU_TABasedQMC_ExtIEs * objPDUTABasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TABasedQMC_ExtIEs( SI_S1AP_DT_PDU_TABasedQMC_ExtIEs * objPDUTABasedQMC_ExtIEs);
void __si_s1ap_debug_PDU_TABasedQMC_ExtIEs( char * key, SI_S1AP_DT_PDU_TABasedQMC_ExtIEs * objPDUTABasedQMC_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TABasedQMC_ExtIEs( SI_S1AP_DT_PDU_TABasedQMC_ExtIEs ** objPDUTABasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TAIBasedQMC_ExtIEs( SI_S1AP_DT_PDU_TAIBasedQMC_ExtIEs * objPDUTAIBasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TAIBasedQMC_ExtIEs( SI_S1AP_DT_PDU_TAIBasedQMC_ExtIEs * objPDUTAIBasedQMC_ExtIEs);
void __si_s1ap_debug_PDU_TAIBasedQMC_ExtIEs( char * key, SI_S1AP_DT_PDU_TAIBasedQMC_ExtIEs * objPDUTAIBasedQMC_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TAIBasedQMC_ExtIEs( SI_S1AP_DT_PDU_TAIBasedQMC_ExtIEs ** objPDUTAIBasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CompletedCellinTAI_Item_ExtIEs( SI_S1AP_DT_PDU_CompletedCellinTAI_Item_ExtIEs * objPDUCompletedCellinTAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CompletedCellinTAI_Item_ExtIEs( SI_S1AP_DT_PDU_CompletedCellinTAI_Item_ExtIEs * objPDUCompletedCellinTAI_Item_ExtIEs);
void __si_s1ap_debug_PDU_CompletedCellinTAI_Item_ExtIEs( char * key, SI_S1AP_DT_PDU_CompletedCellinTAI_Item_ExtIEs * objPDUCompletedCellinTAI_Item_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CompletedCellinTAI_Item_ExtIEs( SI_S1AP_DT_PDU_CompletedCellinTAI_Item_ExtIEs ** objPDUCompletedCellinTAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TargeteNB_ID_ExtIEs( SI_S1AP_DT_PDU_TargeteNB_ID_ExtIEs * objPDUTargeteNB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TargeteNB_ID_ExtIEs( SI_S1AP_DT_PDU_TargeteNB_ID_ExtIEs * objPDUTargeteNB_ID_ExtIEs);
void __si_s1ap_debug_PDU_TargeteNB_ID_ExtIEs( char * key, SI_S1AP_DT_PDU_TargeteNB_ID_ExtIEs * objPDUTargeteNB_ID_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TargeteNB_ID_ExtIEs( SI_S1AP_DT_PDU_TargeteNB_ID_ExtIEs ** objPDUTargeteNB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TargetRNC_ID_ExtIEs( SI_S1AP_DT_PDU_TargetRNC_ID_ExtIEs * objPDUTargetRNC_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TargetRNC_ID_ExtIEs( SI_S1AP_DT_PDU_TargetRNC_ID_ExtIEs * objPDUTargetRNC_ID_ExtIEs);
void __si_s1ap_debug_PDU_TargetRNC_ID_ExtIEs( char * key, SI_S1AP_DT_PDU_TargetRNC_ID_ExtIEs * objPDUTargetRNC_ID_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TargetRNC_ID_ExtIEs( SI_S1AP_DT_PDU_TargetRNC_ID_ExtIEs ** objPDUTargetRNC_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TargetNgRanNode_ID_ExtIEs( SI_S1AP_DT_PDU_TargetNgRanNode_ID_ExtIEs * objPDUTargetNgRanNode_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TargetNgRanNode_ID_ExtIEs( SI_S1AP_DT_PDU_TargetNgRanNode_ID_ExtIEs * objPDUTargetNgRanNode_ID_ExtIEs);
void __si_s1ap_debug_PDU_TargetNgRanNode_ID_ExtIEs( char * key, SI_S1AP_DT_PDU_TargetNgRanNode_ID_ExtIEs * objPDUTargetNgRanNode_ID_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TargetNgRanNode_ID_ExtIEs( SI_S1AP_DT_PDU_TargetNgRanNode_ID_ExtIEs ** objPDUTargetNgRanNode_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_GNB_ExtIEs( SI_S1AP_DT_PDU_GNB_ExtIEs * objPDUGNB_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_GNB_ExtIEs( SI_S1AP_DT_PDU_GNB_ExtIEs * objPDUGNB_ExtIEs);
void __si_s1ap_debug_PDU_GNB_ExtIEs( char * key, SI_S1AP_DT_PDU_GNB_ExtIEs * objPDUGNB_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_GNB_ExtIEs( SI_S1AP_DT_PDU_GNB_ExtIEs ** objPDUGNB_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Global_GNB_ID_ExtIEs( SI_S1AP_DT_PDU_Global_GNB_ID_ExtIEs * objPDUGlobal_GNB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Global_GNB_ID_ExtIEs( SI_S1AP_DT_PDU_Global_GNB_ID_ExtIEs * objPDUGlobal_GNB_ID_ExtIEs);
void __si_s1ap_debug_PDU_Global_GNB_ID_ExtIEs( char * key, SI_S1AP_DT_PDU_Global_GNB_ID_ExtIEs * objPDUGlobal_GNB_ID_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Global_GNB_ID_ExtIEs( SI_S1AP_DT_PDU_Global_GNB_ID_ExtIEs ** objPDUGlobal_GNB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_NG_eNB_ExtIEs( SI_S1AP_DT_PDU_NG_eNB_ExtIEs * objPDUNG_eNB_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_NG_eNB_ExtIEs( SI_S1AP_DT_PDU_NG_eNB_ExtIEs * objPDUNG_eNB_ExtIEs);
void __si_s1ap_debug_PDU_NG_eNB_ExtIEs( char * key, SI_S1AP_DT_PDU_NG_eNB_ExtIEs * objPDUNG_eNB_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_NG_eNB_ExtIEs( SI_S1AP_DT_PDU_NG_eNB_ExtIEs ** objPDUNG_eNB_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs * objPDUTargeteNB_ToSourceeNB_TransparentContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs * objPDUTargeteNB_ToSourceeNB_TransparentContainer_ExtIEs);
void __si_s1ap_debug_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs( char * key, SI_S1AP_DT_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs * objPDUTargeteNB_ToSourceeNB_TransparentContainer_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs( SI_S1AP_DT_PDU_TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs ** objPDUTargeteNB_ToSourceeNB_TransparentContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_M1ThresholdEventA2_ExtIEs( SI_S1AP_DT_PDU_M1ThresholdEventA2_ExtIEs * objPDUM1ThresholdEventA2_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_M1ThresholdEventA2_ExtIEs( SI_S1AP_DT_PDU_M1ThresholdEventA2_ExtIEs * objPDUM1ThresholdEventA2_ExtIEs);
void __si_s1ap_debug_PDU_M1ThresholdEventA2_ExtIEs( char * key, SI_S1AP_DT_PDU_M1ThresholdEventA2_ExtIEs * objPDUM1ThresholdEventA2_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_M1ThresholdEventA2_ExtIEs( SI_S1AP_DT_PDU_M1ThresholdEventA2_ExtIEs ** objPDUM1ThresholdEventA2_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TimeBasedHandoverInformation_ExtIEs( SI_S1AP_DT_PDU_TimeBasedHandoverInformation_ExtIEs * objPDUTimeBasedHandoverInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TimeBasedHandoverInformation_ExtIEs( SI_S1AP_DT_PDU_TimeBasedHandoverInformation_ExtIEs * objPDUTimeBasedHandoverInformation_ExtIEs);
void __si_s1ap_debug_PDU_TimeBasedHandoverInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_TimeBasedHandoverInformation_ExtIEs * objPDUTimeBasedHandoverInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TimeBasedHandoverInformation_ExtIEs( SI_S1AP_DT_PDU_TimeBasedHandoverInformation_ExtIEs ** objPDUTimeBasedHandoverInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TraceActivation_ExtIEs( SI_S1AP_DT_PDU_TraceActivation_ExtIEs * objPDUTraceActivation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TraceActivation_ExtIEs( SI_S1AP_DT_PDU_TraceActivation_ExtIEs * objPDUTraceActivation_ExtIEs);
void __si_s1ap_debug_PDU_TraceActivation_ExtIEs( char * key, SI_S1AP_DT_PDU_TraceActivation_ExtIEs * objPDUTraceActivation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TraceActivation_ExtIEs( SI_S1AP_DT_PDU_TraceActivation_ExtIEs ** objPDUTraceActivation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_Tunnel_Information_ExtIEs( SI_S1AP_DT_PDU_Tunnel_Information_ExtIEs * objPDUTunnel_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_Tunnel_Information_ExtIEs( SI_S1AP_DT_PDU_Tunnel_Information_ExtIEs * objPDUTunnel_Information_ExtIEs);
void __si_s1ap_debug_PDU_Tunnel_Information_ExtIEs( char * key, SI_S1AP_DT_PDU_Tunnel_Information_ExtIEs * objPDUTunnel_Information_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_Tunnel_Information_ExtIEs( SI_S1AP_DT_PDU_Tunnel_Information_ExtIEs ** objPDUTunnel_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UEAggregate_MaximumBitrates_ExtIEs( SI_S1AP_DT_PDU_UEAggregate_MaximumBitrates_ExtIEs * objPDUUEAggregate_MaximumBitrates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UEAggregate_MaximumBitrates_ExtIEs( SI_S1AP_DT_PDU_UEAggregate_MaximumBitrates_ExtIEs * objPDUUEAggregate_MaximumBitrates_ExtIEs);
void __si_s1ap_debug_PDU_UEAggregate_MaximumBitrates_ExtIEs( char * key, SI_S1AP_DT_PDU_UEAggregate_MaximumBitrates_ExtIEs * objPDUUEAggregate_MaximumBitrates_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_UEAggregate_MaximumBitrates_ExtIEs( SI_S1AP_DT_PDU_UEAggregate_MaximumBitrates_ExtIEs ** objPDUUEAggregate_MaximumBitrates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UEAppLayerMeasConfig_ExtIEs( SI_S1AP_DT_PDU_UEAppLayerMeasConfig_ExtIEs * objPDUUEAppLayerMeasConfig_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UEAppLayerMeasConfig_ExtIEs( SI_S1AP_DT_PDU_UEAppLayerMeasConfig_ExtIEs * objPDUUEAppLayerMeasConfig_ExtIEs);
void __si_s1ap_debug_PDU_UEAppLayerMeasConfig_ExtIEs( char * key, SI_S1AP_DT_PDU_UEAppLayerMeasConfig_ExtIEs * objPDUUEAppLayerMeasConfig_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_UEAppLayerMeasConfig_ExtIEs( SI_S1AP_DT_PDU_UEAppLayerMeasConfig_ExtIEs ** objPDUUEAppLayerMeasConfig_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UE_S1AP_ID_pair_ExtIEs( SI_S1AP_DT_PDU_UE_S1AP_ID_pair_ExtIEs * objPDUUE_S1AP_ID_pair_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UE_S1AP_ID_pair_ExtIEs( SI_S1AP_DT_PDU_UE_S1AP_ID_pair_ExtIEs * objPDUUE_S1AP_ID_pair_ExtIEs);
void __si_s1ap_debug_PDU_UE_S1AP_ID_pair_ExtIEs( char * key, SI_S1AP_DT_PDU_UE_S1AP_ID_pair_ExtIEs * objPDUUE_S1AP_ID_pair_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_UE_S1AP_ID_pair_ExtIEs( SI_S1AP_DT_PDU_UE_S1AP_ID_pair_ExtIEs ** objPDUUE_S1AP_ID_pair_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs( SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs * objPDUUE_associatedLogicalS1_ConnectionItemExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs( SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs * objPDUUE_associatedLogicalS1_ConnectionItemExtIEs);
void __si_s1ap_debug_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs( char * key, SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs * objPDUUE_associatedLogicalS1_ConnectionItemExtIEs, int lvl);
int __si_s1ap_Decode_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs( SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemExtIEs ** objPDUUE_associatedLogicalS1_ConnectionItemExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UESecurityCapabilities_ExtIEs( SI_S1AP_DT_PDU_UESecurityCapabilities_ExtIEs * objPDUUESecurityCapabilities_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UESecurityCapabilities_ExtIEs( SI_S1AP_DT_PDU_UESecurityCapabilities_ExtIEs * objPDUUESecurityCapabilities_ExtIEs);
void __si_s1ap_debug_PDU_UESecurityCapabilities_ExtIEs( char * key, SI_S1AP_DT_PDU_UESecurityCapabilities_ExtIEs * objPDUUESecurityCapabilities_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_UESecurityCapabilities_ExtIEs( SI_S1AP_DT_PDU_UESecurityCapabilities_ExtIEs ** objPDUUESecurityCapabilities_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs( SI_S1AP_DT_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs * objPDUUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs( SI_S1AP_DT_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs * objPDUUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs);
void __si_s1ap_debug_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs( char * key, SI_S1AP_DT_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs * objPDUUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs( SI_S1AP_DT_PDU_UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs ** objPDUUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UL_CP_SecurityInformation_ExtIEs( SI_S1AP_DT_PDU_UL_CP_SecurityInformation_ExtIEs * objPDUUL_CP_SecurityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UL_CP_SecurityInformation_ExtIEs( SI_S1AP_DT_PDU_UL_CP_SecurityInformation_ExtIEs * objPDUUL_CP_SecurityInformation_ExtIEs);
void __si_s1ap_debug_PDU_UL_CP_SecurityInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_UL_CP_SecurityInformation_ExtIEs * objPDUUL_CP_SecurityInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_UL_CP_SecurityInformation_ExtIEs( SI_S1AP_DT_PDU_UL_CP_SecurityInformation_ExtIEs ** objPDUUL_CP_SecurityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UserLocationInformation_ExtIEs( SI_S1AP_DT_PDU_UserLocationInformation_ExtIEs * objPDUUserLocationInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UserLocationInformation_ExtIEs( SI_S1AP_DT_PDU_UserLocationInformation_ExtIEs * objPDUUserLocationInformation_ExtIEs);
void __si_s1ap_debug_PDU_UserLocationInformation_ExtIEs( char * key, SI_S1AP_DT_PDU_UserLocationInformation_ExtIEs * objPDUUserLocationInformation_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_UserLocationInformation_ExtIEs( SI_S1AP_DT_PDU_UserLocationInformation_ExtIEs ** objPDUUserLocationInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_V2XServicesAuthorized_ExtIEs( SI_S1AP_DT_PDU_V2XServicesAuthorized_ExtIEs * objPDUV2XServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_V2XServicesAuthorized_ExtIEs( SI_S1AP_DT_PDU_V2XServicesAuthorized_ExtIEs * objPDUV2XServicesAuthorized_ExtIEs);
void __si_s1ap_debug_PDU_V2XServicesAuthorized_ExtIEs( char * key, SI_S1AP_DT_PDU_V2XServicesAuthorized_ExtIEs * objPDUV2XServicesAuthorized_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_V2XServicesAuthorized_ExtIEs( SI_S1AP_DT_PDU_V2XServicesAuthorized_ExtIEs ** objPDUV2XServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_WLANMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_WLANMeasurementConfiguration_ExtIEs * objPDUWLANMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_WLANMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_WLANMeasurementConfiguration_ExtIEs * objPDUWLANMeasurementConfiguration_ExtIEs);
void __si_s1ap_debug_PDU_WLANMeasurementConfiguration_ExtIEs( char * key, SI_S1AP_DT_PDU_WLANMeasurementConfiguration_ExtIEs * objPDUWLANMeasurementConfiguration_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_WLANMeasurementConfiguration_ExtIEs( SI_S1AP_DT_PDU_WLANMeasurementConfiguration_ExtIEs ** objPDUWLANMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_WUS_Assistance_Information_ExtIEs( SI_S1AP_DT_PDU_WUS_Assistance_Information_ExtIEs * objPDUWUS_Assistance_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_WUS_Assistance_Information_ExtIEs( SI_S1AP_DT_PDU_WUS_Assistance_Information_ExtIEs * objPDUWUS_Assistance_Information_ExtIEs);
void __si_s1ap_debug_PDU_WUS_Assistance_Information_ExtIEs( char * key, SI_S1AP_DT_PDU_WUS_Assistance_Information_ExtIEs * objPDUWUS_Assistance_Information_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_WUS_Assistance_Information_ExtIEs( SI_S1AP_DT_PDU_WUS_Assistance_Information_ExtIEs ** objPDUWUS_Assistance_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_X2TNLConfigurationInfo_ExtIEs( SI_S1AP_DT_PDU_X2TNLConfigurationInfo_ExtIEs * objPDUX2TNLConfigurationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_X2TNLConfigurationInfo_ExtIEs( SI_S1AP_DT_PDU_X2TNLConfigurationInfo_ExtIEs * objPDUX2TNLConfigurationInfo_ExtIEs);
void __si_s1ap_debug_PDU_X2TNLConfigurationInfo_ExtIEs( char * key, SI_S1AP_DT_PDU_X2TNLConfigurationInfo_ExtIEs * objPDUX2TNLConfigurationInfo_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_X2TNLConfigurationInfo_ExtIEs( SI_S1AP_DT_PDU_X2TNLConfigurationInfo_ExtIEs ** objPDUX2TNLConfigurationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_ENBX2ExtTLA_ExtIEs( SI_S1AP_DT_PDU_ENBX2ExtTLA_ExtIEs * objPDUENBX2ExtTLA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_ENBX2ExtTLA_ExtIEs( SI_S1AP_DT_PDU_ENBX2ExtTLA_ExtIEs * objPDUENBX2ExtTLA_ExtIEs);
void __si_s1ap_debug_PDU_ENBX2ExtTLA_ExtIEs( char * key, SI_S1AP_DT_PDU_ENBX2ExtTLA_ExtIEs * objPDUENBX2ExtTLA_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_ENBX2ExtTLA_ExtIEs( SI_S1AP_DT_PDU_ENBX2ExtTLA_ExtIEs ** objPDUENBX2ExtTLA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABDataForwardingItem_ExtIEs( SI_S1AP_DT_PDU_E_RABDataForwardingItem_ExtIEs * objPDUE_RABDataForwardingItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABDataForwardingItem_ExtIEs( SI_S1AP_DT_PDU_E_RABDataForwardingItem_ExtIEs * objPDUE_RABDataForwardingItem_ExtIEs);
void __si_s1ap_debug_PDU_E_RABDataForwardingItem_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABDataForwardingItem_ExtIEs * objPDUE_RABDataForwardingItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABDataForwardingItem_ExtIEs( SI_S1AP_DT_PDU_E_RABDataForwardingItem_ExtIEs ** objPDUE_RABDataForwardingItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeSetupItemHOReq_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemHOReq_ExtIEs * objPDUE_RABToBeSetupItemHOReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeSetupItemHOReq_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemHOReq_ExtIEs * objPDUE_RABToBeSetupItemHOReq_ExtIEs);
void __si_s1ap_debug_PDU_E_RABToBeSetupItemHOReq_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeSetupItemHOReq_ExtIEs * objPDUE_RABToBeSetupItemHOReq_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeSetupItemHOReq_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemHOReq_ExtIEs ** objPDUE_RABToBeSetupItemHOReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABAdmittedItem_ExtIEs( SI_S1AP_DT_PDU_E_RABAdmittedItem_ExtIEs * objPDUE_RABAdmittedItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABAdmittedItem_ExtIEs( SI_S1AP_DT_PDU_E_RABAdmittedItem_ExtIEs * objPDUE_RABAdmittedItem_ExtIEs);
void __si_s1ap_debug_PDU_E_RABAdmittedItem_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABAdmittedItem_ExtIEs * objPDUE_RABAdmittedItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABAdmittedItem_ExtIEs( SI_S1AP_DT_PDU_E_RABAdmittedItem_ExtIEs ** objPDUE_RABAdmittedItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABFailedToSetupItemHOReqAckExtIEs( SI_S1AP_DT_PDU_E_RABFailedToSetupItemHOReqAckExtIEs * objPDUE_RABFailedToSetupItemHOReqAckExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABFailedToSetupItemHOReqAckExtIEs( SI_S1AP_DT_PDU_E_RABFailedToSetupItemHOReqAckExtIEs * objPDUE_RABFailedToSetupItemHOReqAckExtIEs);
void __si_s1ap_debug_PDU_E_RABFailedToSetupItemHOReqAckExtIEs( char * key, SI_S1AP_DT_PDU_E_RABFailedToSetupItemHOReqAckExtIEs * objPDUE_RABFailedToSetupItemHOReqAckExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABFailedToSetupItemHOReqAckExtIEs( SI_S1AP_DT_PDU_E_RABFailedToSetupItemHOReqAckExtIEs ** objPDUE_RABFailedToSetupItemHOReqAckExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeSwitchedDLItem_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeSwitchedDLItem_ExtIEs * objPDUE_RABToBeSwitchedDLItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeSwitchedDLItem_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeSwitchedDLItem_ExtIEs * objPDUE_RABToBeSwitchedDLItem_ExtIEs);
void __si_s1ap_debug_PDU_E_RABToBeSwitchedDLItem_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeSwitchedDLItem_ExtIEs * objPDUE_RABToBeSwitchedDLItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeSwitchedDLItem_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeSwitchedDLItem_ExtIEs ** objPDUE_RABToBeSwitchedDLItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeSwitchedULItem_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeSwitchedULItem_ExtIEs * objPDUE_RABToBeSwitchedULItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeSwitchedULItem_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeSwitchedULItem_ExtIEs * objPDUE_RABToBeSwitchedULItem_ExtIEs);
void __si_s1ap_debug_PDU_E_RABToBeSwitchedULItem_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeSwitchedULItem_ExtIEs * objPDUE_RABToBeSwitchedULItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeSwitchedULItem_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeSwitchedULItem_ExtIEs ** objPDUE_RABToBeSwitchedULItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeUpdatedItem_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeUpdatedItem_ExtIEs * objPDUE_RABToBeUpdatedItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeUpdatedItem_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeUpdatedItem_ExtIEs * objPDUE_RABToBeUpdatedItem_ExtIEs);
void __si_s1ap_debug_PDU_E_RABToBeUpdatedItem_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeUpdatedItem_ExtIEs * objPDUE_RABToBeUpdatedItem_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeUpdatedItem_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeUpdatedItem_ExtIEs ** objPDUE_RABToBeUpdatedItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeSetupItemBearerSUReqIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqIEs * objPDUE_RABToBeSetupItemBearerSUReqIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeSetupItemBearerSUReqIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqIEs * objPDUE_RABToBeSetupItemBearerSUReqIEs);
void __si_s1ap_debug_PDU_E_RABToBeSetupItemBearerSUReqIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqIEs * objPDUE_RABToBeSetupItemBearerSUReqIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeSetupItemBearerSUReqIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqIEs ** objPDUE_RABToBeSetupItemBearerSUReqIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeSetupItemBearerSUReqExtIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqExtIEs * objPDUE_RABToBeSetupItemBearerSUReqExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeSetupItemBearerSUReqExtIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqExtIEs * objPDUE_RABToBeSetupItemBearerSUReqExtIEs);
void __si_s1ap_debug_PDU_E_RABToBeSetupItemBearerSUReqExtIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqExtIEs * objPDUE_RABToBeSetupItemBearerSUReqExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeSetupItemBearerSUReqExtIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemBearerSUReqExtIEs ** objPDUE_RABToBeSetupItemBearerSUReqExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABSetupItemBearerSUResIEs( SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResIEs * objPDUE_RABSetupItemBearerSUResIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABSetupItemBearerSUResIEs( SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResIEs * objPDUE_RABSetupItemBearerSUResIEs);
void __si_s1ap_debug_PDU_E_RABSetupItemBearerSUResIEs( char * key, SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResIEs * objPDUE_RABSetupItemBearerSUResIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABSetupItemBearerSUResIEs( SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResIEs ** objPDUE_RABSetupItemBearerSUResIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABSetupItemBearerSUResExtIEs( SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResExtIEs * objPDUE_RABSetupItemBearerSUResExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABSetupItemBearerSUResExtIEs( SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResExtIEs * objPDUE_RABSetupItemBearerSUResExtIEs);
void __si_s1ap_debug_PDU_E_RABSetupItemBearerSUResExtIEs( char * key, SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResExtIEs * objPDUE_RABSetupItemBearerSUResExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABSetupItemBearerSUResExtIEs( SI_S1AP_DT_PDU_E_RABSetupItemBearerSUResExtIEs ** objPDUE_RABSetupItemBearerSUResExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeModifiedItemBearerModReqIEs( SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModReqIEs * objPDUE_RABToBeModifiedItemBearerModReqIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeModifiedItemBearerModReqIEs( SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModReqIEs * objPDUE_RABToBeModifiedItemBearerModReqIEs);
void __si_s1ap_debug_PDU_E_RABToBeModifiedItemBearerModReqIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModReqIEs * objPDUE_RABToBeModifiedItemBearerModReqIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeModifiedItemBearerModReqIEs( SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModReqIEs ** objPDUE_RABToBeModifiedItemBearerModReqIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeModifyItemBearerModReqExtIEs( SI_S1AP_DT_PDU_E_RABToBeModifyItemBearerModReqExtIEs * objPDUE_RABToBeModifyItemBearerModReqExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeModifyItemBearerModReqExtIEs( SI_S1AP_DT_PDU_E_RABToBeModifyItemBearerModReqExtIEs * objPDUE_RABToBeModifyItemBearerModReqExtIEs);
void __si_s1ap_debug_PDU_E_RABToBeModifyItemBearerModReqExtIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeModifyItemBearerModReqExtIEs * objPDUE_RABToBeModifyItemBearerModReqExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeModifyItemBearerModReqExtIEs( SI_S1AP_DT_PDU_E_RABToBeModifyItemBearerModReqExtIEs ** objPDUE_RABToBeModifyItemBearerModReqExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABModifyItemBearerModResIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModResIEs * objPDUE_RABModifyItemBearerModResIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABModifyItemBearerModResIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModResIEs * objPDUE_RABModifyItemBearerModResIEs);
void __si_s1ap_debug_PDU_E_RABModifyItemBearerModResIEs( char * key, SI_S1AP_DT_PDU_E_RABModifyItemBearerModResIEs * objPDUE_RABModifyItemBearerModResIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABModifyItemBearerModResIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModResIEs ** objPDUE_RABModifyItemBearerModResIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABModifyItemBearerModResExtIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModResExtIEs * objPDUE_RABModifyItemBearerModResExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABModifyItemBearerModResExtIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModResExtIEs * objPDUE_RABModifyItemBearerModResExtIEs);
void __si_s1ap_debug_PDU_E_RABModifyItemBearerModResExtIEs( char * key, SI_S1AP_DT_PDU_E_RABModifyItemBearerModResExtIEs * objPDUE_RABModifyItemBearerModResExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABModifyItemBearerModResExtIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModResExtIEs ** objPDUE_RABModifyItemBearerModResExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABReleaseItemBearerRelCompIEs( SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompIEs * objPDUE_RABReleaseItemBearerRelCompIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABReleaseItemBearerRelCompIEs( SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompIEs * objPDUE_RABReleaseItemBearerRelCompIEs);
void __si_s1ap_debug_PDU_E_RABReleaseItemBearerRelCompIEs( char * key, SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompIEs * objPDUE_RABReleaseItemBearerRelCompIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABReleaseItemBearerRelCompIEs( SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompIEs ** objPDUE_RABReleaseItemBearerRelCompIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABReleaseItemBearerRelCompExtIEs( SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompExtIEs * objPDUE_RABReleaseItemBearerRelCompExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABReleaseItemBearerRelCompExtIEs( SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompExtIEs * objPDUE_RABReleaseItemBearerRelCompExtIEs);
void __si_s1ap_debug_PDU_E_RABReleaseItemBearerRelCompExtIEs( char * key, SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompExtIEs * objPDUE_RABReleaseItemBearerRelCompExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABReleaseItemBearerRelCompExtIEs( SI_S1AP_DT_PDU_E_RABReleaseItemBearerRelCompExtIEs ** objPDUE_RABReleaseItemBearerRelCompExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeSetupItemCtxtSUReqIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqIEs * objPDUE_RABToBeSetupItemCtxtSUReqIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeSetupItemCtxtSUReqIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqIEs * objPDUE_RABToBeSetupItemCtxtSUReqIEs);
void __si_s1ap_debug_PDU_E_RABToBeSetupItemCtxtSUReqIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqIEs * objPDUE_RABToBeSetupItemCtxtSUReqIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeSetupItemCtxtSUReqIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqIEs ** objPDUE_RABToBeSetupItemCtxtSUReqIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs * objPDUE_RABToBeSetupItemCtxtSUReqExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs * objPDUE_RABToBeSetupItemCtxtSUReqExtIEs);
void __si_s1ap_debug_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs * objPDUE_RABToBeSetupItemCtxtSUReqExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs( SI_S1AP_DT_PDU_E_RABToBeSetupItemCtxtSUReqExtIEs ** objPDUE_RABToBeSetupItemCtxtSUReqExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABSetupItemCtxtSUResIEs( SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResIEs * objPDUE_RABSetupItemCtxtSUResIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABSetupItemCtxtSUResIEs( SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResIEs * objPDUE_RABSetupItemCtxtSUResIEs);
void __si_s1ap_debug_PDU_E_RABSetupItemCtxtSUResIEs( char * key, SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResIEs * objPDUE_RABSetupItemCtxtSUResIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABSetupItemCtxtSUResIEs( SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResIEs ** objPDUE_RABSetupItemCtxtSUResIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABSetupItemCtxtSUResExtIEs( SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResExtIEs * objPDUE_RABSetupItemCtxtSUResExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABSetupItemCtxtSUResExtIEs( SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResExtIEs * objPDUE_RABSetupItemCtxtSUResExtIEs);
void __si_s1ap_debug_PDU_E_RABSetupItemCtxtSUResExtIEs( char * key, SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResExtIEs * objPDUE_RABSetupItemCtxtSUResExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABSetupItemCtxtSUResExtIEs( SI_S1AP_DT_PDU_E_RABSetupItemCtxtSUResExtIEs ** objPDUE_RABSetupItemCtxtSUResExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TAIItemIEs( SI_S1AP_DT_PDU_TAIItemIEs * objPDUTAIItemIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TAIItemIEs( SI_S1AP_DT_PDU_TAIItemIEs * objPDUTAIItemIEs);
void __si_s1ap_debug_PDU_TAIItemIEs( char * key, SI_S1AP_DT_PDU_TAIItemIEs * objPDUTAIItemIEs, int lvl);
int __si_s1ap_Decode_PDU_TAIItemIEs( SI_S1AP_DT_PDU_TAIItemIEs ** objPDUTAIItemIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_TAIItemExtIEs( SI_S1AP_DT_PDU_TAIItemExtIEs * objPDUTAIItemExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_TAIItemExtIEs( SI_S1AP_DT_PDU_TAIItemExtIEs * objPDUTAIItemExtIEs);
void __si_s1ap_debug_PDU_TAIItemExtIEs( char * key, SI_S1AP_DT_PDU_TAIItemExtIEs * objPDUTAIItemExtIEs, int lvl);
int __si_s1ap_Decode_PDU_TAIItemExtIEs( SI_S1AP_DT_PDU_TAIItemExtIEs ** objPDUTAIItemExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UE_associatedLogicalS1_ConnectionItemRes( SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemRes * objPDUUE_associatedLogicalS1_ConnectionItemRes, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UE_associatedLogicalS1_ConnectionItemRes( SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemRes * objPDUUE_associatedLogicalS1_ConnectionItemRes);
void __si_s1ap_debug_PDU_UE_associatedLogicalS1_ConnectionItemRes( char * key, SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemRes * objPDUUE_associatedLogicalS1_ConnectionItemRes, int lvl);
int __si_s1ap_Decode_PDU_UE_associatedLogicalS1_ConnectionItemRes( SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemRes ** objPDUUE_associatedLogicalS1_ConnectionItemRes, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_UE_associatedLogicalS1_ConnectionItemResAck( SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemResAck * objPDUUE_associatedLogicalS1_ConnectionItemResAck, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_UE_associatedLogicalS1_ConnectionItemResAck( SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemResAck * objPDUUE_associatedLogicalS1_ConnectionItemResAck);
void __si_s1ap_debug_PDU_UE_associatedLogicalS1_ConnectionItemResAck( char * key, SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemResAck * objPDUUE_associatedLogicalS1_ConnectionItemResAck, int lvl);
int __si_s1ap_Decode_PDU_UE_associatedLogicalS1_ConnectionItemResAck( SI_S1AP_DT_PDU_UE_associatedLogicalS1_ConnectionItemResAck ** objPDUUE_associatedLogicalS1_ConnectionItemResAck, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs * objPDUE_RABToBeModifiedItemBearerModInd_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs * objPDUE_RABToBeModifiedItemBearerModInd_ExtIEs);
void __si_s1ap_debug_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs * objPDUE_RABToBeModifiedItemBearerModInd_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs( SI_S1AP_DT_PDU_E_RABToBeModifiedItemBearerModInd_ExtIEs ** objPDUE_RABToBeModifiedItemBearerModInd_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs( SI_S1AP_DT_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs * objPDUE_RABNotToBeModifiedItemBearerModInd_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs( SI_S1AP_DT_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs * objPDUE_RABNotToBeModifiedItemBearerModInd_ExtIEs);
void __si_s1ap_debug_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs * objPDUE_RABNotToBeModifiedItemBearerModInd_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs( SI_S1AP_DT_PDU_E_RABNotToBeModifiedItemBearerModInd_ExtIEs ** objPDUE_RABNotToBeModifiedItemBearerModInd_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_CSGMembershipInfo_ExtIEs( SI_S1AP_DT_PDU_CSGMembershipInfo_ExtIEs * objPDUCSGMembershipInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_CSGMembershipInfo_ExtIEs( SI_S1AP_DT_PDU_CSGMembershipInfo_ExtIEs * objPDUCSGMembershipInfo_ExtIEs);
void __si_s1ap_debug_PDU_CSGMembershipInfo_ExtIEs( char * key, SI_S1AP_DT_PDU_CSGMembershipInfo_ExtIEs * objPDUCSGMembershipInfo_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_CSGMembershipInfo_ExtIEs( SI_S1AP_DT_PDU_CSGMembershipInfo_ExtIEs ** objPDUCSGMembershipInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABModifyItemBearerModConfIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfIEs * objPDUE_RABModifyItemBearerModConfIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABModifyItemBearerModConfIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfIEs * objPDUE_RABModifyItemBearerModConfIEs);
void __si_s1ap_debug_PDU_E_RABModifyItemBearerModConfIEs( char * key, SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfIEs * objPDUE_RABModifyItemBearerModConfIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABModifyItemBearerModConfIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfIEs ** objPDUE_RABModifyItemBearerModConfIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABModifyItemBearerModConfExtIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfExtIEs * objPDUE_RABModifyItemBearerModConfExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABModifyItemBearerModConfExtIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfExtIEs * objPDUE_RABModifyItemBearerModConfExtIEs);
void __si_s1ap_debug_PDU_E_RABModifyItemBearerModConfExtIEs( char * key, SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfExtIEs * objPDUE_RABModifyItemBearerModConfExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABModifyItemBearerModConfExtIEs( SI_S1AP_DT_PDU_E_RABModifyItemBearerModConfExtIEs ** objPDUE_RABModifyItemBearerModConfExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs( SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs * objPDUE_RABFailedToResumeItemResumeReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs( SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs * objPDUE_RABFailedToResumeItemResumeReq_ExtIEs);
void __si_s1ap_debug_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs * objPDUE_RABFailedToResumeItemResumeReq_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs( SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeReq_ExtIEs ** objPDUE_RABFailedToResumeItemResumeReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8651 NonEP-Decode 
int __si_s1ap_Encode_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs( SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs * objPDUE_RABFailedToResumeItemResumeRes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_s1ap_memfree_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs( SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs * objPDUE_RABFailedToResumeItemResumeRes_ExtIEs);
void __si_s1ap_debug_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs( char * key, SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs * objPDUE_RABFailedToResumeItemResumeRes_ExtIEs, int lvl);
int __si_s1ap_Decode_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs( SI_S1AP_DT_PDU_E_RABFailedToResumeItemResumeRes_ExtIEs ** objPDUE_RABFailedToResumeItemResumeRes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

// ELEMENTARY-PROCEDURE = [0] handoverPreparation  L:8677
// ProcedureCode = 0
// ProcedureCodeName = id-HandoverPreparation
// Criticality = reject

int __si_s1ap_encode_pdu_HandoverRequired( SI_S1AP_DT_PDU_HandoverRequired * objPDUHandoverRequired, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverRequired( SI_S1AP_DT_PDU_HandoverRequired * objPDUHandoverRequired, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverRequired( SI_S1AP_DT_PDU_HandoverRequired * objPDUHandoverRequired);

int __si_s1ap_memfree_pdu_HandoverRequired( SI_S1AP_DT_PDU_HandoverRequired * objPDUHandoverRequired);



// ELEMENTARY-PROCEDURE = [0] handoverPreparation  L:8677
// ProcedureCode = 0
// ProcedureCodeName = id-HandoverPreparation
// Criticality = reject

int __si_s1ap_encode_pdu_HandoverCommand( SI_S1AP_DT_PDU_HandoverCommand * objPDUHandoverCommand, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverCommand( SI_S1AP_DT_PDU_HandoverCommand * objPDUHandoverCommand, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverCommand( SI_S1AP_DT_PDU_HandoverCommand * objPDUHandoverCommand);

int __si_s1ap_memfree_pdu_HandoverCommand( SI_S1AP_DT_PDU_HandoverCommand * objPDUHandoverCommand);



// ELEMENTARY-PROCEDURE = [0] handoverPreparation  L:8677
// ProcedureCode = 0
// ProcedureCodeName = id-HandoverPreparation
// Criticality = reject

int __si_s1ap_encode_pdu_HandoverPreparationFailure( SI_S1AP_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverPreparationFailure( SI_S1AP_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverPreparationFailure( SI_S1AP_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure);

int __si_s1ap_memfree_pdu_HandoverPreparationFailure( SI_S1AP_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure);



// ELEMENTARY-PROCEDURE = [0] handoverResourceAllocation  L:8677
// ProcedureCode = 1
// ProcedureCodeName = id-HandoverResourceAllocation
// Criticality = reject

int __si_s1ap_encode_pdu_HandoverRequest( SI_S1AP_DT_PDU_HandoverRequest * objPDUHandoverRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverRequest( SI_S1AP_DT_PDU_HandoverRequest * objPDUHandoverRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverRequest( SI_S1AP_DT_PDU_HandoverRequest * objPDUHandoverRequest);

int __si_s1ap_memfree_pdu_HandoverRequest( SI_S1AP_DT_PDU_HandoverRequest * objPDUHandoverRequest);



// ELEMENTARY-PROCEDURE = [0] handoverResourceAllocation  L:8677
// ProcedureCode = 1
// ProcedureCodeName = id-HandoverResourceAllocation
// Criticality = reject

int __si_s1ap_encode_pdu_HandoverRequestAcknowledge( SI_S1AP_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverRequestAcknowledge( SI_S1AP_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverRequestAcknowledge( SI_S1AP_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge);

int __si_s1ap_memfree_pdu_HandoverRequestAcknowledge( SI_S1AP_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge);



// ELEMENTARY-PROCEDURE = [0] handoverResourceAllocation  L:8677
// ProcedureCode = 1
// ProcedureCodeName = id-HandoverResourceAllocation
// Criticality = reject

int __si_s1ap_encode_pdu_HandoverFailure( SI_S1AP_DT_PDU_HandoverFailure * objPDUHandoverFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverFailure( SI_S1AP_DT_PDU_HandoverFailure * objPDUHandoverFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverFailure( SI_S1AP_DT_PDU_HandoverFailure * objPDUHandoverFailure);

int __si_s1ap_memfree_pdu_HandoverFailure( SI_S1AP_DT_PDU_HandoverFailure * objPDUHandoverFailure);



// ELEMENTARY-PROCEDURE = [0] handoverNotification  L:8677
// ProcedureCode = 2
// ProcedureCodeName = id-HandoverNotification
// Criticality = ignore

int __si_s1ap_encode_pdu_HandoverNotify( SI_S1AP_DT_PDU_HandoverNotify * objPDUHandoverNotify, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverNotify( SI_S1AP_DT_PDU_HandoverNotify * objPDUHandoverNotify, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverNotify( SI_S1AP_DT_PDU_HandoverNotify * objPDUHandoverNotify);

int __si_s1ap_memfree_pdu_HandoverNotify( SI_S1AP_DT_PDU_HandoverNotify * objPDUHandoverNotify);



// ELEMENTARY-PROCEDURE = [0] pathSwitchRequest  L:8677
// ProcedureCode = 3
// ProcedureCodeName = id-PathSwitchRequest
// Criticality = reject

int __si_s1ap_encode_pdu_PathSwitchRequest( SI_S1AP_DT_PDU_PathSwitchRequest * objPDUPathSwitchRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_PathSwitchRequest( SI_S1AP_DT_PDU_PathSwitchRequest * objPDUPathSwitchRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_PathSwitchRequest( SI_S1AP_DT_PDU_PathSwitchRequest * objPDUPathSwitchRequest);

int __si_s1ap_memfree_pdu_PathSwitchRequest( SI_S1AP_DT_PDU_PathSwitchRequest * objPDUPathSwitchRequest);



// ELEMENTARY-PROCEDURE = [0] pathSwitchRequest  L:8677
// ProcedureCode = 3
// ProcedureCodeName = id-PathSwitchRequest
// Criticality = reject

int __si_s1ap_encode_pdu_PathSwitchRequestAcknowledge( SI_S1AP_DT_PDU_PathSwitchRequestAcknowledge * objPDUPathSwitchRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_PathSwitchRequestAcknowledge( SI_S1AP_DT_PDU_PathSwitchRequestAcknowledge * objPDUPathSwitchRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_PathSwitchRequestAcknowledge( SI_S1AP_DT_PDU_PathSwitchRequestAcknowledge * objPDUPathSwitchRequestAcknowledge);

int __si_s1ap_memfree_pdu_PathSwitchRequestAcknowledge( SI_S1AP_DT_PDU_PathSwitchRequestAcknowledge * objPDUPathSwitchRequestAcknowledge);



// ELEMENTARY-PROCEDURE = [0] pathSwitchRequest  L:8677
// ProcedureCode = 3
// ProcedureCodeName = id-PathSwitchRequest
// Criticality = reject

int __si_s1ap_encode_pdu_PathSwitchRequestFailure( SI_S1AP_DT_PDU_PathSwitchRequestFailure * objPDUPathSwitchRequestFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_PathSwitchRequestFailure( SI_S1AP_DT_PDU_PathSwitchRequestFailure * objPDUPathSwitchRequestFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_PathSwitchRequestFailure( SI_S1AP_DT_PDU_PathSwitchRequestFailure * objPDUPathSwitchRequestFailure);

int __si_s1ap_memfree_pdu_PathSwitchRequestFailure( SI_S1AP_DT_PDU_PathSwitchRequestFailure * objPDUPathSwitchRequestFailure);



// ELEMENTARY-PROCEDURE = [0] e-RABSetup  L:8677
// ProcedureCode = 5
// ProcedureCodeName = id-E-RABSetup
// Criticality = reject

int __si_s1ap_encode_pdu_E_RABSetupRequest( SI_S1AP_DT_PDU_E_RABSetupRequest * objPDUE_RABSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_E_RABSetupRequest( SI_S1AP_DT_PDU_E_RABSetupRequest * objPDUE_RABSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_E_RABSetupRequest( SI_S1AP_DT_PDU_E_RABSetupRequest * objPDUE_RABSetupRequest);

int __si_s1ap_memfree_pdu_E_RABSetupRequest( SI_S1AP_DT_PDU_E_RABSetupRequest * objPDUE_RABSetupRequest);



// ELEMENTARY-PROCEDURE = [0] e-RABSetup  L:8677
// ProcedureCode = 5
// ProcedureCodeName = id-E-RABSetup
// Criticality = reject

int __si_s1ap_encode_pdu_E_RABSetupResponse( SI_S1AP_DT_PDU_E_RABSetupResponse * objPDUE_RABSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_E_RABSetupResponse( SI_S1AP_DT_PDU_E_RABSetupResponse * objPDUE_RABSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_E_RABSetupResponse( SI_S1AP_DT_PDU_E_RABSetupResponse * objPDUE_RABSetupResponse);

int __si_s1ap_memfree_pdu_E_RABSetupResponse( SI_S1AP_DT_PDU_E_RABSetupResponse * objPDUE_RABSetupResponse);



// ELEMENTARY-PROCEDURE = [0] e-RABModify  L:8677
// ProcedureCode = 6
// ProcedureCodeName = id-E-RABModify
// Criticality = reject

int __si_s1ap_encode_pdu_E_RABModifyRequest( SI_S1AP_DT_PDU_E_RABModifyRequest * objPDUE_RABModifyRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_E_RABModifyRequest( SI_S1AP_DT_PDU_E_RABModifyRequest * objPDUE_RABModifyRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_E_RABModifyRequest( SI_S1AP_DT_PDU_E_RABModifyRequest * objPDUE_RABModifyRequest);

int __si_s1ap_memfree_pdu_E_RABModifyRequest( SI_S1AP_DT_PDU_E_RABModifyRequest * objPDUE_RABModifyRequest);



// ELEMENTARY-PROCEDURE = [0] e-RABModify  L:8677
// ProcedureCode = 6
// ProcedureCodeName = id-E-RABModify
// Criticality = reject

int __si_s1ap_encode_pdu_E_RABModifyResponse( SI_S1AP_DT_PDU_E_RABModifyResponse * objPDUE_RABModifyResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_E_RABModifyResponse( SI_S1AP_DT_PDU_E_RABModifyResponse * objPDUE_RABModifyResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_E_RABModifyResponse( SI_S1AP_DT_PDU_E_RABModifyResponse * objPDUE_RABModifyResponse);

int __si_s1ap_memfree_pdu_E_RABModifyResponse( SI_S1AP_DT_PDU_E_RABModifyResponse * objPDUE_RABModifyResponse);



// ELEMENTARY-PROCEDURE = [0] e-RABRelease  L:8677
// ProcedureCode = 7
// ProcedureCodeName = id-E-RABRelease
// Criticality = reject

int __si_s1ap_encode_pdu_E_RABReleaseCommand( SI_S1AP_DT_PDU_E_RABReleaseCommand * objPDUE_RABReleaseCommand, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_E_RABReleaseCommand( SI_S1AP_DT_PDU_E_RABReleaseCommand * objPDUE_RABReleaseCommand, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_E_RABReleaseCommand( SI_S1AP_DT_PDU_E_RABReleaseCommand * objPDUE_RABReleaseCommand);

int __si_s1ap_memfree_pdu_E_RABReleaseCommand( SI_S1AP_DT_PDU_E_RABReleaseCommand * objPDUE_RABReleaseCommand);



// ELEMENTARY-PROCEDURE = [0] e-RABRelease  L:8677
// ProcedureCode = 7
// ProcedureCodeName = id-E-RABRelease
// Criticality = reject

int __si_s1ap_encode_pdu_E_RABReleaseResponse( SI_S1AP_DT_PDU_E_RABReleaseResponse * objPDUE_RABReleaseResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_E_RABReleaseResponse( SI_S1AP_DT_PDU_E_RABReleaseResponse * objPDUE_RABReleaseResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_E_RABReleaseResponse( SI_S1AP_DT_PDU_E_RABReleaseResponse * objPDUE_RABReleaseResponse);

int __si_s1ap_memfree_pdu_E_RABReleaseResponse( SI_S1AP_DT_PDU_E_RABReleaseResponse * objPDUE_RABReleaseResponse);



// ELEMENTARY-PROCEDURE = [0] e-RABReleaseIndication  L:8677
// ProcedureCode = 8
// ProcedureCodeName = id-E-RABReleaseIndication
// Criticality = ignore

int __si_s1ap_encode_pdu_E_RABReleaseIndication( SI_S1AP_DT_PDU_E_RABReleaseIndication * objPDUE_RABReleaseIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_E_RABReleaseIndication( SI_S1AP_DT_PDU_E_RABReleaseIndication * objPDUE_RABReleaseIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_E_RABReleaseIndication( SI_S1AP_DT_PDU_E_RABReleaseIndication * objPDUE_RABReleaseIndication);

int __si_s1ap_memfree_pdu_E_RABReleaseIndication( SI_S1AP_DT_PDU_E_RABReleaseIndication * objPDUE_RABReleaseIndication);



// ELEMENTARY-PROCEDURE = [0] initialContextSetup  L:8677
// ProcedureCode = 9
// ProcedureCodeName = id-InitialContextSetup
// Criticality = reject

int __si_s1ap_encode_pdu_InitialContextSetupRequest( SI_S1AP_DT_PDU_InitialContextSetupRequest * objPDUInitialContextSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_InitialContextSetupRequest( SI_S1AP_DT_PDU_InitialContextSetupRequest * objPDUInitialContextSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_InitialContextSetupRequest( SI_S1AP_DT_PDU_InitialContextSetupRequest * objPDUInitialContextSetupRequest);

int __si_s1ap_memfree_pdu_InitialContextSetupRequest( SI_S1AP_DT_PDU_InitialContextSetupRequest * objPDUInitialContextSetupRequest);



// ELEMENTARY-PROCEDURE = [0] initialContextSetup  L:8677
// ProcedureCode = 9
// ProcedureCodeName = id-InitialContextSetup
// Criticality = reject

int __si_s1ap_encode_pdu_InitialContextSetupResponse( SI_S1AP_DT_PDU_InitialContextSetupResponse * objPDUInitialContextSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_InitialContextSetupResponse( SI_S1AP_DT_PDU_InitialContextSetupResponse * objPDUInitialContextSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_InitialContextSetupResponse( SI_S1AP_DT_PDU_InitialContextSetupResponse * objPDUInitialContextSetupResponse);

int __si_s1ap_memfree_pdu_InitialContextSetupResponse( SI_S1AP_DT_PDU_InitialContextSetupResponse * objPDUInitialContextSetupResponse);



// ELEMENTARY-PROCEDURE = [0] initialContextSetup  L:8677
// ProcedureCode = 9
// ProcedureCodeName = id-InitialContextSetup
// Criticality = reject

int __si_s1ap_encode_pdu_InitialContextSetupFailure( SI_S1AP_DT_PDU_InitialContextSetupFailure * objPDUInitialContextSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_InitialContextSetupFailure( SI_S1AP_DT_PDU_InitialContextSetupFailure * objPDUInitialContextSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_InitialContextSetupFailure( SI_S1AP_DT_PDU_InitialContextSetupFailure * objPDUInitialContextSetupFailure);

int __si_s1ap_memfree_pdu_InitialContextSetupFailure( SI_S1AP_DT_PDU_InitialContextSetupFailure * objPDUInitialContextSetupFailure);



// ELEMENTARY-PROCEDURE = [0] uEContextReleaseRequest  L:8677
// ProcedureCode = 18
// ProcedureCodeName = id-UEContextReleaseRequest
// Criticality = ignore

int __si_s1ap_encode_pdu_UEContextReleaseRequest( SI_S1AP_DT_PDU_UEContextReleaseRequest * objPDUUEContextReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextReleaseRequest( SI_S1AP_DT_PDU_UEContextReleaseRequest * objPDUUEContextReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextReleaseRequest( SI_S1AP_DT_PDU_UEContextReleaseRequest * objPDUUEContextReleaseRequest);

int __si_s1ap_memfree_pdu_UEContextReleaseRequest( SI_S1AP_DT_PDU_UEContextReleaseRequest * objPDUUEContextReleaseRequest);



// ELEMENTARY-PROCEDURE = [0] paging  L:8677
// ProcedureCode = 10
// ProcedureCodeName = id-Paging
// Criticality = ignore

int __si_s1ap_encode_pdu_Paging( SI_S1AP_DT_PDU_Paging * objPDUPaging, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_Paging( SI_S1AP_DT_PDU_Paging * objPDUPaging, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_Paging( SI_S1AP_DT_PDU_Paging * objPDUPaging);

int __si_s1ap_memfree_pdu_Paging( SI_S1AP_DT_PDU_Paging * objPDUPaging);



// ELEMENTARY-PROCEDURE = [0] downlinkNASTransport  L:8677
// ProcedureCode = 11
// ProcedureCodeName = id-downlinkNASTransport
// Criticality = ignore

int __si_s1ap_encode_pdu_DownlinkNASTransport( SI_S1AP_DT_PDU_DownlinkNASTransport * objPDUDownlinkNASTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_DownlinkNASTransport( SI_S1AP_DT_PDU_DownlinkNASTransport * objPDUDownlinkNASTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_DownlinkNASTransport( SI_S1AP_DT_PDU_DownlinkNASTransport * objPDUDownlinkNASTransport);

int __si_s1ap_memfree_pdu_DownlinkNASTransport( SI_S1AP_DT_PDU_DownlinkNASTransport * objPDUDownlinkNASTransport);



// ELEMENTARY-PROCEDURE = [0] initialUEMessage  L:8677
// ProcedureCode = 12
// ProcedureCodeName = id-initialUEMessage
// Criticality = ignore

int __si_s1ap_encode_pdu_InitialUEMessage( SI_S1AP_DT_PDU_InitialUEMessage * objPDUInitialUEMessage, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_InitialUEMessage( SI_S1AP_DT_PDU_InitialUEMessage * objPDUInitialUEMessage, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_InitialUEMessage( SI_S1AP_DT_PDU_InitialUEMessage * objPDUInitialUEMessage);

int __si_s1ap_memfree_pdu_InitialUEMessage( SI_S1AP_DT_PDU_InitialUEMessage * objPDUInitialUEMessage);



// ELEMENTARY-PROCEDURE = [0] uplinkNASTransport  L:8677
// ProcedureCode = 13
// ProcedureCodeName = id-uplinkNASTransport
// Criticality = ignore

int __si_s1ap_encode_pdu_UplinkNASTransport( SI_S1AP_DT_PDU_UplinkNASTransport * objPDUUplinkNASTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UplinkNASTransport( SI_S1AP_DT_PDU_UplinkNASTransport * objPDUUplinkNASTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UplinkNASTransport( SI_S1AP_DT_PDU_UplinkNASTransport * objPDUUplinkNASTransport);

int __si_s1ap_memfree_pdu_UplinkNASTransport( SI_S1AP_DT_PDU_UplinkNASTransport * objPDUUplinkNASTransport);



// ELEMENTARY-PROCEDURE = [0] nASNonDeliveryIndication  L:8677
// ProcedureCode = 16
// ProcedureCodeName = id-NASNonDeliveryIndication
// Criticality = ignore

int __si_s1ap_encode_pdu_NASNonDeliveryIndication( SI_S1AP_DT_PDU_NASNonDeliveryIndication * objPDUNASNonDeliveryIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_NASNonDeliveryIndication( SI_S1AP_DT_PDU_NASNonDeliveryIndication * objPDUNASNonDeliveryIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_NASNonDeliveryIndication( SI_S1AP_DT_PDU_NASNonDeliveryIndication * objPDUNASNonDeliveryIndication);

int __si_s1ap_memfree_pdu_NASNonDeliveryIndication( SI_S1AP_DT_PDU_NASNonDeliveryIndication * objPDUNASNonDeliveryIndication);



// ELEMENTARY-PROCEDURE = [0] handoverCancel  L:8677
// ProcedureCode = 4
// ProcedureCodeName = id-HandoverCancel
// Criticality = reject

int __si_s1ap_encode_pdu_HandoverCancel( SI_S1AP_DT_PDU_HandoverCancel * objPDUHandoverCancel, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverCancel( SI_S1AP_DT_PDU_HandoverCancel * objPDUHandoverCancel, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverCancel( SI_S1AP_DT_PDU_HandoverCancel * objPDUHandoverCancel);

int __si_s1ap_memfree_pdu_HandoverCancel( SI_S1AP_DT_PDU_HandoverCancel * objPDUHandoverCancel);



// ELEMENTARY-PROCEDURE = [0] handoverCancel  L:8677
// ProcedureCode = 4
// ProcedureCodeName = id-HandoverCancel
// Criticality = reject

int __si_s1ap_encode_pdu_HandoverCancelAcknowledge( SI_S1AP_DT_PDU_HandoverCancelAcknowledge * objPDUHandoverCancelAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverCancelAcknowledge( SI_S1AP_DT_PDU_HandoverCancelAcknowledge * objPDUHandoverCancelAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverCancelAcknowledge( SI_S1AP_DT_PDU_HandoverCancelAcknowledge * objPDUHandoverCancelAcknowledge);

int __si_s1ap_memfree_pdu_HandoverCancelAcknowledge( SI_S1AP_DT_PDU_HandoverCancelAcknowledge * objPDUHandoverCancelAcknowledge);



// ELEMENTARY-PROCEDURE = [0] reset  L:8677
// ProcedureCode = 14
// ProcedureCodeName = id-Reset
// Criticality = reject

int __si_s1ap_encode_pdu_Reset( SI_S1AP_DT_PDU_Reset * objPDUReset, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_Reset( SI_S1AP_DT_PDU_Reset * objPDUReset, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_Reset( SI_S1AP_DT_PDU_Reset * objPDUReset);

int __si_s1ap_memfree_pdu_Reset( SI_S1AP_DT_PDU_Reset * objPDUReset);



// ELEMENTARY-PROCEDURE = [0] reset  L:8677
// ProcedureCode = 14
// ProcedureCodeName = id-Reset
// Criticality = reject

int __si_s1ap_encode_pdu_ResetAcknowledge( SI_S1AP_DT_PDU_ResetAcknowledge * objPDUResetAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ResetAcknowledge( SI_S1AP_DT_PDU_ResetAcknowledge * objPDUResetAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ResetAcknowledge( SI_S1AP_DT_PDU_ResetAcknowledge * objPDUResetAcknowledge);

int __si_s1ap_memfree_pdu_ResetAcknowledge( SI_S1AP_DT_PDU_ResetAcknowledge * objPDUResetAcknowledge);



// ELEMENTARY-PROCEDURE = [0] errorIndication  L:8677
// ProcedureCode = 15
// ProcedureCodeName = id-ErrorIndication
// Criticality = ignore

int __si_s1ap_encode_pdu_ErrorIndication( SI_S1AP_DT_PDU_ErrorIndication * objPDUErrorIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ErrorIndication( SI_S1AP_DT_PDU_ErrorIndication * objPDUErrorIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ErrorIndication( SI_S1AP_DT_PDU_ErrorIndication * objPDUErrorIndication);

int __si_s1ap_memfree_pdu_ErrorIndication( SI_S1AP_DT_PDU_ErrorIndication * objPDUErrorIndication);



// ELEMENTARY-PROCEDURE = [0] s1Setup  L:8677
// ProcedureCode = 17
// ProcedureCodeName = id-S1Setup
// Criticality = reject

int __si_s1ap_encode_pdu_S1SetupRequest( SI_S1AP_DT_PDU_S1SetupRequest * objPDUS1SetupRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_S1SetupRequest( SI_S1AP_DT_PDU_S1SetupRequest * objPDUS1SetupRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_S1SetupRequest( SI_S1AP_DT_PDU_S1SetupRequest * objPDUS1SetupRequest);

int __si_s1ap_memfree_pdu_S1SetupRequest( SI_S1AP_DT_PDU_S1SetupRequest * objPDUS1SetupRequest);



// ELEMENTARY-PROCEDURE = [0] s1Setup  L:8677
// ProcedureCode = 17
// ProcedureCodeName = id-S1Setup
// Criticality = reject

int __si_s1ap_encode_pdu_S1SetupResponse( SI_S1AP_DT_PDU_S1SetupResponse * objPDUS1SetupResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_S1SetupResponse( SI_S1AP_DT_PDU_S1SetupResponse * objPDUS1SetupResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_S1SetupResponse( SI_S1AP_DT_PDU_S1SetupResponse * objPDUS1SetupResponse);

int __si_s1ap_memfree_pdu_S1SetupResponse( SI_S1AP_DT_PDU_S1SetupResponse * objPDUS1SetupResponse);



// ELEMENTARY-PROCEDURE = [0] s1Setup  L:8677
// ProcedureCode = 17
// ProcedureCodeName = id-S1Setup
// Criticality = reject

int __si_s1ap_encode_pdu_S1SetupFailure( SI_S1AP_DT_PDU_S1SetupFailure * objPDUS1SetupFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_S1SetupFailure( SI_S1AP_DT_PDU_S1SetupFailure * objPDUS1SetupFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_S1SetupFailure( SI_S1AP_DT_PDU_S1SetupFailure * objPDUS1SetupFailure);

int __si_s1ap_memfree_pdu_S1SetupFailure( SI_S1AP_DT_PDU_S1SetupFailure * objPDUS1SetupFailure);



// ELEMENTARY-PROCEDURE = [0] eNBConfigurationUpdate  L:8677
// ProcedureCode = 29
// ProcedureCodeName = id-ENBConfigurationUpdate
// Criticality = reject

int __si_s1ap_encode_pdu_ENBConfigurationUpdate( SI_S1AP_DT_PDU_ENBConfigurationUpdate * objPDUENBConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ENBConfigurationUpdate( SI_S1AP_DT_PDU_ENBConfigurationUpdate * objPDUENBConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ENBConfigurationUpdate( SI_S1AP_DT_PDU_ENBConfigurationUpdate * objPDUENBConfigurationUpdate);

int __si_s1ap_memfree_pdu_ENBConfigurationUpdate( SI_S1AP_DT_PDU_ENBConfigurationUpdate * objPDUENBConfigurationUpdate);



// ELEMENTARY-PROCEDURE = [0] eNBConfigurationUpdate  L:8677
// ProcedureCode = 29
// ProcedureCodeName = id-ENBConfigurationUpdate
// Criticality = reject

int __si_s1ap_encode_pdu_ENBConfigurationUpdateAcknowledge( SI_S1AP_DT_PDU_ENBConfigurationUpdateAcknowledge * objPDUENBConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ENBConfigurationUpdateAcknowledge( SI_S1AP_DT_PDU_ENBConfigurationUpdateAcknowledge * objPDUENBConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ENBConfigurationUpdateAcknowledge( SI_S1AP_DT_PDU_ENBConfigurationUpdateAcknowledge * objPDUENBConfigurationUpdateAcknowledge);

int __si_s1ap_memfree_pdu_ENBConfigurationUpdateAcknowledge( SI_S1AP_DT_PDU_ENBConfigurationUpdateAcknowledge * objPDUENBConfigurationUpdateAcknowledge);



// ELEMENTARY-PROCEDURE = [0] eNBConfigurationUpdate  L:8677
// ProcedureCode = 29
// ProcedureCodeName = id-ENBConfigurationUpdate
// Criticality = reject

int __si_s1ap_encode_pdu_ENBConfigurationUpdateFailure( SI_S1AP_DT_PDU_ENBConfigurationUpdateFailure * objPDUENBConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ENBConfigurationUpdateFailure( SI_S1AP_DT_PDU_ENBConfigurationUpdateFailure * objPDUENBConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ENBConfigurationUpdateFailure( SI_S1AP_DT_PDU_ENBConfigurationUpdateFailure * objPDUENBConfigurationUpdateFailure);

int __si_s1ap_memfree_pdu_ENBConfigurationUpdateFailure( SI_S1AP_DT_PDU_ENBConfigurationUpdateFailure * objPDUENBConfigurationUpdateFailure);



// ELEMENTARY-PROCEDURE = [0] mMEConfigurationUpdate  L:8677
// ProcedureCode = 30
// ProcedureCodeName = id-MMEConfigurationUpdate
// Criticality = reject

int __si_s1ap_encode_pdu_MMEConfigurationUpdate( SI_S1AP_DT_PDU_MMEConfigurationUpdate * objPDUMMEConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_MMEConfigurationUpdate( SI_S1AP_DT_PDU_MMEConfigurationUpdate * objPDUMMEConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_MMEConfigurationUpdate( SI_S1AP_DT_PDU_MMEConfigurationUpdate * objPDUMMEConfigurationUpdate);

int __si_s1ap_memfree_pdu_MMEConfigurationUpdate( SI_S1AP_DT_PDU_MMEConfigurationUpdate * objPDUMMEConfigurationUpdate);



// ELEMENTARY-PROCEDURE = [0] mMEConfigurationUpdate  L:8677
// ProcedureCode = 30
// ProcedureCodeName = id-MMEConfigurationUpdate
// Criticality = reject

int __si_s1ap_encode_pdu_MMEConfigurationUpdateAcknowledge( SI_S1AP_DT_PDU_MMEConfigurationUpdateAcknowledge * objPDUMMEConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_MMEConfigurationUpdateAcknowledge( SI_S1AP_DT_PDU_MMEConfigurationUpdateAcknowledge * objPDUMMEConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_MMEConfigurationUpdateAcknowledge( SI_S1AP_DT_PDU_MMEConfigurationUpdateAcknowledge * objPDUMMEConfigurationUpdateAcknowledge);

int __si_s1ap_memfree_pdu_MMEConfigurationUpdateAcknowledge( SI_S1AP_DT_PDU_MMEConfigurationUpdateAcknowledge * objPDUMMEConfigurationUpdateAcknowledge);



// ELEMENTARY-PROCEDURE = [0] mMEConfigurationUpdate  L:8677
// ProcedureCode = 30
// ProcedureCodeName = id-MMEConfigurationUpdate
// Criticality = reject

int __si_s1ap_encode_pdu_MMEConfigurationUpdateFailure( SI_S1AP_DT_PDU_MMEConfigurationUpdateFailure * objPDUMMEConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_MMEConfigurationUpdateFailure( SI_S1AP_DT_PDU_MMEConfigurationUpdateFailure * objPDUMMEConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_MMEConfigurationUpdateFailure( SI_S1AP_DT_PDU_MMEConfigurationUpdateFailure * objPDUMMEConfigurationUpdateFailure);

int __si_s1ap_memfree_pdu_MMEConfigurationUpdateFailure( SI_S1AP_DT_PDU_MMEConfigurationUpdateFailure * objPDUMMEConfigurationUpdateFailure);



// ELEMENTARY-PROCEDURE = [0] downlinkS1cdma2000tunnelling  L:8677
// ProcedureCode = 19
// ProcedureCodeName = id-DownlinkS1cdma2000tunnelling
// Criticality = ignore

int __si_s1ap_encode_pdu_DownlinkS1cdma2000tunnelling( SI_S1AP_DT_PDU_DownlinkS1cdma2000tunnelling * objPDUDownlinkS1cdma2000tunnelling, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_DownlinkS1cdma2000tunnelling( SI_S1AP_DT_PDU_DownlinkS1cdma2000tunnelling * objPDUDownlinkS1cdma2000tunnelling, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_DownlinkS1cdma2000tunnelling( SI_S1AP_DT_PDU_DownlinkS1cdma2000tunnelling * objPDUDownlinkS1cdma2000tunnelling);

int __si_s1ap_memfree_pdu_DownlinkS1cdma2000tunnelling( SI_S1AP_DT_PDU_DownlinkS1cdma2000tunnelling * objPDUDownlinkS1cdma2000tunnelling);



// ELEMENTARY-PROCEDURE = [0] uplinkS1cdma2000tunnelling  L:8677
// ProcedureCode = 20
// ProcedureCodeName = id-UplinkS1cdma2000tunnelling
// Criticality = ignore

int __si_s1ap_encode_pdu_UplinkS1cdma2000tunnelling( SI_S1AP_DT_PDU_UplinkS1cdma2000tunnelling * objPDUUplinkS1cdma2000tunnelling, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UplinkS1cdma2000tunnelling( SI_S1AP_DT_PDU_UplinkS1cdma2000tunnelling * objPDUUplinkS1cdma2000tunnelling, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UplinkS1cdma2000tunnelling( SI_S1AP_DT_PDU_UplinkS1cdma2000tunnelling * objPDUUplinkS1cdma2000tunnelling);

int __si_s1ap_memfree_pdu_UplinkS1cdma2000tunnelling( SI_S1AP_DT_PDU_UplinkS1cdma2000tunnelling * objPDUUplinkS1cdma2000tunnelling);



// ELEMENTARY-PROCEDURE = [0] uEContextModification  L:8677
// ProcedureCode = 21
// ProcedureCodeName = id-UEContextModification
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextModificationRequest( SI_S1AP_DT_PDU_UEContextModificationRequest * objPDUUEContextModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextModificationRequest( SI_S1AP_DT_PDU_UEContextModificationRequest * objPDUUEContextModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextModificationRequest( SI_S1AP_DT_PDU_UEContextModificationRequest * objPDUUEContextModificationRequest);

int __si_s1ap_memfree_pdu_UEContextModificationRequest( SI_S1AP_DT_PDU_UEContextModificationRequest * objPDUUEContextModificationRequest);



// ELEMENTARY-PROCEDURE = [0] uEContextModification  L:8677
// ProcedureCode = 21
// ProcedureCodeName = id-UEContextModification
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextModificationResponse( SI_S1AP_DT_PDU_UEContextModificationResponse * objPDUUEContextModificationResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextModificationResponse( SI_S1AP_DT_PDU_UEContextModificationResponse * objPDUUEContextModificationResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextModificationResponse( SI_S1AP_DT_PDU_UEContextModificationResponse * objPDUUEContextModificationResponse);

int __si_s1ap_memfree_pdu_UEContextModificationResponse( SI_S1AP_DT_PDU_UEContextModificationResponse * objPDUUEContextModificationResponse);



// ELEMENTARY-PROCEDURE = [0] uEContextModification  L:8677
// ProcedureCode = 21
// ProcedureCodeName = id-UEContextModification
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextModificationFailure( SI_S1AP_DT_PDU_UEContextModificationFailure * objPDUUEContextModificationFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextModificationFailure( SI_S1AP_DT_PDU_UEContextModificationFailure * objPDUUEContextModificationFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextModificationFailure( SI_S1AP_DT_PDU_UEContextModificationFailure * objPDUUEContextModificationFailure);

int __si_s1ap_memfree_pdu_UEContextModificationFailure( SI_S1AP_DT_PDU_UEContextModificationFailure * objPDUUEContextModificationFailure);



// ELEMENTARY-PROCEDURE = [0] uECapabilityInfoIndication  L:8677
// ProcedureCode = 22
// ProcedureCodeName = id-UECapabilityInfoIndication
// Criticality = ignore

int __si_s1ap_encode_pdu_UECapabilityInfoIndication( SI_S1AP_DT_PDU_UECapabilityInfoIndication * objPDUUECapabilityInfoIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UECapabilityInfoIndication( SI_S1AP_DT_PDU_UECapabilityInfoIndication * objPDUUECapabilityInfoIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UECapabilityInfoIndication( SI_S1AP_DT_PDU_UECapabilityInfoIndication * objPDUUECapabilityInfoIndication);

int __si_s1ap_memfree_pdu_UECapabilityInfoIndication( SI_S1AP_DT_PDU_UECapabilityInfoIndication * objPDUUECapabilityInfoIndication);



// ELEMENTARY-PROCEDURE = [0] uEContextRelease  L:8677
// ProcedureCode = 23
// ProcedureCodeName = id-UEContextRelease
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextReleaseCommand( SI_S1AP_DT_PDU_UEContextReleaseCommand * objPDUUEContextReleaseCommand, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextReleaseCommand( SI_S1AP_DT_PDU_UEContextReleaseCommand * objPDUUEContextReleaseCommand, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextReleaseCommand( SI_S1AP_DT_PDU_UEContextReleaseCommand * objPDUUEContextReleaseCommand);

int __si_s1ap_memfree_pdu_UEContextReleaseCommand( SI_S1AP_DT_PDU_UEContextReleaseCommand * objPDUUEContextReleaseCommand);



// ELEMENTARY-PROCEDURE = [0] uEContextRelease  L:8677
// ProcedureCode = 23
// ProcedureCodeName = id-UEContextRelease
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextReleaseComplete( SI_S1AP_DT_PDU_UEContextReleaseComplete * objPDUUEContextReleaseComplete, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextReleaseComplete( SI_S1AP_DT_PDU_UEContextReleaseComplete * objPDUUEContextReleaseComplete, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextReleaseComplete( SI_S1AP_DT_PDU_UEContextReleaseComplete * objPDUUEContextReleaseComplete);

int __si_s1ap_memfree_pdu_UEContextReleaseComplete( SI_S1AP_DT_PDU_UEContextReleaseComplete * objPDUUEContextReleaseComplete);



// ELEMENTARY-PROCEDURE = [0] eNBStatusTransfer  L:8677
// ProcedureCode = 24
// ProcedureCodeName = id-eNBStatusTransfer
// Criticality = ignore

int __si_s1ap_encode_pdu_ENBStatusTransfer( SI_S1AP_DT_PDU_ENBStatusTransfer * objPDUENBStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ENBStatusTransfer( SI_S1AP_DT_PDU_ENBStatusTransfer * objPDUENBStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ENBStatusTransfer( SI_S1AP_DT_PDU_ENBStatusTransfer * objPDUENBStatusTransfer);

int __si_s1ap_memfree_pdu_ENBStatusTransfer( SI_S1AP_DT_PDU_ENBStatusTransfer * objPDUENBStatusTransfer);



// ELEMENTARY-PROCEDURE = [0] mMEStatusTransfer  L:8677
// ProcedureCode = 25
// ProcedureCodeName = id-MMEStatusTransfer
// Criticality = ignore

int __si_s1ap_encode_pdu_MMEStatusTransfer( SI_S1AP_DT_PDU_MMEStatusTransfer * objPDUMMEStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_MMEStatusTransfer( SI_S1AP_DT_PDU_MMEStatusTransfer * objPDUMMEStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_MMEStatusTransfer( SI_S1AP_DT_PDU_MMEStatusTransfer * objPDUMMEStatusTransfer);

int __si_s1ap_memfree_pdu_MMEStatusTransfer( SI_S1AP_DT_PDU_MMEStatusTransfer * objPDUMMEStatusTransfer);



// ELEMENTARY-PROCEDURE = [0] deactivateTrace  L:8677
// ProcedureCode = 26
// ProcedureCodeName = id-DeactivateTrace
// Criticality = ignore

int __si_s1ap_encode_pdu_DeactivateTrace( SI_S1AP_DT_PDU_DeactivateTrace * objPDUDeactivateTrace, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_DeactivateTrace( SI_S1AP_DT_PDU_DeactivateTrace * objPDUDeactivateTrace, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_DeactivateTrace( SI_S1AP_DT_PDU_DeactivateTrace * objPDUDeactivateTrace);

int __si_s1ap_memfree_pdu_DeactivateTrace( SI_S1AP_DT_PDU_DeactivateTrace * objPDUDeactivateTrace);



// ELEMENTARY-PROCEDURE = [0] traceStart  L:8677
// ProcedureCode = 27
// ProcedureCodeName = id-TraceStart
// Criticality = ignore

int __si_s1ap_encode_pdu_TraceStart( SI_S1AP_DT_PDU_TraceStart * objPDUTraceStart, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_TraceStart( SI_S1AP_DT_PDU_TraceStart * objPDUTraceStart, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_TraceStart( SI_S1AP_DT_PDU_TraceStart * objPDUTraceStart);

int __si_s1ap_memfree_pdu_TraceStart( SI_S1AP_DT_PDU_TraceStart * objPDUTraceStart);



// ELEMENTARY-PROCEDURE = [0] traceFailureIndication  L:8677
// ProcedureCode = 28
// ProcedureCodeName = id-TraceFailureIndication
// Criticality = ignore

int __si_s1ap_encode_pdu_TraceFailureIndication( SI_S1AP_DT_PDU_TraceFailureIndication * objPDUTraceFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_TraceFailureIndication( SI_S1AP_DT_PDU_TraceFailureIndication * objPDUTraceFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_TraceFailureIndication( SI_S1AP_DT_PDU_TraceFailureIndication * objPDUTraceFailureIndication);

int __si_s1ap_memfree_pdu_TraceFailureIndication( SI_S1AP_DT_PDU_TraceFailureIndication * objPDUTraceFailureIndication);



// ELEMENTARY-PROCEDURE = [0] cellTrafficTrace  L:8677
// ProcedureCode = 42
// ProcedureCodeName = id-CellTrafficTrace
// Criticality = ignore

int __si_s1ap_encode_pdu_CellTrafficTrace( SI_S1AP_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_CellTrafficTrace( SI_S1AP_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_CellTrafficTrace( SI_S1AP_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace);

int __si_s1ap_memfree_pdu_CellTrafficTrace( SI_S1AP_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace);



// ELEMENTARY-PROCEDURE = [0] locationReportingControl  L:8677
// ProcedureCode = 31
// ProcedureCodeName = id-LocationReportingControl
// Criticality = ignore

int __si_s1ap_encode_pdu_LocationReportingControl( SI_S1AP_DT_PDU_LocationReportingControl * objPDULocationReportingControl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_LocationReportingControl( SI_S1AP_DT_PDU_LocationReportingControl * objPDULocationReportingControl, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_LocationReportingControl( SI_S1AP_DT_PDU_LocationReportingControl * objPDULocationReportingControl);

int __si_s1ap_memfree_pdu_LocationReportingControl( SI_S1AP_DT_PDU_LocationReportingControl * objPDULocationReportingControl);



// ELEMENTARY-PROCEDURE = [0] locationReportingFailureIndication  L:8677
// ProcedureCode = 32
// ProcedureCodeName = id-LocationReportingFailureIndication
// Criticality = ignore

int __si_s1ap_encode_pdu_LocationReportingFailureIndication( SI_S1AP_DT_PDU_LocationReportingFailureIndication * objPDULocationReportingFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_LocationReportingFailureIndication( SI_S1AP_DT_PDU_LocationReportingFailureIndication * objPDULocationReportingFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_LocationReportingFailureIndication( SI_S1AP_DT_PDU_LocationReportingFailureIndication * objPDULocationReportingFailureIndication);

int __si_s1ap_memfree_pdu_LocationReportingFailureIndication( SI_S1AP_DT_PDU_LocationReportingFailureIndication * objPDULocationReportingFailureIndication);



// ELEMENTARY-PROCEDURE = [0] locationReport  L:8677
// ProcedureCode = 33
// ProcedureCodeName = id-LocationReport
// Criticality = ignore

int __si_s1ap_encode_pdu_LocationReport( SI_S1AP_DT_PDU_LocationReport * objPDULocationReport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_LocationReport( SI_S1AP_DT_PDU_LocationReport * objPDULocationReport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_LocationReport( SI_S1AP_DT_PDU_LocationReport * objPDULocationReport);

int __si_s1ap_memfree_pdu_LocationReport( SI_S1AP_DT_PDU_LocationReport * objPDULocationReport);



// ELEMENTARY-PROCEDURE = [0] overloadStart  L:8677
// ProcedureCode = 34
// ProcedureCodeName = id-OverloadStart
// Criticality = ignore

int __si_s1ap_encode_pdu_OverloadStart( SI_S1AP_DT_PDU_OverloadStart * objPDUOverloadStart, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_OverloadStart( SI_S1AP_DT_PDU_OverloadStart * objPDUOverloadStart, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_OverloadStart( SI_S1AP_DT_PDU_OverloadStart * objPDUOverloadStart);

int __si_s1ap_memfree_pdu_OverloadStart( SI_S1AP_DT_PDU_OverloadStart * objPDUOverloadStart);



// ELEMENTARY-PROCEDURE = [0] overloadStop  L:8677
// ProcedureCode = 35
// ProcedureCodeName = id-OverloadStop
// Criticality = reject

int __si_s1ap_encode_pdu_OverloadStop( SI_S1AP_DT_PDU_OverloadStop * objPDUOverloadStop, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_OverloadStop( SI_S1AP_DT_PDU_OverloadStop * objPDUOverloadStop, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_OverloadStop( SI_S1AP_DT_PDU_OverloadStop * objPDUOverloadStop);

int __si_s1ap_memfree_pdu_OverloadStop( SI_S1AP_DT_PDU_OverloadStop * objPDUOverloadStop);



// ELEMENTARY-PROCEDURE = [0] writeReplaceWarning  L:8677
// ProcedureCode = 36
// ProcedureCodeName = id-WriteReplaceWarning
// Criticality = reject

int __si_s1ap_encode_pdu_WriteReplaceWarningRequest( SI_S1AP_DT_PDU_WriteReplaceWarningRequest * objPDUWriteReplaceWarningRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_WriteReplaceWarningRequest( SI_S1AP_DT_PDU_WriteReplaceWarningRequest * objPDUWriteReplaceWarningRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_WriteReplaceWarningRequest( SI_S1AP_DT_PDU_WriteReplaceWarningRequest * objPDUWriteReplaceWarningRequest);

int __si_s1ap_memfree_pdu_WriteReplaceWarningRequest( SI_S1AP_DT_PDU_WriteReplaceWarningRequest * objPDUWriteReplaceWarningRequest);



// ELEMENTARY-PROCEDURE = [0] writeReplaceWarning  L:8677
// ProcedureCode = 36
// ProcedureCodeName = id-WriteReplaceWarning
// Criticality = reject

int __si_s1ap_encode_pdu_WriteReplaceWarningResponse( SI_S1AP_DT_PDU_WriteReplaceWarningResponse * objPDUWriteReplaceWarningResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_WriteReplaceWarningResponse( SI_S1AP_DT_PDU_WriteReplaceWarningResponse * objPDUWriteReplaceWarningResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_WriteReplaceWarningResponse( SI_S1AP_DT_PDU_WriteReplaceWarningResponse * objPDUWriteReplaceWarningResponse);

int __si_s1ap_memfree_pdu_WriteReplaceWarningResponse( SI_S1AP_DT_PDU_WriteReplaceWarningResponse * objPDUWriteReplaceWarningResponse);



// ELEMENTARY-PROCEDURE = [0] eNBDirectInformationTransfer  L:8677
// ProcedureCode = 37
// ProcedureCodeName = id-eNBDirectInformationTransfer
// Criticality = ignore

int __si_s1ap_encode_pdu_ENBDirectInformationTransfer( SI_S1AP_DT_PDU_ENBDirectInformationTransfer * objPDUENBDirectInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ENBDirectInformationTransfer( SI_S1AP_DT_PDU_ENBDirectInformationTransfer * objPDUENBDirectInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ENBDirectInformationTransfer( SI_S1AP_DT_PDU_ENBDirectInformationTransfer * objPDUENBDirectInformationTransfer);

int __si_s1ap_memfree_pdu_ENBDirectInformationTransfer( SI_S1AP_DT_PDU_ENBDirectInformationTransfer * objPDUENBDirectInformationTransfer);



// ELEMENTARY-PROCEDURE = [0] mMEDirectInformationTransfer  L:8677
// ProcedureCode = 38
// ProcedureCodeName = id-MMEDirectInformationTransfer
// Criticality = ignore

int __si_s1ap_encode_pdu_MMEDirectInformationTransfer( SI_S1AP_DT_PDU_MMEDirectInformationTransfer * objPDUMMEDirectInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_MMEDirectInformationTransfer( SI_S1AP_DT_PDU_MMEDirectInformationTransfer * objPDUMMEDirectInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_MMEDirectInformationTransfer( SI_S1AP_DT_PDU_MMEDirectInformationTransfer * objPDUMMEDirectInformationTransfer);

int __si_s1ap_memfree_pdu_MMEDirectInformationTransfer( SI_S1AP_DT_PDU_MMEDirectInformationTransfer * objPDUMMEDirectInformationTransfer);



// ELEMENTARY-PROCEDURE = [0] eNBConfigurationTransfer  L:8677
// ProcedureCode = 40
// ProcedureCodeName = id-eNBConfigurationTransfer
// Criticality = ignore

int __si_s1ap_encode_pdu_ENBConfigurationTransfer( SI_S1AP_DT_PDU_ENBConfigurationTransfer * objPDUENBConfigurationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ENBConfigurationTransfer( SI_S1AP_DT_PDU_ENBConfigurationTransfer * objPDUENBConfigurationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ENBConfigurationTransfer( SI_S1AP_DT_PDU_ENBConfigurationTransfer * objPDUENBConfigurationTransfer);

int __si_s1ap_memfree_pdu_ENBConfigurationTransfer( SI_S1AP_DT_PDU_ENBConfigurationTransfer * objPDUENBConfigurationTransfer);



// ELEMENTARY-PROCEDURE = [0] mMEConfigurationTransfer  L:8677
// ProcedureCode = 41
// ProcedureCodeName = id-MMEConfigurationTransfer
// Criticality = ignore

int __si_s1ap_encode_pdu_MMEConfigurationTransfer( SI_S1AP_DT_PDU_MMEConfigurationTransfer * objPDUMMEConfigurationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_MMEConfigurationTransfer( SI_S1AP_DT_PDU_MMEConfigurationTransfer * objPDUMMEConfigurationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_MMEConfigurationTransfer( SI_S1AP_DT_PDU_MMEConfigurationTransfer * objPDUMMEConfigurationTransfer);

int __si_s1ap_memfree_pdu_MMEConfigurationTransfer( SI_S1AP_DT_PDU_MMEConfigurationTransfer * objPDUMMEConfigurationTransfer);



// ELEMENTARY-PROCEDURE = [0] privateMessage  L:8677
// ProcedureCode = 39
// ProcedureCodeName = id-PrivateMessage
// Criticality = ignore

int __si_s1ap_encode_pdu_PrivateMessage( SI_S1AP_DT_PDU_PrivateMessage * objPDUPrivateMessage, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_PrivateMessage( SI_S1AP_DT_PDU_PrivateMessage * objPDUPrivateMessage, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_PrivateMessage( SI_S1AP_DT_PDU_PrivateMessage * objPDUPrivateMessage);

int __si_s1ap_memfree_pdu_PrivateMessage( SI_S1AP_DT_PDU_PrivateMessage * objPDUPrivateMessage);



// ELEMENTARY-PROCEDURE = [0] pWSRestartIndication  L:8677
// ProcedureCode = 49
// ProcedureCodeName = id-PWSRestartIndication
// Criticality = ignore

int __si_s1ap_encode_pdu_PWSRestartIndication( SI_S1AP_DT_PDU_PWSRestartIndication * objPDUPWSRestartIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_PWSRestartIndication( SI_S1AP_DT_PDU_PWSRestartIndication * objPDUPWSRestartIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_PWSRestartIndication( SI_S1AP_DT_PDU_PWSRestartIndication * objPDUPWSRestartIndication);

int __si_s1ap_memfree_pdu_PWSRestartIndication( SI_S1AP_DT_PDU_PWSRestartIndication * objPDUPWSRestartIndication);



// ELEMENTARY-PROCEDURE = [0] kill  L:8677
// ProcedureCode = 43
// ProcedureCodeName = id-Kill
// Criticality = reject

int __si_s1ap_encode_pdu_KillRequest( SI_S1AP_DT_PDU_KillRequest * objPDUKillRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_KillRequest( SI_S1AP_DT_PDU_KillRequest * objPDUKillRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_KillRequest( SI_S1AP_DT_PDU_KillRequest * objPDUKillRequest);

int __si_s1ap_memfree_pdu_KillRequest( SI_S1AP_DT_PDU_KillRequest * objPDUKillRequest);



// ELEMENTARY-PROCEDURE = [0] kill  L:8677
// ProcedureCode = 43
// ProcedureCodeName = id-Kill
// Criticality = reject

int __si_s1ap_encode_pdu_KillResponse( SI_S1AP_DT_PDU_KillResponse * objPDUKillResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_KillResponse( SI_S1AP_DT_PDU_KillResponse * objPDUKillResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_KillResponse( SI_S1AP_DT_PDU_KillResponse * objPDUKillResponse);

int __si_s1ap_memfree_pdu_KillResponse( SI_S1AP_DT_PDU_KillResponse * objPDUKillResponse);



// ELEMENTARY-PROCEDURE = [0] downlinkUEAssociatedLPPaTransport  L:8677
// ProcedureCode = 44
// ProcedureCodeName = id-downlinkUEAssociatedLPPaTransport
// Criticality = ignore

int __si_s1ap_encode_pdu_DownlinkUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_DownlinkUEAssociatedLPPaTransport * objPDUDownlinkUEAssociatedLPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_DownlinkUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_DownlinkUEAssociatedLPPaTransport * objPDUDownlinkUEAssociatedLPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_DownlinkUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_DownlinkUEAssociatedLPPaTransport * objPDUDownlinkUEAssociatedLPPaTransport);

int __si_s1ap_memfree_pdu_DownlinkUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_DownlinkUEAssociatedLPPaTransport * objPDUDownlinkUEAssociatedLPPaTransport);



// ELEMENTARY-PROCEDURE = [0] uplinkUEAssociatedLPPaTransport  L:8677
// ProcedureCode = 45
// ProcedureCodeName = id-uplinkUEAssociatedLPPaTransport
// Criticality = ignore

int __si_s1ap_encode_pdu_UplinkUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_UplinkUEAssociatedLPPaTransport * objPDUUplinkUEAssociatedLPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UplinkUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_UplinkUEAssociatedLPPaTransport * objPDUUplinkUEAssociatedLPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UplinkUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_UplinkUEAssociatedLPPaTransport * objPDUUplinkUEAssociatedLPPaTransport);

int __si_s1ap_memfree_pdu_UplinkUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_UplinkUEAssociatedLPPaTransport * objPDUUplinkUEAssociatedLPPaTransport);



// ELEMENTARY-PROCEDURE = [0] downlinkNonUEAssociatedLPPaTransport  L:8677
// ProcedureCode = 46
// ProcedureCodeName = id-downlinkNonUEAssociatedLPPaTransport
// Criticality = ignore

int __si_s1ap_encode_pdu_DownlinkNonUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_DownlinkNonUEAssociatedLPPaTransport * objPDUDownlinkNonUEAssociatedLPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_DownlinkNonUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_DownlinkNonUEAssociatedLPPaTransport * objPDUDownlinkNonUEAssociatedLPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_DownlinkNonUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_DownlinkNonUEAssociatedLPPaTransport * objPDUDownlinkNonUEAssociatedLPPaTransport);

int __si_s1ap_memfree_pdu_DownlinkNonUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_DownlinkNonUEAssociatedLPPaTransport * objPDUDownlinkNonUEAssociatedLPPaTransport);



// ELEMENTARY-PROCEDURE = [0] uplinkNonUEAssociatedLPPaTransport  L:8677
// ProcedureCode = 47
// ProcedureCodeName = id-uplinkNonUEAssociatedLPPaTransport
// Criticality = ignore

int __si_s1ap_encode_pdu_UplinkNonUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_UplinkNonUEAssociatedLPPaTransport * objPDUUplinkNonUEAssociatedLPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UplinkNonUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_UplinkNonUEAssociatedLPPaTransport * objPDUUplinkNonUEAssociatedLPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UplinkNonUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_UplinkNonUEAssociatedLPPaTransport * objPDUUplinkNonUEAssociatedLPPaTransport);

int __si_s1ap_memfree_pdu_UplinkNonUEAssociatedLPPaTransport( SI_S1AP_DT_PDU_UplinkNonUEAssociatedLPPaTransport * objPDUUplinkNonUEAssociatedLPPaTransport);



// ELEMENTARY-PROCEDURE = [0] uERadioCapabilityMatch  L:8677
// ProcedureCode = 48
// ProcedureCodeName = id-UERadioCapabilityMatch
// Criticality = reject

int __si_s1ap_encode_pdu_UERadioCapabilityMatchRequest( SI_S1AP_DT_PDU_UERadioCapabilityMatchRequest * objPDUUERadioCapabilityMatchRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UERadioCapabilityMatchRequest( SI_S1AP_DT_PDU_UERadioCapabilityMatchRequest * objPDUUERadioCapabilityMatchRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UERadioCapabilityMatchRequest( SI_S1AP_DT_PDU_UERadioCapabilityMatchRequest * objPDUUERadioCapabilityMatchRequest);

int __si_s1ap_memfree_pdu_UERadioCapabilityMatchRequest( SI_S1AP_DT_PDU_UERadioCapabilityMatchRequest * objPDUUERadioCapabilityMatchRequest);



// ELEMENTARY-PROCEDURE = [0] uERadioCapabilityMatch  L:8677
// ProcedureCode = 48
// ProcedureCodeName = id-UERadioCapabilityMatch
// Criticality = reject

int __si_s1ap_encode_pdu_UERadioCapabilityMatchResponse( SI_S1AP_DT_PDU_UERadioCapabilityMatchResponse * objPDUUERadioCapabilityMatchResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UERadioCapabilityMatchResponse( SI_S1AP_DT_PDU_UERadioCapabilityMatchResponse * objPDUUERadioCapabilityMatchResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UERadioCapabilityMatchResponse( SI_S1AP_DT_PDU_UERadioCapabilityMatchResponse * objPDUUERadioCapabilityMatchResponse);

int __si_s1ap_memfree_pdu_UERadioCapabilityMatchResponse( SI_S1AP_DT_PDU_UERadioCapabilityMatchResponse * objPDUUERadioCapabilityMatchResponse);



// ELEMENTARY-PROCEDURE = [0] e-RABModificationIndication  L:8677
// ProcedureCode = 50
// ProcedureCodeName = id-E-RABModificationIndication
// Criticality = reject

int __si_s1ap_encode_pdu_E_RABModificationIndication( SI_S1AP_DT_PDU_E_RABModificationIndication * objPDUE_RABModificationIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_E_RABModificationIndication( SI_S1AP_DT_PDU_E_RABModificationIndication * objPDUE_RABModificationIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_E_RABModificationIndication( SI_S1AP_DT_PDU_E_RABModificationIndication * objPDUE_RABModificationIndication);

int __si_s1ap_memfree_pdu_E_RABModificationIndication( SI_S1AP_DT_PDU_E_RABModificationIndication * objPDUE_RABModificationIndication);



// ELEMENTARY-PROCEDURE = [0] e-RABModificationIndication  L:8677
// ProcedureCode = 50
// ProcedureCodeName = id-E-RABModificationIndication
// Criticality = reject

int __si_s1ap_encode_pdu_E_RABModificationConfirm( SI_S1AP_DT_PDU_E_RABModificationConfirm * objPDUE_RABModificationConfirm, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_E_RABModificationConfirm( SI_S1AP_DT_PDU_E_RABModificationConfirm * objPDUE_RABModificationConfirm, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_E_RABModificationConfirm( SI_S1AP_DT_PDU_E_RABModificationConfirm * objPDUE_RABModificationConfirm);

int __si_s1ap_memfree_pdu_E_RABModificationConfirm( SI_S1AP_DT_PDU_E_RABModificationConfirm * objPDUE_RABModificationConfirm);



// ELEMENTARY-PROCEDURE = [0] uEContextModificationIndication  L:8677
// ProcedureCode = 53
// ProcedureCodeName = id-UEContextModificationIndication
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextModificationIndication( SI_S1AP_DT_PDU_UEContextModificationIndication * objPDUUEContextModificationIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextModificationIndication( SI_S1AP_DT_PDU_UEContextModificationIndication * objPDUUEContextModificationIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextModificationIndication( SI_S1AP_DT_PDU_UEContextModificationIndication * objPDUUEContextModificationIndication);

int __si_s1ap_memfree_pdu_UEContextModificationIndication( SI_S1AP_DT_PDU_UEContextModificationIndication * objPDUUEContextModificationIndication);



// ELEMENTARY-PROCEDURE = [0] uEContextModificationIndication  L:8677
// ProcedureCode = 53
// ProcedureCodeName = id-UEContextModificationIndication
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextModificationConfirm( SI_S1AP_DT_PDU_UEContextModificationConfirm * objPDUUEContextModificationConfirm, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextModificationConfirm( SI_S1AP_DT_PDU_UEContextModificationConfirm * objPDUUEContextModificationConfirm, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextModificationConfirm( SI_S1AP_DT_PDU_UEContextModificationConfirm * objPDUUEContextModificationConfirm);

int __si_s1ap_memfree_pdu_UEContextModificationConfirm( SI_S1AP_DT_PDU_UEContextModificationConfirm * objPDUUEContextModificationConfirm);



// ELEMENTARY-PROCEDURE = [0] rerouteNASRequest  L:8677
// ProcedureCode = 52
// ProcedureCodeName = id-RerouteNASRequest
// Criticality = reject

int __si_s1ap_encode_pdu_RerouteNASRequest( SI_S1AP_DT_PDU_RerouteNASRequest * objPDURerouteNASRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_RerouteNASRequest( SI_S1AP_DT_PDU_RerouteNASRequest * objPDURerouteNASRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_RerouteNASRequest( SI_S1AP_DT_PDU_RerouteNASRequest * objPDURerouteNASRequest);

int __si_s1ap_memfree_pdu_RerouteNASRequest( SI_S1AP_DT_PDU_RerouteNASRequest * objPDURerouteNASRequest);



// ELEMENTARY-PROCEDURE = [0] pWSFailureIndication  L:8677
// ProcedureCode = 51
// ProcedureCodeName = id-PWSFailureIndication
// Criticality = ignore

int __si_s1ap_encode_pdu_PWSFailureIndication( SI_S1AP_DT_PDU_PWSFailureIndication * objPDUPWSFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_PWSFailureIndication( SI_S1AP_DT_PDU_PWSFailureIndication * objPDUPWSFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_PWSFailureIndication( SI_S1AP_DT_PDU_PWSFailureIndication * objPDUPWSFailureIndication);

int __si_s1ap_memfree_pdu_PWSFailureIndication( SI_S1AP_DT_PDU_PWSFailureIndication * objPDUPWSFailureIndication);



// ELEMENTARY-PROCEDURE = [0] uEContextSuspend  L:8677
// ProcedureCode = 55
// ProcedureCodeName = id-UEContextSuspend
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextSuspendRequest( SI_S1AP_DT_PDU_UEContextSuspendRequest * objPDUUEContextSuspendRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextSuspendRequest( SI_S1AP_DT_PDU_UEContextSuspendRequest * objPDUUEContextSuspendRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextSuspendRequest( SI_S1AP_DT_PDU_UEContextSuspendRequest * objPDUUEContextSuspendRequest);

int __si_s1ap_memfree_pdu_UEContextSuspendRequest( SI_S1AP_DT_PDU_UEContextSuspendRequest * objPDUUEContextSuspendRequest);



// ELEMENTARY-PROCEDURE = [0] uEContextSuspend  L:8677
// ProcedureCode = 55
// ProcedureCodeName = id-UEContextSuspend
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextSuspendResponse( SI_S1AP_DT_PDU_UEContextSuspendResponse * objPDUUEContextSuspendResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextSuspendResponse( SI_S1AP_DT_PDU_UEContextSuspendResponse * objPDUUEContextSuspendResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextSuspendResponse( SI_S1AP_DT_PDU_UEContextSuspendResponse * objPDUUEContextSuspendResponse);

int __si_s1ap_memfree_pdu_UEContextSuspendResponse( SI_S1AP_DT_PDU_UEContextSuspendResponse * objPDUUEContextSuspendResponse);



// ELEMENTARY-PROCEDURE = [0] uEContextResume  L:8677
// ProcedureCode = 56
// ProcedureCodeName = id-UEContextResume
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextResumeRequest( SI_S1AP_DT_PDU_UEContextResumeRequest * objPDUUEContextResumeRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextResumeRequest( SI_S1AP_DT_PDU_UEContextResumeRequest * objPDUUEContextResumeRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextResumeRequest( SI_S1AP_DT_PDU_UEContextResumeRequest * objPDUUEContextResumeRequest);

int __si_s1ap_memfree_pdu_UEContextResumeRequest( SI_S1AP_DT_PDU_UEContextResumeRequest * objPDUUEContextResumeRequest);



// ELEMENTARY-PROCEDURE = [0] uEContextResume  L:8677
// ProcedureCode = 56
// ProcedureCodeName = id-UEContextResume
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextResumeResponse( SI_S1AP_DT_PDU_UEContextResumeResponse * objPDUUEContextResumeResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextResumeResponse( SI_S1AP_DT_PDU_UEContextResumeResponse * objPDUUEContextResumeResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextResumeResponse( SI_S1AP_DT_PDU_UEContextResumeResponse * objPDUUEContextResumeResponse);

int __si_s1ap_memfree_pdu_UEContextResumeResponse( SI_S1AP_DT_PDU_UEContextResumeResponse * objPDUUEContextResumeResponse);



// ELEMENTARY-PROCEDURE = [0] uEContextResume  L:8677
// ProcedureCode = 56
// ProcedureCodeName = id-UEContextResume
// Criticality = reject

int __si_s1ap_encode_pdu_UEContextResumeFailure( SI_S1AP_DT_PDU_UEContextResumeFailure * objPDUUEContextResumeFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEContextResumeFailure( SI_S1AP_DT_PDU_UEContextResumeFailure * objPDUUEContextResumeFailure, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEContextResumeFailure( SI_S1AP_DT_PDU_UEContextResumeFailure * objPDUUEContextResumeFailure);

int __si_s1ap_memfree_pdu_UEContextResumeFailure( SI_S1AP_DT_PDU_UEContextResumeFailure * objPDUUEContextResumeFailure);



// ELEMENTARY-PROCEDURE = [0] connectionEstablishmentIndication  L:8677
// ProcedureCode = 54
// ProcedureCodeName = id-ConnectionEstablishmentIndication
// Criticality = reject

int __si_s1ap_encode_pdu_ConnectionEstablishmentIndication( SI_S1AP_DT_PDU_ConnectionEstablishmentIndication * objPDUConnectionEstablishmentIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ConnectionEstablishmentIndication( SI_S1AP_DT_PDU_ConnectionEstablishmentIndication * objPDUConnectionEstablishmentIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ConnectionEstablishmentIndication( SI_S1AP_DT_PDU_ConnectionEstablishmentIndication * objPDUConnectionEstablishmentIndication);

int __si_s1ap_memfree_pdu_ConnectionEstablishmentIndication( SI_S1AP_DT_PDU_ConnectionEstablishmentIndication * objPDUConnectionEstablishmentIndication);



// ELEMENTARY-PROCEDURE = [0] nASDeliveryIndication  L:8677
// ProcedureCode = 57
// ProcedureCodeName = id-NASDeliveryIndication
// Criticality = ignore

int __si_s1ap_encode_pdu_NASDeliveryIndication( SI_S1AP_DT_PDU_NASDeliveryIndication * objPDUNASDeliveryIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_NASDeliveryIndication( SI_S1AP_DT_PDU_NASDeliveryIndication * objPDUNASDeliveryIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_NASDeliveryIndication( SI_S1AP_DT_PDU_NASDeliveryIndication * objPDUNASDeliveryIndication);

int __si_s1ap_memfree_pdu_NASDeliveryIndication( SI_S1AP_DT_PDU_NASDeliveryIndication * objPDUNASDeliveryIndication);



// ELEMENTARY-PROCEDURE = [0] retrieveUEInformation  L:8677
// ProcedureCode = 58
// ProcedureCodeName = id-RetrieveUEInformation
// Criticality = reject

int __si_s1ap_encode_pdu_RetrieveUEInformation( SI_S1AP_DT_PDU_RetrieveUEInformation * objPDURetrieveUEInformation, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_RetrieveUEInformation( SI_S1AP_DT_PDU_RetrieveUEInformation * objPDURetrieveUEInformation, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_RetrieveUEInformation( SI_S1AP_DT_PDU_RetrieveUEInformation * objPDURetrieveUEInformation);

int __si_s1ap_memfree_pdu_RetrieveUEInformation( SI_S1AP_DT_PDU_RetrieveUEInformation * objPDURetrieveUEInformation);



// ELEMENTARY-PROCEDURE = [0] uEInformationTransfer  L:8677
// ProcedureCode = 59
// ProcedureCodeName = id-UEInformationTransfer
// Criticality = reject

int __si_s1ap_encode_pdu_UEInformationTransfer( SI_S1AP_DT_PDU_UEInformationTransfer * objPDUUEInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UEInformationTransfer( SI_S1AP_DT_PDU_UEInformationTransfer * objPDUUEInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UEInformationTransfer( SI_S1AP_DT_PDU_UEInformationTransfer * objPDUUEInformationTransfer);

int __si_s1ap_memfree_pdu_UEInformationTransfer( SI_S1AP_DT_PDU_UEInformationTransfer * objPDUUEInformationTransfer);



// ELEMENTARY-PROCEDURE = [0] eNBCPRelocationIndication  L:8677
// ProcedureCode = 60
// ProcedureCodeName = id-eNBCPRelocationIndication
// Criticality = reject

int __si_s1ap_encode_pdu_ENBCPRelocationIndication( SI_S1AP_DT_PDU_ENBCPRelocationIndication * objPDUENBCPRelocationIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ENBCPRelocationIndication( SI_S1AP_DT_PDU_ENBCPRelocationIndication * objPDUENBCPRelocationIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ENBCPRelocationIndication( SI_S1AP_DT_PDU_ENBCPRelocationIndication * objPDUENBCPRelocationIndication);

int __si_s1ap_memfree_pdu_ENBCPRelocationIndication( SI_S1AP_DT_PDU_ENBCPRelocationIndication * objPDUENBCPRelocationIndication);



// ELEMENTARY-PROCEDURE = [0] mMECPRelocationIndication  L:8677
// ProcedureCode = 61
// ProcedureCodeName = id-MMECPRelocationIndication
// Criticality = reject

int __si_s1ap_encode_pdu_MMECPRelocationIndication( SI_S1AP_DT_PDU_MMECPRelocationIndication * objPDUMMECPRelocationIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_MMECPRelocationIndication( SI_S1AP_DT_PDU_MMECPRelocationIndication * objPDUMMECPRelocationIndication, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_MMECPRelocationIndication( SI_S1AP_DT_PDU_MMECPRelocationIndication * objPDUMMECPRelocationIndication);

int __si_s1ap_memfree_pdu_MMECPRelocationIndication( SI_S1AP_DT_PDU_MMECPRelocationIndication * objPDUMMECPRelocationIndication);



// ELEMENTARY-PROCEDURE = [0] secondaryRATDataUsageReport  L:8677
// ProcedureCode = 62
// ProcedureCodeName = id-SecondaryRATDataUsageReport
// Criticality = ignore

int __si_s1ap_encode_pdu_SecondaryRATDataUsageReport( SI_S1AP_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_SecondaryRATDataUsageReport( SI_S1AP_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_SecondaryRATDataUsageReport( SI_S1AP_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport);

int __si_s1ap_memfree_pdu_SecondaryRATDataUsageReport( SI_S1AP_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport);



// ELEMENTARY-PROCEDURE = [0] uERadioCapabilityIDMapping  L:8677
// ProcedureCode = 63
// ProcedureCodeName = id-UERadioCapabilityIDMapping
// Criticality = reject

int __si_s1ap_encode_pdu_UERadioCapabilityIDMappingRequest( SI_S1AP_DT_PDU_UERadioCapabilityIDMappingRequest * objPDUUERadioCapabilityIDMappingRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UERadioCapabilityIDMappingRequest( SI_S1AP_DT_PDU_UERadioCapabilityIDMappingRequest * objPDUUERadioCapabilityIDMappingRequest, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UERadioCapabilityIDMappingRequest( SI_S1AP_DT_PDU_UERadioCapabilityIDMappingRequest * objPDUUERadioCapabilityIDMappingRequest);

int __si_s1ap_memfree_pdu_UERadioCapabilityIDMappingRequest( SI_S1AP_DT_PDU_UERadioCapabilityIDMappingRequest * objPDUUERadioCapabilityIDMappingRequest);



// ELEMENTARY-PROCEDURE = [0] uERadioCapabilityIDMapping  L:8677
// ProcedureCode = 63
// ProcedureCodeName = id-UERadioCapabilityIDMapping
// Criticality = reject

int __si_s1ap_encode_pdu_UERadioCapabilityIDMappingResponse( SI_S1AP_DT_PDU_UERadioCapabilityIDMappingResponse * objPDUUERadioCapabilityIDMappingResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_UERadioCapabilityIDMappingResponse( SI_S1AP_DT_PDU_UERadioCapabilityIDMappingResponse * objPDUUERadioCapabilityIDMappingResponse, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_UERadioCapabilityIDMappingResponse( SI_S1AP_DT_PDU_UERadioCapabilityIDMappingResponse * objPDUUERadioCapabilityIDMappingResponse);

int __si_s1ap_memfree_pdu_UERadioCapabilityIDMappingResponse( SI_S1AP_DT_PDU_UERadioCapabilityIDMappingResponse * objPDUUERadioCapabilityIDMappingResponse);



// ELEMENTARY-PROCEDURE = [0] handoverSuccess  L:8677
// ProcedureCode = 64
// ProcedureCodeName = id-HandoverSuccess
// Criticality = ignore

int __si_s1ap_encode_pdu_HandoverSuccess( SI_S1AP_DT_PDU_HandoverSuccess * objPDUHandoverSuccess, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_HandoverSuccess( SI_S1AP_DT_PDU_HandoverSuccess * objPDUHandoverSuccess, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_HandoverSuccess( SI_S1AP_DT_PDU_HandoverSuccess * objPDUHandoverSuccess);

int __si_s1ap_memfree_pdu_HandoverSuccess( SI_S1AP_DT_PDU_HandoverSuccess * objPDUHandoverSuccess);



// ELEMENTARY-PROCEDURE = [0] eNBEarlyStatusTransfer  L:8677
// ProcedureCode = 65
// ProcedureCodeName = id-eNBEarlyStatusTransfer
// Criticality = reject

int __si_s1ap_encode_pdu_ENBEarlyStatusTransfer( SI_S1AP_DT_PDU_ENBEarlyStatusTransfer * objPDUENBEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_ENBEarlyStatusTransfer( SI_S1AP_DT_PDU_ENBEarlyStatusTransfer * objPDUENBEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_ENBEarlyStatusTransfer( SI_S1AP_DT_PDU_ENBEarlyStatusTransfer * objPDUENBEarlyStatusTransfer);

int __si_s1ap_memfree_pdu_ENBEarlyStatusTransfer( SI_S1AP_DT_PDU_ENBEarlyStatusTransfer * objPDUENBEarlyStatusTransfer);



// ELEMENTARY-PROCEDURE = [0] mMEEarlyStatusTransfer  L:8677
// ProcedureCode = 66
// ProcedureCodeName = id-MMEEarlyStatusTransfer
// Criticality = ignore

int __si_s1ap_encode_pdu_MMEEarlyStatusTransfer( SI_S1AP_DT_PDU_MMEEarlyStatusTransfer * objPDUMMEEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_decode_pdu_MMEEarlyStatusTransfer( SI_S1AP_DT_PDU_MMEEarlyStatusTransfer * objPDUMMEEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_s1ap_debug_pdu_MMEEarlyStatusTransfer( SI_S1AP_DT_PDU_MMEEarlyStatusTransfer * objPDUMMEEarlyStatusTransfer);

int __si_s1ap_memfree_pdu_MMEEarlyStatusTransfer( SI_S1AP_DT_PDU_MMEEarlyStatusTransfer * objPDUMMEEarlyStatusTransfer);







#pragma pack(pop)
#endif
